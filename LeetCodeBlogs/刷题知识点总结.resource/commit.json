{"compress":true,"commitItems":[["9763875c-4952-4d7d-a05b-63a78dc50419",1567001446524,"public boolean isPalindrome(String s) {\n    if (s.trim().length() == 0 || s.trim() == null || s.trim().length() == 1) {\n        return true;\n  }\n    // 1.全部转换为小写字符\n  String inputString = s.toLowerCase();   int left = 0;\n int right = inputString.length() - 1;\n while (left <= right) {\n        while (!isLetter(inputString.charAt(left)) && left < inputString.length() - 1 ) {\n            left++;\n  }\n        while (!isLetter(inputString.charAt(right)) && right > 0) {\n            right--;\n  }\n        boolean equal = (inputString.charAt(left) == inputString.charAt(right));\n if (equal) {\n            left++;\n  right--;\n  } else {\n            return false;\n  }\n    }\n    return true; }",[[1567001407187,["GJX@GJXAIOU",[[-1,0,"public boolean isPalindrome(String s) {\n    if (s.trim().length() == 0 || s.trim() == null || s.trim().length() == 1) {\n        return true;\n  }\n    // 1.全部转换为小写字符\n  String inputString = s.toLowerCase();   int left = 0;\n int right = inputString.length() - 1;\n while (left <= right) {\n        while (!isLetter(inputString.charAt(left)) && left < inputString.length() - 1 ) {\n            left++;\n  }\n        while (!isLetter(inputString.charAt(right)) && right > 0) {\n            right--;\n  }\n        boolean equal = (inputString.charAt(left) == inputString.charAt(right));\n if (equal) {\n            left++;\n  right--;\n  } else {\n            return false;\n  }\n    }\n    return true; }"]],[0,682],[0,0]]],[1567001492926,["GJX@GJXAIOU",[[1,0,"- "]],[0,0],[2,2]]],[1567001494427,["GJX@GJXAIOU",[[-1,0,"- "]],[2,2],[0,0]]],[1567001500537,["GJX@GJXAIOU",[[1,0,"## 输入输出"]],[0,0],[7,7]]],[1567001500819,["GJX@GJXAIOU",[[1,7,"\n\n"]],[7,7],[8,8]]],[1567001500925,["GJX@GJXAIOU",[[1,9,"\n"]],[8,8],[9,9]]],[1567001501037,["GJX@GJXAIOU",[[1,10,"\n"]],[9,9],[10,10]]],[1567001505368,["GJX@GJXAIOU",[[1,10,"## 字符串"]],[10,10],[16,16]]],[1567001505724,["GJX@GJXAIOU",[[1,17,"\n"]],[16,16],[17,17]]],[1567001505843,["GJX@GJXAIOU",[[1,18,"\n"]],[17,17],[18,18]]],[1567001506443,["GJX@GJXAIOU",[[1,19,"\n"]],[18,18],[19,19]]],[1567001506549,["GJX@GJXAIOU",[[1,20,"\n"]],[19,19],[20,20]]],[1567001509493,["GJX@GJXAIOU",[[1,20,"### 数组"]],[20,20],[26,26]]],[1567001509811,["GJX@GJXAIOU",[[1,27,"\n"]],[26,26],[27,27]]],[1567001509916,["GJX@GJXAIOU",[[1,28,"\n"]],[27,27],[28,28]]],[1567001510026,["GJX@GJXAIOU",[[1,29,"\n"]],[28,28],[29,29]]],[1567001512349,["GJX@GJXAIOU",[[1,10,"\n"]],[8,8],[9,9]]],[1567001539998,["GJX@GJXAIOU",[[1,9,"- 如果在输入数组之前还有一行输入"]],[9,9],[26,26]]],[1567001593446,["GJX@GJXAIOU",[[1,26,"，则在上一个输入之后加上已"]],[26,26],[39,39]]],[1567001594989,["GJX@GJXAIOU",[[-1,38,"已"]],[39,39],[38,38]]],[1567001599813,["GJX@GJXAIOU",[[1,38,"一行：``"]],[38,38],[43,43]]],[1567001601556,["GJX@GJXAIOU",[[1,42,"scsn"]],[42,42],[46,46]]],[1567001602403,["GJX@GJXAIOU",[[-1,44,"sn"]],[46,46],[44,44]]],[1567001614412,["GJX@GJXAIOU",[[1,44,"anner.next()"]],[44,44],[56,56]]],[1567001631733,["GJX@GJXAIOU",[[1,54,"Line"]],[54,54],[58,58]]],[1567001635044,["GJX@GJXAIOU",[[1,61,"."]],[61,61],[62,62]]],[1567001636692,["GJX@GJXAIOU",[[1,63,"- \n"]],[62,62],[65,65]]],[1567001637371,["GJX@GJXAIOU",[[-1,63,"- "]],[65,65],[63,63]]],[1567001639732,["GJX@GJXAIOU",[[1,63,"lil"]],[63,63],[66,66]]],[1567001640740,["GJX@GJXAIOU",[[-1,63,"lil"]],[66,66],[63,63]]],[1567001642335,["GJX@GJXAIOU",[[1,63,"例如："]],[63,63],[66,66]]],[1567001643173,["GJX@GJXAIOU",[[1,68,"\n"]],[66,66],[67,67]]],[1567001645710,["GJX@GJXAIOU",[[1,67,"```"]],[67,67],[70,70]]],[1567001645732,["GJX@GJXAIOU",[[1,70,"language\n```\n"]],[70,70],[70,78]]],[1567001647099,["GJX@GJXAIOU",[[-1,70,"language"],[1,78,"j"]],[70,78],[71,71]]],[1567001647467,["GJX@GJXAIOU",[[1,71,"ava"]],[71,71],[74,74]]],[1567001647539,["GJX@GJXAIOU",[[1,75,"\n"]],[74,74],[75,75]]],[1567001660244,["GJX@GJXAIOU",[[1,75,"Scanner scanner = new Scanner(System.in); int targeSum = scanner.nextInt(); scanner.nextLine(); String inputString = scanner.nextLine();"]],[75,75],[211,211]]],[1567001662295,["GJX@GJXAIOU",[[-1,75,"Scanner scanner = new Scanner(System.in); int targeSum = scanner.nextInt(); scanner.nextLine(); String inputString = scanner.nextLine();"]],[211,211],[75,75]]],[1567001664211,["GJX@GJXAIOU",[[1,75," Scanner scanner = new Scanner(System.in);\n        int targeSum = scanner.nextInt();\n        scanner.nextLine();\n        String inputString = scanner.nextLine();"]],[75,75],[236,236]]],[1567001669414,["GJX@GJXAIOU",[[-1,124,"  "],[-1,166,"  "],[-1,188,"  "]],[126,236],[124,230]]],[1567001669819,["GJX@GJXAIOU",[[-1,122,"  "],[-1,162,"  "],[-1,184,"  "]],[124,230],[122,224]]],[1567001670115,["GJX@GJXAIOU",[[-1,120,"  "],[-1,158,"  "],[-1,180,"  "]],[122,224],[120,218]]],[1567001670427,["GJX@GJXAIOU",[[-1,118,"  "],[-1,154,"  "],[-1,176,"  "]],[120,218],[118,212]]],[1567001673443,["GJX@GJXAIOU",[[-1,75," "]],[76,76],[75,75]]],[1567001697357,["GJX@GJXAIOU",[[1,226,"- hul"]],[226,226],[231,231]]],[1567001697980,["GJX@GJXAIOU",[[-1,228,"hul"]],[231,231],[228,228]]],[1567001702535,["GJX@GJXAIOU",[[1,228,"忽略大小写："]],[228,228],[234,234]]],[1567001705773,["GJX@GJXAIOU",[[1,235,"- \n"]],[234,234],[237,237]]],[1567001706598,["GJX@GJXAIOU",[[1,235,"  "]],[237,237],[239,239]]],[1567001708352,["GJX@GJXAIOU",[[1,239,"方式一个"]],[239,239],[243,243]]],[1567001709163,["GJX@GJXAIOU",[[-1,242,"个"]],[243,243],[242,242]]],[1567001710896,["GJX@GJXAIOU",[[1,242,"：``"]],[242,242],[245,245]]],[1567001713255,["GJX@GJXAIOU",[[1,244,"string"]],[244,244],[250,250]]],[1567001714572,["GJX@GJXAIOU",[[-1,244,"string"]],[250,250],[244,244]]],[1567001716012,["GJX@GJXAIOU",[[1,244,"inputs"]],[244,244],[250,250]]],[1567001716523,["GJX@GJXAIOU",[[-1,249,"s"]],[250,250],[249,249]]],[1567001728421,["GJX@GJXAIOU",[[1,249,"String.toLowerCase()"]],[249,249],[269,269]]],[1567001745159,["GJX@GJXAIOU",[[1,270,"将所有的转换为小写即可，或者转换为"]],[270,270],[287,287]]],[1567001747524,["GJX@GJXAIOU",[[1,287,"大写；"]],[287,287],[290,290]]]],null,"GJX@GJXAIOU"]]}