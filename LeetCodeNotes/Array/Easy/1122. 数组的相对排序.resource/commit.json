{"compress":true,"commitItems":[["065121cd-0c78-43f1-ad26-c5622944da10",1565014622706,"",[[1565014562821,["GJX@GJXAIOU",[[1,0,"# Untitled\n\n\n\n"]],[0,0],[13,13]]],[1565014564407,["GJX@GJXAIOU",[[1,14,"\n"]],[13,13],[14,14]]],[1565014564540,["GJX@GJXAIOU",[[1,15,"\n"]],[14,14],[15,15]]],[1565014564678,["GJX@GJXAIOU",[[1,16,"\n"]],[15,15],[16,16]]],[1565014565205,["GJX@GJXAIOU",[[1,16,"执行结果：\n\n通过\n\n显示详情\n\n执行用时 :1 ms, 在所有 Java 提交中击败了99.83%的用户\n\n内存消耗 :35.8 MB, 在所有 Java 提交中击败了100.00%的用户"]],[16,16],[111,111]]],[1565014574118,["GJX@GJXAIOU",[[1,14,"`"],[-1,48," "],[1,49," "],[-1,53," "],[1,54," "],[-1,89," "],[1,90," "],[-1,94," "],[1,95," "]],[14,14],[15,15]]],[1565014574517,["GJX@GJXAIOU",[[1,15,"``"]],[15,15],[17,17]]],[1565014574540,["GJX@GJXAIOU",[[1,17,"language\n```\n"]],[17,17],[17,25]]],[1565014576047,["GJX@GJXAIOU",[[-1,17,"language"],[1,25,"j"]],[17,25],[18,18]]],[1565014576456,["GJX@GJXAIOU",[[1,18,"ava"]],[18,18],[21,21]]],[1565014576557,["GJX@GJXAIOU",[[1,22,"\n"]],[21,21],[22,22]]],[1565014577628,["GJX@GJXAIOU",[[1,22,"public class Solution {\n    public static int[] relativeSortArray(int[] arr1, int[] arr2) {\n\t\tint[] list = new int[1001];\n\t\tfor (int i = 0; i < arr1.length; i++) {\n\t\t\tlist[arr1[i]]++;\n\t\t}\n\t\tint k = 0;\n\t\tfor (int i = 0; i < arr2.length; i++) {\n\t\t\tint i1 = list[arr2[i]];\n\t\t\tfor (int j = 0; j < i1; j++) {\n\t\t\t\tarr1[k] = arr2[i];\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tlist[arr2[i]] = 0;\n\t\t}\n\t\tfor (int i = 0; i < list.length; i++) {\n\t\t\tint i1 = list[i];\n\t\t\tfor (int j = 0; j < i1; j++) {\n\t\t\t\tarr1[k] = i;\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn arr1;\n\t}\n\n}"]],[22,22],[544,544]]],[1565014597863,["GJX@GJXAIOU",[[-1,2,"Untit"],[1,7,"#### [1122\\. 数组的相对排序](https://"],[1,9,"etco"],[1,10,"e-cn.com/problems/relative-sort-array/)"]],[2,10],[78,78]]],[1565014601407,["GJX@GJXAIOU",[[-1,1," #### ["]],[1,8],[1,1]]],[1565014603692,["GJX@GJXAIOU",[[-1,15,"](https://leetcode-cn.com/problems/relative-sort-array/)"]],[15,71],[15,15]]],[1565014606295,["GJX@GJXAIOU",[[1,19,"\n"]],[16,16],[17,17]]],[1565014609501,["GJX@GJXAIOU",[[1,17,"# "]],[17,17],[19,19]]],[1565014610596,["GJX@GJXAIOU",[[-1,18," "]],[19,19],[18,18]]],[1565014611375,["GJX@GJXAIOU",[[1,18,"# #"]],[18,18],[21,21]]],[1565014612596,["GJX@GJXAIOU",[[-1,20,"#"]],[21,21],[20,20]]],[1565014616823,["GJX@GJXAIOU",[[1,20,"一、题目"]],[20,20],[24,24]]],[1565014617063,["GJX@GJXAIOU",[[1,27,"\n"]],[24,24],[25,25]]],[1565014617220,["GJX@GJXAIOU",[[1,28,"\n"]],[25,25],[26,26]]],[1565014617773,["GJX@GJXAIOU",[[1,29,"\n"]],[26,26],[27,27]]],[1565014618020,["GJX@GJXAIOU",[[1,30,"\n"]],[27,27],[28,28]]],[1565014621368,["GJX@GJXAIOU",[[1,28,"## 二、解答"]],[28,28],[35,35]]],[1565014621676,["GJX@GJXAIOU",[[1,38,"\n"]],[35,35],[36,36]]],[1565014634692,["GJX@GJXAIOU",[[1,26,"给你两个数组，arr1 和 arr2，\n\narr2 中的元素各不相同\narr2 中的每个元素都出现在 arr1 中\n对 arr1 中的元素进行排序，使 arr1 中项的相对顺序和 arr2 中的相对顺序相同。未在 arr2 中出现过的元素需要按照升序放在 arr1 的末尾。\n\n \n\n示例：\n\n输入：arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6]\n输出：[2,2,2,1,4,3,3,9,6,7,19]\n \n\n提示：\n\narr1.length, arr2.length <= 1000\n0 <= arr1[i], arr2[i] <= 1000\narr2 中的元素 arr2[i] 各不相同\narr2 中的每个元素 arr2[i] 都出现在 arr1 中\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/relative-sort-array\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[26,26],[491,491]]],[1565014677132,["GJX@GJXAIOU",[[1,504,"\n"]],[502,502],[503,503]]],[1565014677277,["GJX@GJXAIOU",[[1,505,"\n"]],[503,503],[504,504]]],[1565014677735,["GJX@GJXAIOU",[[1,504,"执行用时 :1 ms, 在所有 Java 提交中击败了99.83%的用户\n\n内存消耗 :36.1 MB, 在所有 Java 提交中击败了100.00%的用户"]],[504,504],[582,582]]],[1565014679887,["GJX@GJXAIOU",[[-1,39," "],[1,40," "],[-1,51," "],[1,52," "],[-1,76," "],[1,77," "],[-1,81," "],[1,82," "],[-1,90," "],[1,91," "],[-1,115," "],[1,116," "],[-1,120," "],[1,121," "],[-1,132," "],[1,133," "],[-1,137," "],[1,138," "],[-1,153," "],[1,154," "],[-1,158," "],[1,159," "],[-1,165," "],[1,166," "],[-1,258," "],[1,259," "],[-1,333," "],[1,334," "],[-1,338," "],[1,339," "],[-1,346," "],[1,347," "],[-1,363," "],[1,364," "],[-1,371," "],[1,372," "],[-1,376," "],[1,377," "],[-1,381," "],[1,382," "],[1,502,"`"],[-1,519," "],[1,520," "],[-1,524," "],[1,525," "],[-1,560," "],[1,561," "],[-1,565," "],[1,566," "]],[502,502],[503,503]]],[1565014681511,["GJX@GJXAIOU",[[1,503,"``sq;"]],[503,503],[508,508]]],[1565014682173,["GJX@GJXAIOU",[[-1,507,";"]],[508,508],[507,507]]],[1565014682645,["GJX@GJXAIOU",[[1,507,"l"]],[507,507],[508,508]]],[1565014683308,["GJX@GJXAIOU",[[1,510,"\n"]],[508,508],[509,509]]],[1565014683468,["GJX@GJXAIOU",[[1,511,"\n"]],[509,509],[510,510]]],[1565014684301,["GJX@GJXAIOU",[[1,510,"```"]],[510,510],[513,513]]],[1565014690786,["GJX@GJXAIOU",[[1,509,"public class Solution {\n public int[] relativeSortArray(int[] arr1, int[] arr2) {\n        int[] m = new int[1001];\n        \n        int[] ref = new int[arr1.length];\n        \n        for(int i = 0; i < arr1.length; i++) {\n            m[arr1[i]]++;\n        }\n        \n        int cnt = 0;\n        for(int i = 0; i < arr2.length; i++) {\n            while(m[arr2[i]] > 0) {\n                ref[cnt++] = arr2[i];\n                m[arr2[i]]--;\n            }\n        }\n        \n        for(int i = 0; i < 1001; i++) {\n            while(m[i] > 0) {\n                ref[cnt++] = i;\n                m[i]--;\n            }\n        }\n        return ref;\n}\n\n\n}"]],[509,509],[1156,1156]]],[1565014693949,["GJX@GJXAIOU",[[-1,1154,"\n"]],[1154,1154],[1153,1153]]],[1565014694293,["GJX@GJXAIOU",[[-1,1153,"\n"]],[1153,1153],[1152,1152]]],[1565014695702,["GJX@GJXAIOU",[[1,1151,"  "]],[1151,1151],[1153,1153]]],[1565014701556,["GJX@GJXAIOU",[[-1,265,"\n"]],[265,265],[264,264]]],[1565014702261,["GJX@GJXAIOU",[[-1,172,"\n"]],[172,172],[171,171]]],[1565014704660,["GJX@GJXAIOU",[[-1,46,"\n"]],[46,46],[45,45]]],[1565014706461,["GJX@GJXAIOU",[[-1,163,"\n"]],[164,164],[163,163]]],[1565014709413,["GJX@GJXAIOU",[[-1,5,"\\"]],[6,6],[5,5]]],[1565014710478,["GJX@GJXAIOU",[[1,1," "]],[1,1],[2,2]]],[1565014718031,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1565014718804,["GJX@GJXAIOU",[[1,0,"---\ntags: \n- 简单\n- 参考\n- 数组\n- 数学\nflag: green\nstyle: summer\ndate: '2019-7-11'\n---"]],[0,0],[78,78]]],[1565014724316,["GJX@GJXAIOU",[[-1,69,"7"]],[70,70],[69,69]]],[1565014724725,["GJX@GJXAIOU",[[1,69,"8"]],[69,69],[70,70]]],[1565014726292,["GJX@GJXAIOU",[[-1,71,"11"]],[73,73],[71,71]]],[1565014726736,["GJX@GJXAIOU",[[1,71,"5"]],[71,71],[72,72]]],[1565014733237,["GJX@GJXAIOU",[[-1,28,"数学"]],[28,30],[28,28]]],[1565014734671,["GJX@GJXAIOU",[[1,28,"pai"]],[28,28],[31,31]]],[1565014735332,["GJX@GJXAIOU",[[-1,28,"pai"]],[31,31],[28,28]]],[1565014737096,["GJX@GJXAIOU",[[1,28,"排序"]],[28,28],[30,30]]],[1565014743397,["GJX@GJXAIOU",[[1,576,"\n"]],[575,575],[576,576]]],[1565014743727,["GJX@GJXAIOU",[[1,576,"-"]],[576,576],[577,577]]],[1565014744349,["GJX@GJXAIOU",[[1,578,"\n"]],[577,577],[578,578]]],[1565014745565,["GJX@GJXAIOU",[[1,576," "]],[576,576],[577,577]]],[1565014746612,["GJX@GJXAIOU",[[-1,576," "]],[577,577],[576,576]]],[1565014749904,["GJX@GJXAIOU",[[1,577," 解法一："]],[577,577],[582,582]]],[1565014753116,["GJX@GJXAIOU",[[1,1324,"\n"]],[1323,1323],[1324,1324]]],[1565014753549,["GJX@GJXAIOU",[[1,1325,"\n"]],[1324,1324],[1325,1325]]],[1565014757785,["GJX@GJXAIOU",[[1,1324,"- 解法二："]],[1324,1324],[1330,1330]]],[1565014760365,["GJX@GJXAIOU",[[-1,1281,"\n"]],[1281,1281],[1280,1280]]],[1565014761359,["GJX@GJXAIOU",[[-1,1243,"\n"]],[1243,1243],[1242,1242]]],[1565014767228,["GJX@GJXAIOU",[[-1,1867,"执行结果：\n\n通过\n\n显示详情"]],[1882,1882],[1867,1867]]],[1565014768235,["GJX@GJXAIOU",[[-1,1868,"\n"]],[1868,1868],[1867,1867]]],[1565014768446,["GJX@GJXAIOU",[[-1,1867,"\n"]],[1867,1867],[1866,1866]]],[1565014768620,["GJX@GJXAIOU",[[-1,1866,"\n"]],[1866,1866],[1865,1865]]],[1565014769116,["GJX@GJXAIOU",[[-1,1865,"\n"]],[1865,1865],[1864,1864]]],[1565014810476,["GJX@GJXAIOU",[[1,1528,"\n\t\t"]],[1525,1525],[1528,1528]]],[1565015051381,["GJX@GJXAIOU",[[1,1430,"    \n"]],[1429,1429],[1434,1434]]],[1565015052249,["GJX@GJXAIOU",[[1,1434,"、、"]],[1434,1434],[1436,1436]]],[1565015052909,["GJX@GJXAIOU",[[-1,1434,"、、"]],[1436,1436],[1434,1434]]],[1565015057446,["GJX@GJXAIOU",[[1,1434,"// listy"]],[1434,1434],[1442,1442]]],[1565015058070,["GJX@GJXAIOU",[[-1,1441,"y"]],[1442,1442],[1441,1441]]],[1565015067582,["GJX@GJXAIOU",[[1,1441,"用于统计arr1中"]],[1441,1441],[1450,1450]]],[1565015069941,["GJX@GJXAIOU",[[-1,1448,"1"]],[1449,1449],[1448,1448]]],[1565015070189,["GJX@GJXAIOU",[[1,1448,"2"]],[1448,1448],[1449,1449]]],[1565015100192,["GJX@GJXAIOU",[[1,1450,"每一个数字在arr1中出现的次数，下标为该数字"]],[1450,1450],[1473,1473]]],[1565015137204,["GJX@GJXAIOU",[[-1,1448,"2中每一个数字在arr"]],[1445,1456],[1445,1445]]],[1565015143207,["GJX@GJXAIOU",[[1,1450,"每个数字"]],[1450,1450],[1454,1454]]]],null,"GJX@GJXAIOU"],["7287d4ea-f950-442b-96da-52c488d75128",1566911673085,"---\ntags: \n- 简单\n- 参考\n- 数组\n- 排序\nflag: green\nstyle: summer\ndate: '2019-8-5'\n---\n# 1122. 数组的相对排序\n\n## 一、题目\n\n给你两个数组，arr1 和 arr2，\narr2 中的元素各不相同\narr2 中的每个元素都出现在 arr1 中\n对 arr1 中的元素进行排序，使 arr1 中项的相对顺序和 arr2 中的相对顺序相同。未在 arr2 中出现过的元素需要按照升序放在 arr1 的末尾。\n \n\n示例：\n输入：arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6]\n输出：[2,2,2,1,4,3,3,9,6,7,19]\n \n\n提示：\narr1.length, arr2.length <= 1000\n0 <= arr1[i], arr2[i] <= 1000\narr2 中的元素 arr2[i] 各不相同\narr2 中的每个元素 arr2[i] 都出现在 arr1 中\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/relative-sort-array\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n## 二、解答\n\n- 解法一：\n\n```sql\npublic class Solution {\n public int[] relativeSortArray(int[] arr1, int[] arr2) {\n        int[] m = new int[1001];\n        \n        int[] ref = new int[arr1.length];\n        \n        for(int i = 0; i < arr1.length; i++) {\n            m[arr1[i]]++;\n        }\n        \n        int cnt = 0;\n        for(int i = 0; i < arr2.length; i++) {\n            while(m[arr2[i]] > 0) {\n                ref[cnt++] = arr2[i];\n                m[arr2[i]]--;\n            }\n        }\n        \n        for(int i = 0; i < 1001; i++) {\n            while(m[i] > 0) {\n                ref[cnt++] = i;\n                m[i]--;\n            }\n        }\n        return ref;\n  }\n}\n```\n执行用时 :1 ms, 在所有 Java 提交中击败了99.83%的用户\n内存消耗 :36.1 MB, 在所有 Java 提交中击败了100.00%的用户\n\n- 解法二：\n\n```java\npublic class Solution {\n    public static int[] relativeSortArray(int[] arr1, int[] arr2) {\n    // list用于统计arr1中每个数字出现的次数，下标为该数字\n\t\tint[] list = new int[1001];\n\t\tfor (int i = 0; i < arr1.length; i++) {\n\t\t\tlist[arr1[i]]++;\n\t\t}\n\t\t\n\t\tint k = 0;\n\t\tfor (int i = 0; i < arr2.length; i++) {\n\t\t\tint i1 = list[arr2[i]];\n\t\t\tfor (int j = 0; j < i1; j++) {\n\t\t\t\tarr1[k] = arr2[i];\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tlist[arr2[i]] = 0;\n\t\t}\n\t\tfor (int i = 0; i < list.length; i++) {\n\t\t\tint i1 = list[i];\n\t\t\tfor (int j = 0; j < i1; j++) {\n\t\t\t\tarr1[k] = i;\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn arr1;\n\t}\n\n}\n```\n执行用时 :1 ms, 在所有 Java 提交中击败了99.83%的用户\n\n内存消耗 :35.8 MB, 在所有 Java 提交中击败了100.00%的用户\n",[[1566911645328,["GJX@GJXAIOU",[[-1,459,"来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/relative-sort-array\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[459,565],[459,459]]],[1566911646398,["GJX@GJXAIOU",[[-1,460,"\n"]],[459,459],[458,458]]]],null,"GJX@GJXAIOU"]]}