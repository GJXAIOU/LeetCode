{"compress":true,"commitItems":[["6f0cba42-bb7a-4532-87cf-31fab8b1f960",1561809254853,"",[[1561809216459,["GJX@GJXAIOU",[[1,0,"# 717.1比特与2比特字符\n\n\n\n"]],[0,0],[18,18]]],[1561809224891,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1561809225026,["GJX@GJXAIOU",[[1,0,"\n"]],[1,1],[2,2]]],[1561809226511,["GJX@GJXAIOU",[[1,0,"---\ntags: \n- 简单\n- 完成\n- 数组\nflag: green\nstyle: summer\ndate: '2019-6-27'\n---"]],[0,0],[73,73]]],[1561809228466,["GJX@GJXAIOU",[[-1,18,"完成"]],[20,20],[18,18]]],[1561809234001,["GJX@GJXAIOU",[[-1,65,"7"]],[66,66],[65,65]]],[1561809234781,["GJX@GJXAIOU",[[1,65,"9"]],[65,65],[66,66]]],[1561809248744,["GJX@GJXAIOU",[[1,90,"## 一、题目"]],[90,90],[97,97]]],[1561809249019,["GJX@GJXAIOU",[[1,99,"\n"]],[97,97],[98,98]]],[1561809249136,["GJX@GJXAIOU",[[1,100,"\n"]],[98,98],[99,99]]],[1561809249384,["GJX@GJXAIOU",[[1,101,"\n"]],[99,99],[100,100]]],[1561809249498,["GJX@GJXAIOU",[[1,102,"\n"]],[100,100],[101,101]]],[1561809254213,["GJX@GJXAIOU",[[1,101,"## 二、结点"]],[101,101],[108,108]]],[1561809254822,["GJX@GJXAIOU",[[-1,106,"结点"]],[108,108],[106,106]]],[1561809257110,["GJX@GJXAIOU",[[1,106,"解答"]],[106,106],[108,108]]],[1561809259335,["GJX@GJXAIOU",[[1,99,"有两种特殊字符。第一种字符可以用一比特0来表示。第二种字符可以用两比特(10 或 11)来表示。\n\n现给一个由若干比特组成的字符串。问最后一个字符是否必定为一个一比特字符。给定的字符串总是由0结束。\n\n示例 1:\n\n输入: \nbits = [1, 0, 0]\n输出: True\n解释: \n唯一的编码方式是一个两比特字符和一个一比特字符。所以最后一个字符是一比特字符。\n示例 2:\n\n输入: \nbits = [1, 1, 1, 0]\n输出: False\n解释: \n唯一的编码方式是两比特字符和两比特字符。所以最后一个字符不是一比特字符。\n注意:\n\n1 <= len(bits) <= 1000.\nbits[i] 总是0 或 1.\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/1-bit-and-2-bit-characters\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[99,99],[527,527]]],[1561809376765,["GJX@GJXAIOU",[[1,538,"\n"]],[537,537],[538,538]]],[1561809376898,["GJX@GJXAIOU",[[1,539,"\n"]],[538,538],[539,539]]],[1561809377057,["GJX@GJXAIOU",[[1,540,"\n"]],[539,539],[540,540]]],[1561809377430,["GJX@GJXAIOU",[[1,541,"\n"]],[540,540],[541,541]]],[1561809377594,["GJX@GJXAIOU",[[1,542,"\n"]],[541,541],[542,542]]],[1561811540382,["GJX@GJXAIOU",[[-1,137," 或 "],[1,140," 或 "],[-1,202," "],[1,203," "],[-1,285," "],[1,286," "],[-1,409," "],[1,410," "],[1,538,"- 子饿哦"]],[538,538],[543,543]]],[1561811541113,["GJX@GJXAIOU",[[-1,540,"子饿哦"]],[543,543],[540,540]]],[1561811543398,["GJX@GJXAIOU",[[1,540,"自我解答："]],[540,540],[545,545]]],[1561811544185,["GJX@GJXAIOU",[[1,546,"- \n"]],[545,545],[548,548]]],[1561811545524,["GJX@GJXAIOU",[[-1,546,"- "]],[548,548],[546,546]]],[1561811549699,["GJX@GJXAIOU",[[1,546,"```"]],[546,546],[549,549]]],[1561811549722,["GJX@GJXAIOU",[[1,549,"language\n```\n"]],[549,549],[549,557]]],[1561811550698,["GJX@GJXAIOU",[[-1,549,"language"],[1,557,"j"]],[549,557],[550,550]]],[1561811551947,["GJX@GJXAIOU",[[1,550,"ava"]],[550,550],[553,553]]],[1561811552216,["GJX@GJXAIOU",[[1,554,"\n"]],[553,553],[554,554]]],[1561811553150,["GJX@GJXAIOU",[[1,554,"class Solution {\n    public boolean isOneBitCharacter(int[] bits) {\n        //分两种情况\n        /*\n            一、倒数第二个为0则必定返回true;\n            二、倒数第二个不为0\n\n        */\n\n        int length = bits.length;\n        if (length == 1) {\n            return true;         \n        }\n\n        if (length == 2) {\n            if (bits[0] == 0) {\n                return true;\n            }else{\n                return false;\n            }\n        }\n\n        if (length == 3) {\n            if (bits[0] == 1) {\n                return true;\n            }else if(bits[1] == 1){\n                return false;\n            }else{\n                return true;\n            }\n        }\n        //第一种：倒数第二位为0\n        if (bits[length - 2] == 0) {\n            return true;\n        }\n\n        //第二种：倒数第二位不为0\n        for (int i = 0; i < length - 1; i++ ) {\n            if (bits[i] == 0) {\n                if (i == length - 2) {\n                    return true; //返回false;\n                }else if (i == length - 3) {\n                    if(bits[i + 1] == 0){\n                         return true; //返回 true;\n                    }else{\n                        return false;\n                    }\n               \n                 }\n            }else{\n                 if (i == length - 2) {\n                    return false; //返回false;\n                 }else if (i == length - 3) {\n                    return true; //返回 true;\n                 }\n                i ++;\n            }\n        \n        }\n        return false;\n    }\n}"]],[554,554],[2047,2047]]],[1561811558042,["GJX@GJXAIOU",[[1,2057,"\n"]],[2051,2051],[2052,2052]]],[1561811558987,["GJX@GJXAIOU",[[1,2052,"shijia"]],[2052,2052],[2058,2058]]],[1561811559994,["GJX@GJXAIOU",[[-1,2052,"shijia"]],[2058,2058],[2052,2052]]],[1561811564460,["GJX@GJXAIOU",[[1,2052,"时间复杂度："]],[2052,2052],[2058,2058]]],[1561811564706,["GJX@GJXAIOU",[[1,2064,"\n"]],[2058,2058],[2059,2059]]],[1561811565249,["GJX@GJXAIOU",[[-1,2064,"\n"]],[2059,2059],[2058,2058]]],[1561811565996,["GJX@GJXAIOU",[[-1,2052,"时间复杂度："]],[2058,2058],[2052,2052]]],[1561811568980,["GJX@GJXAIOU",[[1,2052,"复杂度分析："]],[2052,2052],[2058,2058]]],[1561811569765,["GJX@GJXAIOU",[[1,2064,"\n"]],[2058,2058],[2059,2059]]],[1561811579253,["GJX@GJXAIOU",[[1,2059,"执行用时 :1 ms, 在所有 Java 提交中击败了99.70%的用户\n\n内存消耗 :37.1 MB, 在所有 Java 提交中击败了83.04%的用户"]],[2059,2059],[2136,2136]]],[1561811581449,["GJX@GJXAIOU",[[-1,2096,"\n"]],[2096,2096],[2095,2095]]],[1561811587565,["GJX@GJXAIOU",[[1,18,"完成"],[-1,2074," "],[1,2075," "],[-1,2079," "],[1,2080," "],[-1,2114," "],[1,2115," "],[-1,2119," "],[1,2120," "]],[18,18],[20,20]]],[1561811598629,["GJX@GJXAIOU",[[-1,706,"\n"]],[706,706],[705,705]]],[1561811604903,["GJX@GJXAIOU",[[1,717,"        "]],[717,717],[725,725]]],[1561811845229,["GJX@GJXAIOU",[[1,1337,",bianli"]],[1337,1337],[1344,1344]]],[1561811846636,["GJX@GJXAIOU",[[-1,1338,"bianli"]],[1344,1344],[1338,1338]]],[1561811851574,["GJX@GJXAIOU",[[1,1338,"遍历数组"]],[1338,1338],[1342,1342]]],[1561811940415,["GJX@GJXAIOU",[[-1,1496,"/返回false;"]],[1505,1505],[1496,1496]]],[1561811942035,["GJX@GJXAIOU",[[1,1496,"、"]],[1496,1496],[1497,1497]]],[1561811942570,["GJX@GJXAIOU",[[-1,1496,"、"]],[1497,1497],[1496,1496]]],[1561811943098,["GJX@GJXAIOU",[[1,1496,"/"]],[1496,1496],[1497,1497]]],[1561811990394,["GJX@GJXAIOU",[[1,1497,"dang "]],[1497,1497],[1502,1502]]],[1561811991618,["GJX@GJXAIOU",[[-1,1497,"dang "]],[1502,1502],[1497,1497]]],[1561812002399,["GJX@GJXAIOU",[[1,1497,"当倒数第二位为0的时候"]],[1497,1497],[1508,1508]]],[1561812027919,["GJX@GJXAIOU",[[-1,1220,"        //第一种：倒数第二位为0\n        if (bits[length - 2] == 0) {\n            return true;\n        }"]],[1220,1313],[1220,1220]]],[1561812028624,["GJX@GJXAIOU",[[-1,1221,"\n"]],[1220,1220],[1219,1219]]],[1561812031290,["GJX@GJXAIOU",[[-1,1221,"        //第二种：倒数第二位不为0,遍历数组"]],[1221,1248],[1221,1221]]],[1561812031871,["GJX@GJXAIOU",[[-1,1221,"\n"]],[1221,1221],[1220,1220]]],[1561812048170,["GJX@GJXAIOU",[[1,1663,"、、"]],[1663,1663],[1665,1665]]],[1561812048831,["GJX@GJXAIOU",[[-1,1663,"、、"]],[1665,1665],[1663,1663]]],[1561812049432,["GJX@GJXAIOU",[[1,1663,"/"]],[1663,1663],[1664,1664]]],[1561812051072,["GJX@GJXAIOU",[[-1,1663,"/"]],[1664,1664],[1663,1663]]],[1561812059269,["GJX@GJXAIOU",[[1,1879," //当bits【"]],[1879,1879],[1888,1888]]],[1561812060292,["GJX@GJXAIOU",[[-1,1887,"【"]],[1888,1888],[1887,1887]]],[1561812073361,["GJX@GJXAIOU",[[1,1887,"[i] = 1时候，跳两个"]],[1887,1887],[1900,1900]]],[1561812084329,["GJX@GJXAIOU",[[-1,1875," "]],[1876,1876],[1875,1875]]],[1561812091865,["GJX@GJXAIOU",[[-1,1609,"\n"]],[1610,1610],[1609,1609]]],[1561812109611,["GJX@GJXAIOU",[[1,1431,"、、"]],[1431,1431],[1433,1433]]],[1561812110360,["GJX@GJXAIOU",[[-1,1431,"、、"]],[1433,1433],[1431,1431]]],[1561812120907,["GJX@GJXAIOU",[[1,1431,"//当倒数第三位为0的时候"]],[1431,1431],[1444,1444]]],[1561812124833,["GJX@GJXAIOU",[[-1,1373,"//当倒数第二位为0的时候"]],[1373,1386],[1373,1373]]],[1561812126324,["GJX@GJXAIOU",[[1,1339,"//当倒数第二位为0的时候"]],[1339,1339],[1352,1352]]],[1561812132000,["GJX@GJXAIOU",[[-1,1339,"//当倒数第二位为0的时候"]],[1339,1352],[1339,1339]]],[1561812133473,["GJX@GJXAIOU",[[1,1313,"\n            "]],[1300,1300],[1313,1313]]],[1561812133872,["GJX@GJXAIOU",[[1,1313,"//当倒数第二位为0的时候"]],[1313,1313],[1326,1326]]],[1561812136172,["GJX@GJXAIOU",[[1,1313,"    "]],[1312,1312],[1316,1316]]],[1561812140105,["GJX@GJXAIOU",[[-1,1448,"//当倒数第三位为0的时候"]],[1448,1461],[1448,1448]]],[1561812142244,["GJX@GJXAIOU",[[1,1420,"    \n                "]],[1403,1403],[1424,1424]]],[1561812142684,["GJX@GJXAIOU",[[1,1424,"//当倒数第三位为0的时候"]],[1424,1424],[1437,1437]]],[1561812146441,["GJX@GJXAIOU",[[-1,1420,"    "]],[1424,1424],[1420,1420]]],[1561812158260,["GJX@GJXAIOU",[[1,1495,"\n                "]],[1478,1478],[1495,1495]]],[1561812160688,["GJX@GJXAIOU",[[1,1495,"//  "]],[1495,1495],[1499,1499]]],[1561812161577,["GJX@GJXAIOU",[[-1,1497,"  "]],[1499,1499],[1497,1497]]],[1561812163264,["GJX@GJXAIOU",[[1,1495,"  "]],[1495,1495],[1497,1497]]],[1561812174606,["GJX@GJXAIOU",[[1,1499,"且当倒数第二位为0的时候"]],[1499,1499],[1511,1511]]],[1561812180328,["GJX@GJXAIOU",[[1,1650,"\n                    "]],[1629,1629],[1650,1650]]],[1561812183281,["GJX@GJXAIOU",[[1,1650,"//qie"]],[1650,1650],[1655,1655]]],[1561812184191,["GJX@GJXAIOU",[[-1,1652,"qie"]],[1655,1655],[1652,1652]]],[1561812187998,["GJX@GJXAIOU",[[1,1652,"且当大搜狐"]],[1652,1652],[1657,1657]]],[1561812189144,["GJX@GJXAIOU",[[-1,1654,"大搜狐"]],[1657,1657],[1654,1654]]],[1561812194916,["GJX@GJXAIOU",[[1,1654,"倒数第二位为1"]],[1654,1654],[1661,1661]]],[1561812196378,["GJX@GJXAIOU",[[1,1661,"的时候"]],[1661,1661],[1664,1664]]],[1561812198784,["GJX@GJXAIOU",[[1,1497,"  "]],[1497,1497],[1499,1499]]],[1561812211939,["GJX@GJXAIOU",[[1,1779,"、、"]],[1779,1779],[1781,1781]]],[1561812212635,["GJX@GJXAIOU",[[-1,1779,"、、"]],[1781,1781],[1779,1779]]],[1561812214202,["GJX@GJXAIOU",[[1,1779,"//dao"]],[1779,1779],[1784,1784]]],[1561812214816,["GJX@GJXAIOU",[[-1,1781,"dao"]],[1784,1784],[1781,1781]]],[1561812219548,["GJX@GJXAIOU",[[1,1781,"到吧【"]],[1781,1781],[1784,1784]]],[1561812220688,["GJX@GJXAIOU",[[-1,1782,"吧【"]],[1784,1784],[1782,1782]]],[1561812223739,["GJX@GJXAIOU",[[1,1782,"b[i】"]],[1782,1782],[1786,1786]]],[1561812224415,["GJX@GJXAIOU",[[-1,1785,"】"]],[1786,1786],[1785,1785]]],[1561812224938,["GJX@GJXAIOU",[[1,1785,"】"]],[1785,1785],[1786,1786]]],[1561812225392,["GJX@GJXAIOU",[[-1,1785,"】"]],[1786,1786],[1785,1785]]],[1561812225881,["GJX@GJXAIOU",[[1,1785,"["]],[1785,1785],[1786,1786]]],[1561812226503,["GJX@GJXAIOU",[[-1,1785,"["]],[1786,1786],[1785,1785]]],[1561812231906,["GJX@GJXAIOU",[[1,1785,"]为1的时候"]],[1785,1785],[1791,1791]]],[1561812235809,["GJX@GJXAIOU",[[1,1804,"\n            "]],[1791,1791],[1804,1804]]],[1561812237999,["GJX@GJXAIOU",[[1,1804,"      "]],[1804,1804],[1810,1810]]],[1561812238559,["GJX@GJXAIOU",[[-1,1809," "]],[1810,1810],[1809,1809]]],[1561812245395,["GJX@GJXAIOU",[[1,1809,"//当daosh"]],[1809,1809],[1817,1817]]],[1561812246280,["GJX@GJXAIOU",[[-1,1812,"daosh"]],[1817,1817],[1812,1812]]],[1561812254517,["GJX@GJXAIOU",[[1,1812,"倒数第三位为1的手"]],[1812,1812],[1821,1821]]],[1561812255161,["GJX@GJXAIOU",[[-1,1820,"手"]],[1821,1821],[1820,1820]]],[1561812256317,["GJX@GJXAIOU",[[1,1820,"时候"]],[1820,1820],[1822,1822]]],[1561812260184,["GJX@GJXAIOU",[[1,1925,"   \n                 "]],[1907,1907],[1928,1928]]],[1561812261202,["GJX@GJXAIOU",[[1,1928,"//"]],[1928,1928],[1930,1930]]],[1561812263026,["GJX@GJXAIOU",[[-1,1925,"   //"]],[1930,1930],[1925,1925]]],[1561812263755,["GJX@GJXAIOU",[[1,1925,"、、"]],[1925,1925],[1927,1927]]],[1561812264337,["GJX@GJXAIOU",[[-1,1925,"、、"]],[1927,1927],[1925,1925]]],[1561812284499,["GJX@GJXAIOU",[[1,1925,"//当倒数第二位为1的手"]],[1925,1925],[1937,1937]]],[1561812287092,["GJX@GJXAIOU",[[-1,1936,"手"]],[1937,1937],[1936,1936]]],[1561812288484,["GJX@GJXAIOU",[[1,1936,"话"]],[1936,1936],[1937,1937]]],[1561812292140,["GJX@GJXAIOU",[[-1,1934,"1"]],[1935,1935],[1934,1934]]],[1561812292474,["GJX@GJXAIOU",[[1,1934,"2"]],[1934,1934],[1935,1935]]],[1561812297792,["GJX@GJXAIOU",[[-1,1934,"2"]],[1935,1935],[1934,1934]]],[1561812297985,["GJX@GJXAIOU",[[1,1934,"3"]],[1934,1934],[1935,1935]]],[1561812299704,["GJX@GJXAIOU",[[-1,1818,"1"]],[1819,1819],[1818,1818]]],[1561812300211,["GJX@GJXAIOU",[[1,1818,"2"]],[1818,1818],[1819,1819]]],[1561812305465,["GJX@GJXAIOU",[[-1,1818,"2"]],[1819,1819],[1818,1818]]],[1561812305689,["GJX@GJXAIOU",[[1,1818,"1"]],[1818,1818],[1819,1819]]],[1561812308466,["GJX@GJXAIOU",[[-1,1815,"三"]],[1816,1816],[1815,1815]]],[1561812310699,["GJX@GJXAIOU",[[1,1815,"二"]],[1815,1815],[1816,1816]]],[1561812313720,["GJX@GJXAIOU",[[-1,1931,"二"]],[1932,1932],[1931,1931]]],[1561812314629,["GJX@GJXAIOU",[[1,1931,"三"]],[1931,1931],[1932,1932]]],[1561812315897,["GJX@GJXAIOU",[[-1,1934,"3"]],[1935,1935],[1934,1934]]],[1561812316138,["GJX@GJXAIOU",[[1,1934,"1"]],[1934,1934],[1935,1935]]],[1561812323208,["GJX@GJXAIOU",[[-1,651,"            一、倒数第二个为0则必定返回true;\n            二、倒数第二个不为0"]],[652,705],[651,651]]],[1561812325588,["GJX@GJXAIOU",[[-1,624,"        //分两种情况\n        /*\n\n        */"]],[624,662],[624,624]]],[1561812326176,["GJX@GJXAIOU",[[-1,624,"\n"]],[624,624],[623,623]]],[1561812331203,["GJX@GJXAIOU",[[1,627,"//当"]],[627,627],[630,630]]],[1561812332800,["GJX@GJXAIOU",[[-1,629,"   //当"]],[630,630],[624,624]]],[1561812333293,["GJX@GJXAIOU",[[-1,623,"\n"]],[624,624],[623,623]]],[1561812336153,["GJX@GJXAIOU",[[1,671,"\n        "]],[662,662],[671,671]]],[1561812360168,["GJX@GJXAIOU",[[1,905,"        "]],[905,905],[913,913]]],[1561812361059,["GJX@GJXAIOU",[[-1,905,"        "],[1,913,"\n"]],[913,913],[906,906]]],[1561812363236,["GJX@GJXAIOU",[[1,906,"                //长度为3，第一位为1，结果为true,第一位为0则看第二位，\n        //第二位为1，结果为false；"]],[906,906],[980,980]]],[1561812366362,["GJX@GJXAIOU",[[-1,914,"        "]],[922,922],[914,914]]],[1561812369128,["GJX@GJXAIOU",[[1,744,"\n"]],[743,743],[744,744]]],[1561812370440,["GJX@GJXAIOU",[[1,744,"        "]],[744,744],[752,752]]],[1561812435101,[null,[[-1,626,"//"],[1,628,"  "]],[626,626],[630,630]]],[1561812435101,[null,[[1,626,"//"],[-1,626,"  "]],[630,630],[626,626]]],[1561812377656,["GJX@GJXAIOU",[[1,752,"//长度为2，看第一位为0 or 1，为0则为true，反之为false；"]],[752,752],[789,789]]],[1561812380016,["GJX@GJXAIOU",[[-1,663,"        "],[1,671,"\n"]],[671,671],[664,664]]],[1561812387952,["GJX@GJXAIOU",[[1,664,"        //长度为1，因为最后一位必定为0，结果为true"]],[664,664],[697,697]]],[1561812392936,["GJX@GJXAIOU",[[1,1271,"        "]],[1271,1271],[1279,1279]]],[1561812393720,["GJX@GJXAIOU",[[-1,1271,"        "],[1,1279,"\n"]],[1279,1279],[1272,1272]]],[1561812394026,["GJX@GJXAIOU",[[1,1273,"\n"]],[1272,1272],[1273,1273]]],[1561812399106,["GJX@GJXAIOU",[[1,1273,"        、、"]],[1273,1273],[1283,1283]]],[1561812399704,["GJX@GJXAIOU",[[-1,1281,"、、"]],[1283,1283],[1281,1281]]],[1561812401658,["GJX@GJXAIOU",[[1,1281,"//daong"]],[1281,1281],[1288,1288]]],[1561812402544,["GJX@GJXAIOU",[[-1,1283,"daong"]],[1288,1288],[1283,1283]]],[1561812410218,["GJX@GJXAIOU",[[1,1283,"当某位为0"]],[1283,1283],[1288,1288]]],[1561812414307,["GJX@GJXAIOU",[[-1,1286,"为0"]],[1288,1288],[1286,1286]]],[1561812420558,["GJX@GJXAIOU",[[1,1286,"值为0时候，i++;"]],[1286,1286],[1296,1296]]],[1561812424624,["GJX@GJXAIOU",[[1,1305,"\n        "]],[1296,1296],[1305,1305]]],[1561812430315,["GJX@GJXAIOU",[[1,1305,"//当某位置为"]],[1305,1305],[1312,1312]]],[1561812432747,["GJX@GJXAIOU",[[-1,1310,"置"]],[1311,1311],[1310,1310]]],[1561812495103,[null,[[-1,626,"//"],[1,628,"  "]],[626,626],[630,630]]],[1561812495103,[null,[[1,626,"//"],[-1,626,"  "]],[630,630],[626,626]]],[1561812436613,["GJX@GJXAIOU",[[1,1310,"值"]],[1310,1310],[1311,1311]]],[1561812440609,["GJX@GJXAIOU",[[1,1312,"1的是会有"]],[1312,1312],[1317,1317]]],[1561812442603,["GJX@GJXAIOU",[[-1,1313,"的是会有"]],[1317,1317],[1313,1313]]],[1561812451030,["GJX@GJXAIOU",[[1,1313,"时候，i++"]],[1313,1313],[1319,1319]]],[1561812451520,["GJX@GJXAIOU",[[-1,1318,"+"]],[1319,1319],[1318,1318]]],[1561812453674,["GJX@GJXAIOU",[[1,1318,"= 2；"]],[1318,1318],[1322,1322]]],[1561812455378,["GJX@GJXAIOU",[[1,1317," "]],[1317,1317],[1318,1318]]],[1561812735103,[null,[[-1,626,"//"],[1,628,"  "]],[626,626],[630,630]]],[1561812735103,[null,[[1,626,"//"],[-1,626,"  "]],[630,630],[626,626]]],[1561812700143,["GJX@GJXAIOU",[[1,540,"\n"]],[539,539],[540,540]]],[1561812700263,["GJX@GJXAIOU",[[1,541,"\n"]],[540,540],[541,541]]],[1561812700375,["GJX@GJXAIOU",[[1,542,"\n"]],[541,541],[542,542]]],[1561812700495,["GJX@GJXAIOU",[[1,543,"\n"]],[542,542],[543,543]]],[1561812700601,["GJX@GJXAIOU",[[1,544,"\n"]],[543,543],[544,544]]],[1561812706277,["GJX@GJXAIOU",[[1,540,"- 大佬的解法："]],[540,540],[548,548]]],[1561812706602,["GJX@GJXAIOU",[[1,549,"- \n"]],[548,548],[551,551]]],[1561812707431,["GJX@GJXAIOU",[[-1,549,"- "]],[551,551],[549,549]]],[1561812707751,["GJX@GJXAIOU",[[-1,553,"\n"]],[549,549],[548,548]]],[1561812708655,["GJX@GJXAIOU",[[1,549,"- \n"]],[548,548],[551,551]]],[1561812709231,["GJX@GJXAIOU",[[-1,549,"- "]],[551,551],[549,549]]],[1561812712065,["GJX@GJXAIOU",[[1,549,"```java"]],[549,549],[556,556]]],[1561812712174,["GJX@GJXAIOU",[[1,561,"\n"]],[556,556],[557,557]]],[1561812712832,["GJX@GJXAIOU",[[1,562,"\n"]],[557,557],[558,558]]],[1561812713689,["GJX@GJXAIOU",[[1,558,"```"]],[558,558],[561,561]]],[1561812715184,["GJX@GJXAIOU",[[1,557,"```angelscript\nclass Solution {\n   public boolean isOneBitCharacter(int[] bits) {\n        int i;\n        for (i = 0; i < bits.length - 1; i++) {\n            if (bits[i] == 1)\n                i++;\n        }\n        if (i >= bits.length || bits[i] == 1)\n            return false;\n        return true;\n    }\n}\n```"]],[557,557],[867,867]]],[1561812718401,["GJX@GJXAIOU",[[-1,557,"```angelscript"]],[557,571],[557,557]]],[1561812721041,["GJX@GJXAIOU",[[-1,850,"```"]],[850,853],[850,850]]],[1561812734547,["GJX@GJXAIOU",[[1,549,"- \n"]],[548,548],[551,551]]],[1561812734776,["GJX@GJXAIOU",[[-1,550," "]],[551,551],[550,550]]],[1561812795108,[null,[[-1,947,"//"],[1,949,"  "]],[947,947],[951,951]]],[1561812795108,[null,[[1,947,"//"],[-1,947,"  "]],[951,951],[947,947]]],[1561812735151,["GJX@GJXAIOU",[[-1,549,"-"]],[550,550],[549,549]]],[1561812736079,["GJX@GJXAIOU",[[1,549,"Java,100%,遍历数组,是1的话就跳过下一个,是零的话就不跳过下一个,继续遍历.最后是1或者没有了,就是false,否则是true."]],[549,549],[618,618]]],[1561812738858,["GJX@GJXAIOU",[[-1,549,"Java,100%,"]],[549,559],[549,549]]],[1561814767669,[null,[[-1,1005,"//"],[1,1007,"  "]],[1005,1005],[1009,1009]]],[1561814767669,[null,[[1,1005,"//"],[-1,1005,"  "]],[1009,1009],[1005,1005]]],[1561814719032,["GJX@GJXAIOU",[[1,919,"\n"]],[914,914],[915,915]]],[1561814719169,["GJX@GJXAIOU",[[1,920,"\n"]],[915,915],[916,916]]],[1561814719767,["GJX@GJXAIOU",[[1,921,"\n"]],[916,916],[917,917]]],[1561814721220,["GJX@GJXAIOU",[[1,917,"- zui"]],[917,917],[922,922]]],[1561814722238,["GJX@GJXAIOU",[[-1,919,"zui"]],[922,922],[919,919]]],[1561814727463,["GJX@GJXAIOU",[[1,919,"最强大佬"]],[919,919],[923,923]]],[1561814727997,["GJX@GJXAIOU",[[1,924,"- \n"]],[923,923],[926,926]]],[1561814728975,["GJX@GJXAIOU",[[-1,924,"- "]],[926,926],[924,924]]],[1561814729995,["GJX@GJXAIOU",[[1,924,"在所有Java提交中击败了99.74%的用户 内存消耗 :35.5 MB, 在所有Java提交中击败了92.40%的用户"]],[924,924],[984,984]]],[1561814733371,["GJX@GJXAIOU",[[1,924,"\n"]],[924,924],[925,925]]],[1561814733481,["GJX@GJXAIOU",[[1,925,"\n"]],[925,925],[926,926]]],[1561814737424,["GJX@GJXAIOU",[[1,924,"```java"]],[924,924],[931,931]]],[1561814738012,["GJX@GJXAIOU",[[1,933,"\n"]],[931,931],[932,932]]],[1561814738190,["GJX@GJXAIOU",[[1,934,"\n"]],[932,932],[933,933]]],[1561814738321,["GJX@GJXAIOU",[[1,935,"\n"]],[933,933],[934,934]]],[1561814739560,["GJX@GJXAIOU",[[1,934,"```"]],[934,934],[937,937]]],[1561814743286,["GJX@GJXAIOU",[[1,932,"public boolean isOneBitCharacter(int[] bits) {\n       int start = 0 ;\n        while(start<bits.length-1){\n            if(bits[start] == 0){\n                start++;\n            }else{\n                start+=2;\n            }\n        }\n        return start == bits.length-1;\n    }"]],[932,932],[1210,1210]]],[1561814745859,["GJX@GJXAIOU",[[-1,1216,"\n"]],[1216,1216],[1215,1215]]],[1561814754847,["GJX@GJXAIOU",[[1,1239,"\n"]],[1239,1239],[1240,1240]]],[1561814758094,["GJX@GJXAIOU",[[1,1216,"s "]],[1216,1216],[1217,1217]]],[1561814758611,["GJX@GJXAIOU",[[1,1217,"hijain"]],[1217,1217],[1223,1223]]],[1561814759794,["GJX@GJXAIOU",[[-1,1216,"shijain"]],[1223,1223],[1216,1216]]],[1561814763707,["GJX@GJXAIOU",[[1,1216,"时间消耗1"]],[1216,1216],[1221,1221]]],[1561814763733,["GJX@GJXAIOU",[[1,1220," "]],[1221,1221],[1222,1222]]],[1561814764967,["GJX@GJXAIOU",[[1,1222,"ms,"]],[1222,1222],[1225,1225]]]],null,"GJX@GJXAIOU"]]}