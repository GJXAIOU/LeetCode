{"compress":true,"commitItems":[["28243f5f-f954-4913-b90a-35abe5b25261",1562332543628,"",[[1562332496107,["GJX@GJXAIOU",[[1,0,"# 1002.查找常见字符\n\n\n\n"]],[0,0],[16,16]]],[1562332503208,["GJX@GJXAIOU",[[1,16,"## 一、题目"]],[16,16],[23,23]]],[1562332503643,["GJX@GJXAIOU",[[1,24,"\n"]],[23,23],[24,24]]],[1562332504931,["GJX@GJXAIOU",[[1,24,"给定仅有小写字母组成的字符串数组 A，返回列表中的每个字符串中都显示的全部字符（包括重复字符）组成的列表。例如，如果一个字符在每个字符串中出现 3 次，但不是 4 次，则需要在最终答案中包含该字符 3 次。\n\n你可以按任意顺序返回答案。\n\n \n\n示例 1：\n\n输入：[\"bella\",\"label\",\"roller\"]\n输出：[\"e\",\"l\",\"l\"]\n示例 2：\n\n输入：[\"cool\",\"lock\",\"cook\"]\n输出：[\"c\",\"o\"]\n \n\n提示：\n\n1 <= A.length <= 100\n1 <= A[i].length <= 100\nA[i][j] 是小写字母\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/find-common-characters\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[24,24],[424,424]]],[1562332506602,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1562332506714,["GJX@GJXAIOU",[[1,0,"\n"]],[1,1],[2,2]]],[1562332514011,["GJX@GJXAIOU",[[1,0,"---\ntags: \n- 简单\n- 参考\n- 数组\nflag: green\nstyle: summer\ndate: '2019-7-5'\n---"]],[0,0],[72,72]]],[1562332524187,["GJX@GJXAIOU",[[1,98,"\n"]],[98,98],[99,99]]],[1562332531675,["GJX@GJXAIOU",[[1,101,"**"],[1,107,"**"]],[101,107],[101,111]]],[1562333153475,["GJX@GJXAIOU",[[1,504,"\n"]],[503,503],[504,504]]],[1562333153614,["GJX@GJXAIOU",[[1,505,"\n"]],[504,504],[505,505]]],[1562333153794,["GJX@GJXAIOU",[[1,506,"\n"]],[505,505],[506,506]]],[1562333154035,["GJX@GJXAIOU",[[1,507,"\n"]],[506,506],[507,507]]],[1562333155242,["GJX@GJXAIOU",[[1,507,"## "]],[507,507],[510,510]]],[1562333157836,["GJX@GJXAIOU",[[-1,223," "],[1,224," "],[-1,326," "],[1,327," "],[1,510,"二、解答"]],[510,510],[514,514]]],[1562333158434,["GJX@GJXAIOU",[[1,515,"\n"]],[514,514],[515,515]]],[1562333159714,["GJX@GJXAIOU",[[1,516,"\n"]],[515,515],[516,516]]],[1562333160355,["GJX@GJXAIOU",[[-1,516,"\n"],[1,517,"1"]],[516,516],[517,517]]],[1562333160897,["GJX@GJXAIOU",[[-1,516,"1"],[1,517,"\n"]],[517,517],[516,516]]],[1562333161070,["GJX@GJXAIOU",[[-1,516,"\n"],[1,517,"`"]],[516,516],[517,517]]],[1562333161490,["GJX@GJXAIOU",[[1,517,"``"]],[517,517],[519,519]]],[1562333161514,["GJX@GJXAIOU",[[1,519,"language\n```\n"]],[519,519],[519,527]]],[1562333162446,["GJX@GJXAIOU",[[-1,519,"language"],[1,527,"j"]],[519,527],[520,520]]],[1562333162867,["GJX@GJXAIOU",[[1,520,"ava"]],[520,520],[523,523]]],[1562333163052,["GJX@GJXAIOU",[[1,524,"\n"]],[523,523],[524,524]]],[1562333164011,["GJX@GJXAIOU",[[1,524,"class Solution {\n    public List<String> commonChars(String[] A) {\n        \n\t\t// 入参检查\n\t\tif(A == null || A.length == 0 || A.length == 1) {\n\t\t\treturn null;\n\t\t}\n\t\t// 记录每个字符出现的次数（字符的ASCII码-97的值做数组下标）\n\t\tint[] hash = new int[26];\n\t\t// 是否第一次维护hash数组\n\t\tboolean firstFlag = true;\n\t\t// 遍历字符串\n\t\tfor (String word : A) {\n\t\t\t// 拆分成字符数组\n\t\t\tchar[] wordChars = word.toCharArray();\n\t\t\t// 如果是第一次维护hash数组\n\t\t\tif (firstFlag) {\n\t\t\t\t// 直接记录每个字符出现的个数\n\t\t\t\tfor (char wordChar : wordChars) {\n\t\t\t\t\thash[wordChar - 97]++;\n\t\t\t\t}\n\t\t\t\t// 标志置为否\n\t\t\t\tfirstFlag = false;\n\t\t\t// 如果不是第一次维护，即hash数组中有值时\n\t\t\t}else {\n\t\t\t\t// 新建临时数组tmpHash来记录当前字符数组每个字符出现的次数\n\t\t\t\tint[] tmpHash = new int[26];\n\t\t\t\tfor (char wordChar : wordChars) {\n\t\t\t\t\ttmpHash[wordChar - 97]++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// 维护hash数组\n\t\t\t\tfor(int i = 0; i < hash.length; ++i) {\n\t\t\t\t\t// 比较hash数组和tmpHash数组\n\t\t\t\t\t// hash记录每次每个字符出现的最小次数\n\t\t\t\t\tif(hash[i] > tmpHash[i]) {\n\t\t\t\t\t\thash[i] = tmpHash[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// 组装返回结果\n\t\tList<String> res = new ArrayList<>();\n\t\tfor(int i = 0; i < hash.length; ++i) {\n\t\t\tif(hash[i] != 0) {\n\t\t\t\tString tmp = String.valueOf((char)(i + 97));\n\t\t\t\tfor(int j = 0; j < hash[i]; ++j) {\n\t\t\t\t\tres.add(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n        \n\t\treturn res;\n    }\n}\n\n作者：cafebabe\n链接：https://leetcode-cn.com/problems/two-sum/solution/wei-hu-ji-lu-mei-ge-zi-fu-chu-xian-ci-shu-de-shu-z/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[524,524],[1881,1881]]],[1562333170386,["GJX@GJXAIOU",[[-1,1714,"作者：cafebabe\n链接：https://leetcode-cn.com/problems/two-sum/solution/wei-hu-ji-lu-mei-ge-zi-fu-chu-xian-ci-shu-de-shu-z/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[1714,1881],[1714,1714]]],[1562333172354,["GJX@GJXAIOU",[[1,1719,"\n"]],[1718,1718],[1719,1719]]],[1562333172756,["GJX@GJXAIOU",[[1,1719,"作者：cafebabe\n链接：https://leetcode-cn.com/problems/two-sum/solution/wei-hu-ji-lu-mei-ge-zi-fu-chu-xian-ci-shu-de-shu-z/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[1719,1719],[1886,1886]]],[1562333177699,["GJX@GJXAIOU",[[-1,333,"\n"]],[333,333],[332,332]]],[1562333182565,["GJX@GJXAIOU",[[1,329,"- "]],[329,329],[331,331]]],[1562333187902,["GJX@GJXAIOU",[[-1,232,"\n"]],[232,232],[231,231]]],[1562333192171,["GJX@GJXAIOU",[[1,226,"- "]],[226,226],[228,228]]],[1562333194146,["GJX@GJXAIOU",[[-1,287,"\n"]],[287,287],[286,286]]],[1562333196909,["GJX@GJXAIOU",[[1,281,"-"]],[281,281],[282,282]]],[1562333198881,["GJX@GJXAIOU",[[1,264,"\n"]],[264,264],[265,265]]],[1562333200122,["GJX@GJXAIOU",[[-1,264,"\n"]],[265,265],[264,264]]],[1562333204818,["GJX@GJXAIOU",[[1,281,"\n"]],[280,280],[281,281]]],[1562333206027,["GJX@GJXAIOU",[[1,283," "]],[283,283],[284,284]]],[1562333210116,["GJX@GJXAIOU",[[-1,223," "]],[224,224],[223,223]]],[1562333210285,["GJX@GJXAIOU",[[-1,224,"\n"]],[223,223],[222,222]]],[1562333211074,["GJX@GJXAIOU",[[-1,223,"\n"]],[223,223],[222,222]]],[1562333252538,["GJX@GJXAIOU",[[1,1888,"\n"]],[1887,1887],[1888,1888]]],[1562333252682,["GJX@GJXAIOU",[[1,1889,"\n"]],[1888,1888],[1889,1889]]],[1562333253274,["GJX@GJXAIOU",[[1,1890,"\n"]],[1889,1889],[1890,1890]]],[1562333254138,["GJX@GJXAIOU",[[1,1890,"思路：建立二维映射表，统计每个字符的最小共同出现次数即可。 \n\n代码：\n\nclass Solution {\n    public List<String> commonChars(String[] A) {\n        if (A == null || A.length < 1) {\n            return null;\n        }\n        \n        List<String> ans = new ArrayList<>();\n        \n        int mapLetter[][] = new int[A.length][26];\n        \n        for (int i = 0;i < A.length;i++) {\n            map(A[i],mapLetter[i]);\n        }\n        \n        for (int i = 0;i < 26;i++) {\n            int min = Integer.MAX_VALUE;\n            for (int j = 0;j < A.length;j++) {\n                if (min > mapLetter[j][i]) {\n                    min = mapLetter[j][i];\n                }\n            }\n            \n            while (min-- > 0) {\n                ans.add(String.valueOf((char) (i + 'a')));\n            }\n        }\n        \n        return ans;\n    }\n    \n    private void map(String s,int a[]) {\n        for (int i = 0;i < s.length();i++) {\n            a[s.charAt(i) - 'a']++;\n        }\n    }\n}\n\n\n作者：zi-mo-10\n链接：https://leetcode-cn.com/problems/two-sum/solution/zi-fu-ying-she-tong-ji-zui-xiao-gong-tong-chu-xian/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[1890,1890],[3014,3014]]],[1562333258335,["GJX@GJXAIOU",[[1,1889,"- jiafa"]],[1889,1889],[1896,1896]]],[1562333259162,["GJX@GJXAIOU",[[-1,1891,"jiafa"]],[1896,1896],[1891,1891]]],[1562333262261,["GJX@GJXAIOU",[[1,1891,"解法二："]],[1891,1891],[1895,1895]]],[1562333264226,["GJX@GJXAIOU",[[1,1896,"- \n"]],[1895,1895],[1898,1898]]],[1562333265058,["GJX@GJXAIOU",[[-1,1896,"- "]],[1898,1898],[1896,1896]]],[1562333268138,["GJX@GJXAIOU",[[1,1897,"**"],[1,1899,"**"]],[1897,1899],[1897,1903]]],[1562333270220,["GJX@GJXAIOU",[[1,1933,"**"],[1,1935,"**"]],[1933,1935],[1933,1939]]],[1562333273037,["GJX@GJXAIOU",[[1,1941,"·"]],[1941,1941],[1942,1942]]],[1562333273946,["GJX@GJXAIOU",[[-1,1941,"·"]],[1942,1942],[1941,1941]]],[1562333274791,["GJX@GJXAIOU",[[1,1941,"```"]],[1941,1941],[1944,1944]]],[1562333274817,["GJX@GJXAIOU",[[1,1944,"language\n```\n"]],[1944,1944],[1944,1952]]],[1562333275603,["GJX@GJXAIOU",[[-1,1944,"language"],[1,1952,"j"]],[1944,1952],[1945,1945]]],[1562333275980,["GJX@GJXAIOU",[[1,1945,"ava"]],[1945,1945],[1948,1948]]],[1562333276082,["GJX@GJXAIOU",[[1,1949,"\n"]],[1948,1948],[1949,1949]]],[1562333278467,["GJX@GJXAIOU",[[-1,1950,"```"]],[1950,1953],[1950,1950]]],[1562333280129,["GJX@GJXAIOU",[[-1,1951,"\n"]],[1951,1951],[1950,1950]]],[1562333280290,["GJX@GJXAIOU",[[-1,1950,"\n"]],[1950,1950],[1949,1949]]],[1562333280709,["GJX@GJXAIOU",[[-1,1949,"\n"]],[1949,1949],[1948,1948]]],[1562333284490,["GJX@GJXAIOU",[[1,2867,"```"]],[2867,2867],[2870,2870]]],[1562333295209,["GJX@GJXAIOU",[[1,517,"\n"]],[516,516],[517,517]]],[1562333296523,["GJX@GJXAIOU",[[1,517,"- jeida"]],[517,517],[524,524]]],[1562333297778,["GJX@GJXAIOU",[[-1,519,"jeida"]],[524,524],[519,519]]],[1562333300335,["GJX@GJXAIOU",[[1,519,"解答一："]],[519,519],[523,523]]],[1562333343270,["GJX@GJXAIOU",[[1,2878,"执行用时 :3 ms, 在所有 Java 提交中击败了100.00%的用户\n\n内存消耗 :37.8 MB, 在所有 Java 提交中击败了91.94%的用户"]],[2878,2878],[2956,2956]]],[1562333347170,["GJX@GJXAIOU",[[1,2957,"\n"]],[2957,2957],[2958,2958]]],[1562333348635,["GJX@GJXAIOU",[[-1,2916,"\n"]],[2916,2916],[2915,2915]]],[1562333351066,["GJX@GJXAIOU",[[1,2878,"\n"]],[2878,2878],[2879,2879]]],[1562333354816,["GJX@GJXAIOU",[[1,2878,"复杂度"],[-1,2894," "],[1,2895," "],[-1,2899," "],[1,2900," "],[-1,2935," "],[1,2936," "],[-1,2940," "],[1,2941," "]],[2878,2878],[2881,2881]]],[1562333355948,["GJX@GJXAIOU",[[1,2881,"分析："]],[2881,2881],[2884,2884]]],[1562333411629,["GJX@GJXAIOU",[[1,1727,"\n"]],[1726,1726],[1727,1727]]],[1562333411794,["GJX@GJXAIOU",[[1,1728,"\n"]],[1727,1727],[1728,1728]]],[1562333411962,["GJX@GJXAIOU",[[1,1729,"\n"]],[1728,1728],[1729,1729]]],[1562333414975,["GJX@GJXAIOU",[[1,1727,"负载"]],[1727,1727],[1729,1729]]],[1562333415778,["GJX@GJXAIOU",[[-1,1727,"负载"]],[1729,1729],[1727,1727]]],[1562333419765,["GJX@GJXAIOU",[[1,1727,"复杂度分析："]],[1727,1727],[1733,1733]]],[1562333420003,["GJX@GJXAIOU",[[1,1736,"\n"]],[1733,1733],[1734,1734]]],[1562333421138,["GJX@GJXAIOU",[[1,1734,"执行用时 :3 ms, 在所有 Java 提交中击败了100.00%的用户\n\n内存消耗 :37.2 MB, 在所有 Java 提交中击败了94.24%的用户"]],[1734,1734],[1812,1812]]],[1562333423350,["GJX@GJXAIOU",[[-1,1772,"\n"]],[1772,1772],[1771,1771]]],[1562333573286,["GJX@GJXAIOU",[[-1,1722,"\n"]],[1722,1722],[1721,1721]]],[1562333660873,["GJX@GJXAIOU",[[-1,32,"green"]],[37,37],[32,32]]],[1562333663302,["GJX@GJXAIOU",[[1,32,"yellow"],[-1,1743," "],[1,1744," "],[-1,1748," "],[1,1749," "],[-1,1784," "],[1,1785," "],[-1,1789," "],[1,1790," "]],[32,32],[38,38]]]],null,"GJX@GJXAIOU"]]}