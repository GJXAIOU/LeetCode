{"compress":true,"commitItems":[["1ca61850-548b-420a-9861-70715b0bc1f7",1561298627080,"",[[1561298578785,["GJX@GJXAIOU",[[1,0,"# 896.单调数列\n\n\n\n"]],[0,0],[13,13]]],[1561298584640,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1561298584770,["GJX@GJXAIOU",[[1,0,"\n"]],[1,1],[2,2]]],[1561298584905,["GJX@GJXAIOU",[[1,2,"\n"]],[2,2],[3,3]]],[1561298584992,["GJX@GJXAIOU",[[1,3,"\n"]],[3,3],[4,4]]],[1561298587045,["GJX@GJXAIOU",[[1,0,"="]],[0,0],[1,1]]],[1561298587177,["GJX@GJXAIOU",[[1,0,"="]],[1,1],[2,2]]],[1561298587200,["GJX@GJXAIOU",[[1,0,"=="]],[2,2],[2,2]]],[1561298587615,["GJX@GJXAIOU",[[-1,2,"=="]],[2,2],[0,0]]],[1561298588730,["GJX@GJXAIOU",[[-1,0,"="]],[1,1],[0,0]]],[1561298589130,["GJX@GJXAIOU",[[1,0,"-"]],[0,0],[1,1]]],[1561298590224,["GJX@GJXAIOU",[[-1,1,"="]],[2,2],[1,1]]],[1561298590499,["GJX@GJXAIOU",[[1,0,"-"]],[1,1],[2,2]]],[1561298590673,["GJX@GJXAIOU",[[1,2,"-"]],[2,2],[3,3]]],[1561298590695,["GJX@GJXAIOU",[[1,5,"---\n\n\n"]],[3,3],[4,4]]],[1561298596193,["GJX@GJXAIOU",[[1,4,"tags： "]],[4,4],[10,10]]],[1561298596810,["GJX@GJXAIOU",[[-1,8,"： "]],[10,10],[8,8]]],[1561298597920,["GJX@GJXAIOU",[[1,8,": "]],[8,8],[10,10]]],[1561298598190,["GJX@GJXAIOU",[[1,11,"\n"]],[10,10],[11,11]]],[1561298599353,["GJX@GJXAIOU",[[1,11,"="]],[11,11],[12,12]]],[1561298600155,["GJX@GJXAIOU",[[-1,11,"="]],[12,12],[11,11]]],[1561298601283,["GJX@GJXAIOU",[[1,11,"= "]],[11,11],[13,13]]],[1561298601937,["GJX@GJXAIOU",[[-1,11,"= "]],[13,13],[11,11]]],[1561298603753,["GJX@GJXAIOU",[[1,11,"- jiand"]],[11,11],[18,18]]],[1561298604468,["GJX@GJXAIOU",[[-1,13,"jiand"]],[18,18],[13,13]]],[1561298608084,["GJX@GJXAIOU",[[1,13,"简答"]],[13,13],[15,15]]],[1561298608527,["GJX@GJXAIOU",[[1,16,"\n"]],[15,15],[16,16]]],[1561298609777,["GJX@GJXAIOU",[[1,16,"- "]],[16,16],[18,18]]],[1561298610479,["GJX@GJXAIOU",[[1,19,"\n"]],[18,18],[19,19]]],[1561298614363,["GJX@GJXAIOU",[[1,19,"- 数组"]],[19,19],[23,23]]],[1561298614589,["GJX@GJXAIOU",[[1,24,"\n"]],[23,23],[24,24]]],[1561298615057,["GJX@GJXAIOU",[[1,25,"\n"]],[24,24],[25,25]]],[1561298617403,["GJX@GJXAIOU",[[1,25,"flags"]],[25,25],[30,30]]],[1561298617864,["GJX@GJXAIOU",[[-1,29,"s"]],[30,30],[29,29]]],[1561298622929,["GJX@GJXAIOU",[[1,29,": green"]],[29,29],[36,36]]],[1561298623431,["GJX@GJXAIOU",[[1,37,"\n"]],[36,36],[37,37]]],[1561298627001,["GJX@GJXAIOU",[[1,37,"styp="]],[37,37],[42,42]]],[1561298627006,["GJX@GJXAIOU",[[-1,41,"="]],[42,42],[41,41]]],[1561298627267,["GJX@GJXAIOU",[[1,41,"l"]],[41,41],[42,42]]],[1561298627777,["GJX@GJXAIOU",[[-1,40,"pl"]],[42,42],[40,40]]],[1561298631442,["GJX@GJXAIOU",[[1,40,"le: summer"]],[40,40],[50,50]]],[1561298632028,["GJX@GJXAIOU",[[1,51,"\n"]],[50,50],[51,51]]],[1561298637657,["GJX@GJXAIOU",[[1,51,"data"]],[51,51],[55,55]]],[1561298638193,["GJX@GJXAIOU",[[-1,54,"a"]],[55,55],[54,54]]],[1561298641914,["GJX@GJXAIOU",[[1,54,"e:'20`1"]],[54,54],[61,61]]],[1561298643747,["GJX@GJXAIOU",[[-1,59,"`1"]],[61,61],[59,59]]],[1561298651108,["GJX@GJXAIOU",[[1,59,"19-6-23'"]],[59,59],[67,67]]],[1561298655961,["GJX@GJXAIOU",[[1,56," "]],[56,56],[57,57]]],[1561298658152,["GJX@GJXAIOU",[[-1,76,"\n"]],[75,75],[74,74]]],[1561298658283,["GJX@GJXAIOU",[[-1,75,"\n"]],[74,74],[73,73]]],[1561298662586,["GJX@GJXAIOU",[[1,88,"##  yi"]],[88,88],[94,94]]],[1561298663209,["GJX@GJXAIOU",[[-1,92,"yi"]],[94,94],[92,92]]],[1561298665597,["GJX@GJXAIOU",[[1,92,"一、题目"]],[92,92],[96,96]]],[1561298665887,["GJX@GJXAIOU",[[1,97,"\n"]],[96,96],[97,97]]],[1561298666028,["GJX@GJXAIOU",[[1,98,"\n"]],[97,97],[98,98]]],[1561298666141,["GJX@GJXAIOU",[[1,99,"\n"]],[98,98],[99,99]]],[1561298666256,["GJX@GJXAIOU",[[1,100,"\n"]],[99,99],[100,100]]],[1561298666373,["GJX@GJXAIOU",[[1,101,"\n"]],[100,100],[101,101]]],[1561298668074,["GJX@GJXAIOU",[[1,101,"##  "]],[101,101],[105,105]]],[1561298669255,["GJX@GJXAIOU",[[-1,104," "]],[105,105],[104,104]]],[1561298673180,["GJX@GJXAIOU",[[1,104,"二、解答"]],[104,104],[108,108]]],[1561298684053,["GJX@GJXAIOU",[[1,98,"如果数组是单调递增或单调递减的，那么它是单调的。\n\n如果对于所有 i <= j，A[i] <= A[j]，那么数组 A 是单调递增的。 如果对于所有 i <= j，A[i]> = A[j]，那么数组 A 是单调递减的。\n\n当给定的数组 A 是单调数组时返回 true，否则返回 false。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/monotonic-array\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[98,98],[347,347]]],[1561298687550,["GJX@GJXAIOU",[[-1,245,"来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/monotonic-array\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[245,347],[245,245]]],[1561298711429,["GJX@GJXAIOU",[[1,245,"来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/monotonic-array\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[245,245],[245,347]]]],null,"GJX@GJXAIOU"],["c5cf9016-1689-433f-a989-1349ff4b3201",1561337493631,"---\ntags: \n- 简答\n- \n- 数组\n\nflag: green\nstyle: summer\ndate: '2019-6-23'\n---\n\n\n# 896.单调数列\n\n\n##  一、题目\n\n如果数组是单调递增或单调递减的，那么它是单调的。\n\n如果对于所有 i <= j，A[i] <= A[j]，那么数组 A 是单调递增的。 如果对于所有 i <= j，A[i]> = A[j]，那么数组 A 是单调递减的。\n\n当给定的数组 A 是单调数组时返回 true，否则返回 false。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/monotonic-array\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n## 二、解答\n",[[1561337491197,["GJX@GJXAIOU",[[1,358,"\n"]],[357,357],[358,358]]],[1561337491326,["GJX@GJXAIOU",[[1,359,"\n"]],[358,358],[359,359]]],[1561337491474,["GJX@GJXAIOU",[[1,360,"\n"]],[359,359],[360,360]]],[1561337491623,["GJX@GJXAIOU",[[1,361,"\n"]],[360,360],[361,361]]],[1561337491759,["GJX@GJXAIOU",[[1,362,"\n"]],[361,361],[362,362]]],[1561337491877,["GJX@GJXAIOU",[[1,363,"\n"]],[362,362],[363,363]]],[1561337492408,["GJX@GJXAIOU",[[-1,217," "],[1,218," "],[-1,363,"\n"],[1,364,"-"]],[363,363],[364,364]]],[1561337505119,["GJX@GJXAIOU",[[1,365,"个人解答：逻辑有点问题\n- "]],[365,365],[379,379]]],[1561337505687,["GJX@GJXAIOU",[[-1,378," "]],[379,379],[378,378]]],[1561337506140,["GJX@GJXAIOU",[[-1,377,"-"],[1,378,"\n"]],[378,378],[377,377]]],[1561337507092,["GJX@GJXAIOU",[[1,378,"\n"]],[377,377],[378,378]]],[1561337507689,["GJX@GJXAIOU",[[-1,378,"\n"],[1,379,"`"]],[378,378],[379,379]]],[1561337508056,["GJX@GJXAIOU",[[1,379,"``"]],[379,379],[381,381]]],[1561337508080,["GJX@GJXAIOU",[[1,381,"language\n```\n"]],[381,381],[381,389]]],[1561337509606,["GJX@GJXAIOU",[[-1,381,"language"],[1,389,"j"]],[381,389],[382,382]]],[1561337510270,["GJX@GJXAIOU",[[1,382,"ava"]],[382,382],[385,385]]],[1561337510487,["GJX@GJXAIOU",[[1,386,"\n"]],[385,385],[386,386]]],[1561337511807,["GJX@GJXAIOU",[[1,386,"//错误原因：主要是递增数列中，插值为0的时候，函数判断的时候会在<=0判成立\n\n//判断数组是否单调\nclass Solution {\n    public boolean isMonotonic(int[] A) {\n        //输入合法性判断\n        if (A == null) {\n            return true;\n        }\n\n        int ans1 = 0;\n        int ans2 = 0;\n        for (int i = 0; i < A.length - 1; i++) {\n            \n                if (A[i + 1] - A[i]  <= 0 ) {\n                    ans1++;\n                }else if (A[i + 1] - A[i]  >= 0) {\n                    ans2++;\n                }                       \n\n             }\n        if (ans1 == A.length - 1 || ans2 == A.length - 1) {\n            return true;  \n        }\n\n      return false;   \n    }  \n              \n}   \n"]],[386,386],[1041,1041]]],[1561340052588,[null,[[1,364," "],[-1,376,"-"]],[364,364],[376,376]]],[1561340052588,[null,[[-1,364," "],[1,377,"-"]],[376,376],[364,364]]],[1561339997559,["GJX@GJXAIOU",[[1,18,"wanc"]],[18,18],[22,22]]],[1561339998990,["GJX@GJXAIOU",[[-1,18,"wanc"]],[22,22],[18,18]]],[1561340000802,["GJX@GJXAIOU",[[1,18,"完成"]],[18,18],[20,20]]],[1561340008216,["GJX@GJXAIOU",[[-1,372,"逻辑有点问题"]],[372,378],[372,372]]],[1561340012655,["GJX@GJXAIOU",[[-1,382,"//错误原因：主要是递增数列中，插值为0的时候，函数判断的时候会在<=0判成立\n\n//判断数组是否单调\nclass Solution {\n    public boolean isMonotonic(int[] A) {\n        //输入合法性判断\n        if (A == null) {\n            return true;\n        }\n\n        int ans1 = 0;\n        int ans2 = 0;\n        for (int i = 0; i < A.length - 1; i++) {\n            \n                if (A[i + 1] - A[i]  <= 0 ) {\n                    ans1++;\n                }else if (A[i + 1] - A[i]  >= 0) {\n                    ans2++;\n                }                       \n\n             }\n        if (ans1 == A.length - 1 || ans2 == A.length - 1) {\n            return true;  \n        }\n\n      return false;   \n    }  \n              \n}   "]],[382,1036],[382,382]]],[1561340018776,["GJX@GJXAIOU",[[1,382,"//错误原因：主要是递增数列中，插值为0的时候，函数判断的时候会在<=0判成立\n\n//判断数组是否单调\nclass Solution {\n    public boolean isMonotonic(int[] A) {\n        //输入合法性判断\n        if (A == null) {\n            return true;\n        }\n\n        int ans1 = 0;\n        int ans2 = 0;\n        for (int i = 0; i < A.length - 1; i++) {\n            \n                if (A[i + 1] - A[i]  < 0 ) {\n                    ans1++;\n                }else if (A[i + 1] - A[i]  > 0) {\n                    ans2++;\n                }else if (A[i + 1] - A[i] == 0) {\n                   ans1++;\n                   ans2++; \n                }                       \n\n             }\n        if (ans1 == A.length - 1 || ans2 == A.length - 1) {\n            return true;  \n        }\n\n      return false;   \n    }  \n              \n}   \n"]],[382,382],[1140,1140]]],[1561340022472,["GJX@GJXAIOU",[[-1,382,"//错误原因：主要是递增数列中，插值为0的时候，函数判断的时候会在<=0判成立"]],[382,421],[382,382]]],[1561340023920,["GJX@GJXAIOU",[[-1,383,"\n"]],[383,383],[382,382]]],[1561340026392,["GJX@GJXAIOU",[[-1,382,"\n"]],[382,382],[381,381]]],[1561340051746,["GJX@GJXAIOU",[[1,636,"//等于0的时候两个都加，不能"]],[636,636],[651,651]]],[1561340112600,[null,[[1,366," "],[-1,371,"逻-"],[1,373,"\n"]],[366,366],[374,374]]],[1561340112600,[null,[[-1,366," "],[1,372,"逻-"],[-1,372,"\n"]],[374,374],[366,366]]],[1561340080368,["GJX@GJXAIOU",[[1,651,"归于上面两个判断中，都在判断递增数列会出问题；"]],[651,651],[674,674]]],[1561340094763,["GJX@GJXAIOU",[[1,365,"\n"]],[360,360],[361,361]]],[1561340094916,["GJX@GJXAIOU",[[1,366,"\n"]],[361,361],[362,362]]],[1561340095047,["GJX@GJXAIOU",[[1,367,"\n"]],[362,362],[363,363]]],[1561340095200,["GJX@GJXAIOU",[[1,368,"\n"]],[363,363],[364,364]]],[1561340095285,["GJX@GJXAIOU",[[1,369,"\n"]],[364,364],[365,365]]],[1561340095428,["GJX@GJXAIOU",[[1,370,"\n"]],[365,365],[366,366]]],[1561340104257,["GJX@GJXAIOU",[[1,361,"- 官方题解："]],[361,361],[368,368]]],[1561340104839,["GJX@GJXAIOU",[[-1,367,"："]],[368,368],[367,367]]],[1561340105347,["GJX@GJXAIOU",[[1,368,"- \n"]],[367,367],[370,370]]],[1561340106313,["GJX@GJXAIOU",[[-1,368,"- "]],[370,370],[368,368]]],[1561340172599,[null,[[1,379," "],[-1,384,"逻-"],[1,386,"\n"]],[379,379],[387,387]]],[1561340172599,[null,[[-1,379," "],[1,385,"逻-"],[-1,385,"\n"]],[387,387],[379,379]]],[1561340117624,["GJX@GJXAIOU",[[1,369,"方法一：两次遍历\n思路\n\n如果数组单调递增或单调递减，那么该数组是单调的。由于 a <= b 和 b <= c 暗示着 a <= c，我们只需要检查相邻元素以确定数组是单调递增（或是递减）。我们可以在一次遍历中检查每个属性。\n\n算法\n\n要检查数组 A 是否单调递增，我们将检查每个 i 是否对应有 A[i] <= A[i+1]。对单调检查是类似的。\n\nJavaPython\nclass Solution {\n    public boolean isMonotonic(int[] A) {\n        return increasing(A) || decreasing(A);\n    }\n\n    public boolean increasing(int[] A) {\n        for (int i = 0; i < A.length - 1; ++i)\n            if (A[i] > A[i+1]) return false;\n        return true;\n    }\n\n    public boolean decreasing(int[] A) {\n        for (int i = 0; i < A.length - 1; ++i)\n            if (A[i] < A[i+1]) return false;\n        return true;\n    }\n}\n复杂度分析\n\n时间复杂度：O(N)O(N)，其中 NN 是 A 的长度。\n\n空间复杂度：O(1)O(1)。\n\n方法二：一次遍历\n思路\n\n要在一次遍历中执行该检查，我们将会处理由 \\{-1, 0, 1\\}{−1,0,1} 组成的比较流，分别对应 <，==，或 >。例如，对于数组 [1, 2, 2, 3, 0]，我们将会看到数据流 (-1, 0, -1, 1)。\n\n算法\n\n跟踪 store，它的值等于所看到的第一个非零比较值（如果存在）。一旦我们看到与之相反的比较值，那么答案就变成了 False。\n\n否则，每次比较值都必定在集合 \\{-1, 0\\}{−1,0} 中或是在 \\{0, 1\\}{0,1} 中，此时数组是单调的。\n\nJavaPython\nclass Solution {\n    public boolean isMonotonic(int[] A) {\n        int store = 0;\n        for (int i = 0; i < A.length - 1; ++i) {\n            int c = Integer.compare(A[i], A[i+1]);\n            if (c != 0) {\n                if (c != store && store != 0)\n                    return false;\n                store = c;\n            }\n        }\n\n        return true;\n    }\n}\n复杂度分析\n\n时间复杂度：O(N)O(N)，其中 NN 是 A 的长度。\n\n空间复杂度：O(1)O(1)。\n\n作者：LeetCode\n链接：https://leetcode-cn.com/problems/two-sum/solution/dan-diao-shu-lie-by-leetcode/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[369,369],[1886,1886]]],[1561340144421,["GJX@GJXAIOU",[[1,2673,"\n"]],[2672,2672],[2673,2673]]],[1561340156273,["GJX@GJXAIOU",[[1,2673,"执行用时 :9 ms, 在所有 Java 提交中击败了27.02%的用户\n\n内存消耗 :59 MB, 在所有 Java 提交中击败了34.19%的用户"]],[2673,2673],[2748,2748]]],[1561340159250,["GJX@GJXAIOU",[[1,2673,"\n"]],[2673,2673],[2674,2674]]],[1561340171411,["GJX@GJXAIOU",[[1,2674,"\n"]],[2673,2673],[2674,2674]]],[1561340172503,["GJX@GJXAIOU",[[1,2674,"-"],[-1,2690," "],[1,2691," "],[-1,2695," "],[1,2696," "],[-1,2729," "],[1,2730," "],[-1,2734," "],[1,2735," "]],[2674,2674],[2675,2675]]],[1561340232597,[null,[[1,1896," "],[-1,1901,"逻-"],[1,1903,"\n"]],[1896,1896],[1904,1904]]],[1561340232597,[null,[[-1,1896," "],[1,1902,"逻-"],[-1,1902,"\n"]],[1904,1904],[1896,1896]]],[1561340177760,["GJX@GJXAIOU",[[1,2675," 复杂度分析："]],[2675,2675],[2682,2682]]],[1561340182115,["GJX@GJXAIOU",[[-1,2720,"\n"]],[2720,2720],[2719,2719]]],[1561340190391,["GJX@GJXAIOU",[[1,2683,"- "]],[2683,2683],[2685,2685]]],[1561340192375,["GJX@GJXAIOU",[[1,2722,"- "]],[2722,2722],[2724,2724]]],[1561340193875,["GJX@GJXAIOU",[[1,2722,"  "]],[2724,2724],[2726,2726]]],[1561340195022,["GJX@GJXAIOU",[[1,2683,"  "]],[2685,2685],[2687,2687]]],[1561340200479,["GJX@GJXAIOU",[[-1,2668,"\n"]],[2668,2668],[2667,2667]]],[1561340203234,["GJX@GJXAIOU",[[-1,2646,"\n"]],[2647,2647],[2646,2646]]],[1561340205515,["GJX@GJXAIOU",[[-1,2666,"\n"]],[2666,2666],[2665,2665]]],[1561340223939,["GJX@GJXAIOU",[[-1,1729,"：(1)O"]],[1734,1734],[1729,1729]]],[1561340225709,["GJX@GJXAIOU",[[-1,1700,"(N)O"]],[1703,1703],[1699,1699]]],[1561340228873,["GJX@GJXAIOU",[[1,1725,"："]],[1725,1725],[1726,1726]]],[1561340231718,["GJX@GJXAIOU",[[1,1693,"- "]],[1693,1693],[1695,1695]]],[1561340292615,[null,[[1,1890," "],[-1,1895,"逻-"],[1,1897,"\n"]],[1890,1890],[1898,1898]]],[1561340292615,[null,[[-1,1890," "],[1,1896,"逻-"],[-1,1896,"\n"]],[1898,1898],[1890,1890]]],[1561340234239,["GJX@GJXAIOU",[[1,1722,"- "]],[1722,1722],[1724,1724]]],[1561340235578,["GJX@GJXAIOU",[[-1,1721,"\n"]],[1721,1721],[1720,1720]]],[1561340238576,["GJX@GJXAIOU",[[-1,1710,"N"]],[1710,1710],[1709,1709]]],[1561340240963,["GJX@GJXAIOU",[[-1,1692,"\n"]],[1692,1692],[1691,1691]]],[1561340243870,["GJX@GJXAIOU",[[1,1686,"- "]],[1686,1686],[1688,1688]]],[1561340245481,["GJX@GJXAIOU",[[1,1694,"  "]],[1696,1696],[1698,1698]]],[1561340246062,["GJX@GJXAIOU",[[1,1723,"  "]],[1726,1726],[1728,1728]]],[1561340248242,["GJX@GJXAIOU",[[1,1686,"\n"]],[1685,1685],[1686,1686]]],[1561340250079,["GJX@GJXAIOU",[[1,1686,"```"]],[1686,1686],[1689,1689]]],[1561340254457,["GJX@GJXAIOU",[[1,1306,"```"]],[1306,1306],[1309,1309]]],[1561340257021,["GJX@GJXAIOU",[[-1,1313,"Python"]],[1313,1319],[1313,1313]]],[1561340264531,["GJX@GJXAIOU",[[1,1174,"**"],[1,1176,"**"]],[1174,1176],[1174,1180]]],[1561340276834,["GJX@GJXAIOU",[[-1,1091,"\\"]],[1092,1092],[1091,1091]]],[1561340278174,["GJX@GJXAIOU",[[-1,1081,"\\"]],[1082,1082],[1081,1081]]],[1561340281111,["GJX@GJXAIOU",[[-1,1091,"{−1,0,1}"]],[1091,1099],[1091,1091]]],[1561340285767,["GJX@GJXAIOU",[[1,1047,"**"],[1,1055,"**"]],[1047,1055],[1047,1059]]],[1561340289087,["GJX@GJXAIOU",[[1,1047,"- "]],[1047,1047],[1049,1049]]],[1561340292452,["GJX@GJXAIOU",[[1,1062,"- \n"]],[1061,1061],[1064,1064]]],[1561340352614,[null,[[1,1899," "],[-1,1904,"逻-"],[1,1906,"\n"]],[1899,1899],[1907,1907]]],[1561340352614,[null,[[-1,1899," "],[1,1905,"逻-"],[-1,1905,"\n"]],[1907,1907],[1899,1899]]],[1561340293898,["GJX@GJXAIOU",[[-1,1062,"- "]],[1064,1064],[1062,1062]]],[1561340297608,["GJX@GJXAIOU",[[1,1063,"**"],[1,1065,"**"]],[1063,1065],[1063,1069]]],[1561340300375,["GJX@GJXAIOU",[[-1,1029,"\n"]],[1029,1029],[1028,1028]]],[1561340301214,["GJX@GJXAIOU",[[-1,998,"\n"]],[998,998],[997,997]]],[1561340304600,["GJX@GJXAIOU",[[-1,1004,"O(N)"]],[1004,1007],[1004,1004]]],[1561340307219,["GJX@GJXAIOU",[[-1,1031,"(1)O"]],[1032,1032],[1030,1030]]],[1561340310899,["GJX@GJXAIOU",[[1,992,"* "],[1,998,"* "],[1,1024,"* "]],[992,1035],[994,1041]]],[1561340314451,["GJX@GJXAIOU",[[1,1000,"  "],[1,1028,"  "]],[1002,1041],[1004,1045]]],[1561340317327,["GJX@GJXAIOU",[[-1,1019,"N "]],[1021,1021],[1019,1019]]],[1561340320692,["GJX@GJXAIOU",[[1,1045,"\n"]],[1044,1044],[1045,1045]]],[1561340320839,["GJX@GJXAIOU",[[1,1046,"\n"]],[1045,1045],[1046,1046]]],[1561340324502,["GJX@GJXAIOU",[[1,992,"\n"]],[991,991],[992,992]]],[1561340325241,["GJX@GJXAIOU",[[1,992,"·"]],[992,992],[993,993]]],[1561340326202,["GJX@GJXAIOU",[[-1,992,"·"]],[993,993],[992,992]]],[1561340327455,["GJX@GJXAIOU",[[1,992,"```"]],[992,992],[995,995]]],[1561340330560,["GJX@GJXAIOU",[[1,545,"```"]],[545,545],[548,548]]],[1561340333178,["GJX@GJXAIOU",[[-1,552,"Python"]],[558,558],[552,552]]],[1561340338059,["GJX@GJXAIOU",[[1,483,"**"],[1,485,"**"]],[483,485],[483,489]]],[1561340341185,["GJX@GJXAIOU",[[1,378,"\n"]],[378,378],[379,379]]],[1561340344309,["GJX@GJXAIOU",[[1,379,"**"],[1,381,"**"]],[379,381],[379,385]]],[1561340348529,["GJX@GJXAIOU",[[1,369,"**"],[1,377,"**"]],[369,377],[369,381]]],[1561340351054,["GJX@GJXAIOU",[[1,369,"- "]],[369,369],[371,371]]],[1561340892671,[null,[[1,1917," "],[-1,1922,"逻-"],[1,1924,"\n"]],[1917,1917],[1925,1925]]],[1561340892672,[null,[[-1,1917," "],[1,1923,"逻-"],[-1,1923,"\n"]],[1925,1925],[1917,1917]]],[1561340854782,["GJX@GJXAIOU",[[1,1910,"- jie"]],[1910,1910],[1915,1915]]],[1561340855579,["GJX@GJXAIOU",[[-1,1912,"jie"]],[1915,1915],[1912,1912]]],[1561340860873,["GJX@GJXAIOU",[[1,1912,"解法：先判断"]],[1912,1912],[1918,1918]]],[1561340867001,["GJX@GJXAIOU",[[1,1919,"- \n"]],[1918,1918],[1921,1921]]],[1561340868027,["GJX@GJXAIOU",[[-1,1919,"- "]],[1921,1921],[1919,1919]]],[1561340871238,["GJX@GJXAIOU",[[1,1919,"```java"]],[1919,1919],[1926,1926]]],[1561340871448,["GJX@GJXAIOU",[[1,1932,"\n"]],[1926,1926],[1927,1927]]],[1561340871580,["GJX@GJXAIOU",[[1,1933,"\n"]],[1927,1927],[1928,1928]]],[1561340873030,["GJX@GJXAIOU",[[1,1928,"```"]],[1928,1928],[1931,1931]]],[1561340874909,["GJX@GJXAIOU",[[1,1927,"```angelscript\n执行用时 :5 ms, 在所有 Java 提交中击败了95.15%的用户\n先判断递增递减，再判断是否正确\nclass Solution {\n    public boolean isMonotonic(int[] A) {\n        int length = A.length;\n        if (length == 1){\n            return true;\n        }\n        int pre = A[0];\n        int cur = A[1];\n        int index = 1;\n        while (index < length) {\n            pre = A[index - 1];\n            cur = A[index];\n            if (pre == cur) {\n                index++;\n            } else {\n                break;\n            }\n        }\n        boolean flg = pre - cur > 0;\n        for (; index < length; index++) {\n            int i = A[index - 1] - A[index];\n            if (flg) {\n                if (i < 0) {\n                    return false;\n                }\n            } else {\n                if (i > 0) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n}\n```"]],[1927,1927],[2819,2819]]],[1561340879811,["GJX@GJXAIOU",[[-1,1927,"```angelscript"]],[1927,1941],[1927,1927]]],[1561340884302,["GJX@GJXAIOU",[[-1,1965,"先判断递增递减，再判断是否正确"]],[1965,1980],[1965,1965]]],[1561340886049,["GJX@GJXAIOU",[[1,1918,"先判断递增递减，再判断是否正确"]],[1918,1918],[1933,1933]]],[1561340888095,["GJX@GJXAIOU",[[-1,1916,"判断先"]],[1918,1918],[1915,1915]]],[1561340952676,[null,[[1,2813," "],[-1,2818,"逻-"],[1,2820,"\n"]],[2813,2813],[2821,2821]]],[1561340952676,[null,[[-1,2813," "],[1,2819,"逻-"],[-1,2819,"\n"]],[2821,2821],[2813,2813]]],[1561340894012,["GJX@GJXAIOU",[[-1,1940,"执行用时 :5 ms, 在所有 Java 提交中击败了95.15%的用户\n"]],[1939,1976],[1939,1939]]],[1561340895963,["GJX@GJXAIOU",[[-1,1940,"\n"]],[1940,1940],[1939,1939]]],[1561340896474,["GJX@GJXAIOU",[[-1,1939,"\n"]],[1939,1939],[1938,1938]]],[1561340900449,["GJX@GJXAIOU",[[1,2764,"\n"]],[2763,2763],[2764,2764]]],[1561340901193,["GJX@GJXAIOU",[[1,2765,"执行用时 :5 ms, 在所有 Java 提交中击败了95.15%的用户\n"]],[2764,2764],[2801,2801]]],[1561340903963,["GJX@GJXAIOU",[[-1,2802,"```"]],[2802,2805],[2802,2802]]],[1561340911381,["GJX@GJXAIOU",[[1,2169,"\n        "]],[2160,2160],[2169,2169]]],[1561340913462,["GJX@GJXAIOU",[[1,2169,"、、"]],[2169,2169],[2171,2171]]],[1561340914418,["GJX@GJXAIOU",[[-1,2169,"、、"]],[2171,2171],[2169,2169]]],[1561340934335,["GJX@GJXAIOU",[[1,2169,"//从头开始一次"]],[2169,2169],[2177,2177]]],[1561340936177,["GJX@GJXAIOU",[[-1,2173,"开始一次"]],[2177,2177],[2173,2173]]],[1561340947496,["GJX@GJXAIOU",[[1,2173,"开始依次比较两个元素，"]],[2173,2173],[2184,2184]]],[1561341012690,[null,[[1,2833," "],[-1,2838,"逻-"],[1,2840,"\n"]],[2833,2833],[2841,2841]]],[1561341012690,[null,[[-1,2833," "],[1,2839,"逻-"],[-1,2839,"\n"]],[2841,2841],[2833,2833]]],[1561340974878,["GJX@GJXAIOU",[[1,2184,"直到找到两个不一样的元素，"]],[2184,2184],[2197,2197]]],[1561340976659,["GJX@GJXAIOU",[[-1,2196,"，"]],[2197,2197],[2196,2196]]],[1561340976992,["GJX@GJXAIOU",[[1,2196,"；"]],[2196,2196],[2197,2197]]],[1561340979467,["GJX@GJXAIOU",[[1,2422,"\n        "]],[2413,2413],[2422,2422]]],[1561341003827,["GJX@GJXAIOU",[[1,2422,"//将这两个元素比较，判断整体数组的递增还是递减"]],[2422,2422],[2446,2446]]],[1561341007394,["GJX@GJXAIOU",[[1,2492,"\n        "]],[2483,2483],[2492,2492]]],[1561341012087,["GJX@GJXAIOU",[[1,2492,"//从in"]],[2492,2492],[2497,2497]]],[1561341035609,[null,[[1,2893," "],[-1,2898,"逻-"],[1,2900,"\n"]],[2893,2893],[2901,2901]]],[1561341035609,[null,[[-1,2893," "],[1,2899,"逻-"],[-1,2899,"\n"]],[2901,2901],[2893,2893]]],[1561341034354,["GJX@GJXAIOU",[[1,2497,"dex之后的元素逐个做差，验证判断的正确性"]],[2497,2497],[2518,2518]]],[1561341275658,[null,[[1,2914," "],[-1,2919,"逻-"],[1,2921,"\n"]],[2914,2914],[2922,2922]]],[1561341275658,[null,[[-1,2914," "],[1,2920,"逻-"],[-1,2920,"\n"]],[2922,2922],[2914,2914]]],[1561341232841,["GJX@GJXAIOU",[[-1,14,"答"]],[15,15],[14,14]]],[1561341237050,["GJX@GJXAIOU",[[1,14,"单"]],[14,14],[15,15]]]],null,"GJX@GJXAIOU"]]}