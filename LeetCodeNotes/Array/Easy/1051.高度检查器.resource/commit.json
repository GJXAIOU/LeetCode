{"compress":true,"commitItems":[["54379386-61b9-4924-8ff0-fcd2247b86b9",1560070814701,"",[[1560070766291,["GJX@GJXAIOU",[[1,0,"# 1051.高度检查器\n\n\n\n"]],[0,0],[15,15]]],[1560070769263,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1560070769391,["GJX@GJXAIOU",[[1,0,"\n"]],[1,1],[2,2]]],[1560070771647,["GJX@GJXAIOU",[[1,0,"-"]],[0,0],[1,1]]],[1560070771783,["GJX@GJXAIOU",[[1,0,"-"]],[1,1],[2,2]]],[1560070771935,["GJX@GJXAIOU",[[1,2,"-"]],[2,2],[3,3]]],[1560070771958,["GJX@GJXAIOU",[[1,5,"---\n\n\n"]],[3,3],[4,4]]],[1560070778256,["GJX@GJXAIOU",[[1,26,"## yi "]],[26,26],[32,32]]],[1560070779206,["GJX@GJXAIOU",[[-1,29,"yi "]],[32,32],[29,29]]],[1560070781642,["GJX@GJXAIOU",[[1,29,"一、题吗"]],[29,29],[33,33]]],[1560070782216,["GJX@GJXAIOU",[[-1,31,"题吗"]],[33,33],[31,31]]],[1560070784274,["GJX@GJXAIOU",[[1,31,"题目："]],[31,31],[34,34]]],[1560070784687,["GJX@GJXAIOU",[[1,35,"\n"]],[34,34],[35,35]]],[1560070785826,["GJX@GJXAIOU",[[1,36,"\n"]],[35,35],[36,36]]],[1560070786439,["GJX@GJXAIOU",[[1,36,"学校在拍年度纪念照时，一般要求学生按照 非递减 的高度顺序排列。\n\n请你返回至少有多少个学生没有站在正确位置数量。该人数指的是：能让所有学生以 非递减 高度排列的必要移动人数。\n\n \n\n示例：\n\n输入：[1,1,4,2,1,3]\n输出：3\n解释：\n高度为 4、3 和最后一个 1 的学生，没有站在正确的位置。\n \n\n提示：\n\n1 <= heights.length <= 100\n1 <= heights[i] <= 100\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/height-checker\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[36,36],[351,351]]],[1560070789567,["GJX@GJXAIOU",[[1,4,"t"],[-1,126," "],[1,127," "],[-1,191," "],[1,192," "]],[4,4],[5,5]]],[1560070790343,["GJX@GJXAIOU",[[1,5,"af"]],[5,5],[7,7]]],[1560070790954,["GJX@GJXAIOU",[[-1,6,"f"]],[7,7],[6,6]]],[1560070791104,["GJX@GJXAIOU",[[1,6,"d"]],[6,6],[7,7]]],[1560070836675,["GJX@GJXAIOU",[[-1,6,"d"]],[7,7],[6,6]]],[1560070837487,["GJX@GJXAIOU",[[1,6,"gd"]],[6,6],[8,8]]],[1560070838173,["GJX@GJXAIOU",[[-1,7,"d"]],[8,8],[7,7]]],[1560070838294,["GJX@GJXAIOU",[[1,7,"d"]],[7,7],[8,8]]],[1560070838925,["GJX@GJXAIOU",[[-1,7,"d"]],[8,8],[7,7]]],[1560070840974,["GJX@GJXAIOU",[[1,7,"s: "]],[7,7],[10,10]]],[1560070843295,["GJX@GJXAIOU",[[1,11,"\n"]],[10,10],[11,11]]],[1560070846294,["GJX@GJXAIOU",[[1,11,"  - jian"]],[11,11],[19,19]]],[1560070847118,["GJX@GJXAIOU",[[-1,14," jian"]],[19,19],[14,14]]],[1560070849229,["GJX@GJXAIOU",[[1,14," 简单"]],[14,14],[17,17]]],[1560070849565,["GJX@GJXAIOU",[[1,18,"  \n"]],[17,17],[20,20]]],[1560070852887,["GJX@GJXAIOU",[[1,20,"- "]],[20,20],[22,22]]],[1560070853360,["GJX@GJXAIOU",[[1,23,"  \n"]],[22,22],[25,25]]],[1560070856985,["GJX@GJXAIOU",[[1,25,"- 数组"]],[25,25],[29,29]]],[1560070857455,["GJX@GJXAIOU",[[1,30,"  \n"]],[29,29],[32,32]]],[1560070863193,["GJX@GJXAIOU",[[1,32,"- 汉明距离"]],[32,32],[38,38]]],[1560070864099,["GJX@GJXAIOU",[[1,39,"  \n"]],[38,38],[41,41]]],[1560070871382,["GJX@GJXAIOU",[[1,41,"flag: green"]],[41,41],[52,52]]],[1560070871936,["GJX@GJXAIOU",[[1,53,"  \n"]],[52,52],[55,55]]],[1560070874895,["GJX@GJXAIOU",[[1,41,"\n  "]],[41,41],[44,44]]],[1560070881695,["GJX@GJXAIOU",[[1,58,"tate"]],[58,58],[62,62]]],[1560070882514,["GJX@GJXAIOU",[[-1,58,"tate"]],[62,62],[58,58]]],[1560070892854,["GJX@GJXAIOU",[[1,58,"date: '2019-6-9'"]],[58,58],[74,74]]],[1560070898469,["GJX@GJXAIOU",[[-1,48,": "]],[50,50],[48,48]]],[1560070900894,["GJX@GJXAIOU",[[1,48,": "]],[48,48],[50,50]]],[1560070902647,["GJX@GJXAIOU",[[1,48," "]],[48,48],[49,49]]],[1560070904383,["GJX@GJXAIOU",[[-1,48," "]],[49,49],[48,48]]],[1560070906017,["GJX@GJXAIOU",[[1,48,"s"]],[48,48],[49,49]]],[1560070907608,["GJX@GJXAIOU",[[-1,48,"s"]],[49,49],[48,48]]],[1560070915215,["GJX@GJXAIOU",[[-1,61,"e"]],[62,62],[61,61]]],[1560070915400,["GJX@GJXAIOU",[[1,61,"a"]],[61,61],[62,62]]],[1560070924233,["GJX@GJXAIOU",[[1,10," "]],[9,9],[10,10]]],[1560070929469,["GJX@GJXAIOU",[[-1,19,"  - "]],[19,23],[19,19]]],[1560070929927,["GJX@GJXAIOU",[[-1,19,"\n"]],[19,19],[18,18]]],[1560070931342,["GJX@GJXAIOU",[[1,21,"\n  "]],[18,18],[21,21]]],[1560070932791,["GJX@GJXAIOU",[[1,21,"- "]],[21,21],[23,23]]],[1560070935614,["GJX@GJXAIOU",[[1,59,"\n  "]],[56,56],[59,59]]],[1560070937838,["GJX@GJXAIOU",[[-1,40,"  "]],[42,42],[40,40]]],[1560070938258,["GJX@GJXAIOU",[[-1,40,"\n"]],[40,40],[39,39]]],[1560070941404,["GJX@GJXAIOU",[[-1,40,"  "]],[42,42],[40,40]]],[1560070942610,["GJX@GJXAIOU",[[1,40,"\n"]],[40,40],[41,41]]],[1560070946158,["GJX@GJXAIOU",[[-1,56,"  "]],[56,58],[56,56]]],[1560070958174,["GJX@GJXAIOU",[[-1,318,"来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/height-checker\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[318,419],[318,318]]],[1560070959062,["GJX@GJXAIOU",[[-1,266,"\n"]],[266,266],[265,265]]],[1560070960879,["GJX@GJXAIOU",[[1,262,"- "]],[262,262],[264,264]]],[1560070962960,["GJX@GJXAIOU",[[1,268,"  - "]],[268,268],[272,272]]],[1560070965439,["GJX@GJXAIOU",[[1,299,"  - "]],[299,299],[303,303]]],[1560070969165,["GJX@GJXAIOU",[[1,224,"**"],[1,227,"**"]],[224,227],[224,231]]],[1560070971534,["GJX@GJXAIOU",[[1,197,"**"],[1,200,"**"]],[197,200],[197,204]]],[1560070993008,["GJX@GJXAIOU",[[1,185,"**"],[1,191,"**"]],[185,191],[185,195]]],[1560076222809,["GJX@GJXAIOU",[[1,340,"\n"]],[338,338],[339,339]]],[1560076222947,["GJX@GJXAIOU",[[1,341,"\n"]],[339,339],[340,340]]],[1560076223096,["GJX@GJXAIOU",[[1,342,"\n"]],[340,340],[341,341]]],[1560076224800,["GJX@GJXAIOU",[[1,341,"### "]],[341,341],[345,345]]],[1560076227908,["GJX@GJXAIOU",[[-1,343,"# "]],[345,345],[343,343]]],[1560076231531,["GJX@GJXAIOU",[[1,343," 二、解答"]],[343,343],[348,348]]],[1560076231778,["GJX@GJXAIOU",[[1,350,"\n"]],[348,348],[349,349]]],[1560076231922,["GJX@GJXAIOU",[[1,351,"\n"]],[349,349],[350,350]]],[1560076232661,["GJX@GJXAIOU",[[1,352,"\n"]],[350,350],[351,351]]],[1560076234643,["GJX@GJXAIOU",[[1,351,"****"]],[351,351],[353,353]]],[1560076239018,["GJX@GJXAIOU",[[1,353,"自我解答："]],[353,353],[358,358]]],[1560076248984,["GJX@GJXAIOU",[[1,361,"执行用时 : 3 ms, 在Height Checker的Java提交中击败了81.05% 的用户\n\n内存消耗 : 34.4 MB, 在Height Checker的Java提交中击败了100.00% 的用户"]],[361,361],[465,465]]],[1560076251009,["GJX@GJXAIOU",[[1,466,"\n"]],[465,465],[466,466]]],[1560076251139,["GJX@GJXAIOU",[[1,467,"\n"]],[466,466],[467,467]]],[1560076252514,["GJX@GJXAIOU",[[-1,367," "],[1,368," "],[-1,406," "],[1,407," "],[-1,418," "],[1,419," "],[-1,461," "],[1,462," "],[-1,467,"\n"],[1,468,"`"]],[467,467],[468,468]]],[1560076252848,["GJX@GJXAIOU",[[1,468,"``"]],[468,468],[470,470]]],[1560076252872,["GJX@GJXAIOU",[[1,470,"language\n```\n"]],[470,470],[470,478]]],[1560076253897,["GJX@GJXAIOU",[[-1,470,"language"],[1,478,"j"]],[470,478],[471,471]]],[1560076254377,["GJX@GJXAIOU",[[1,471,"ava"]],[471,471],[474,474]]],[1560076254793,["GJX@GJXAIOU",[[1,475,"\n"]],[474,474],[475,475]]],[1560076255843,["GJX@GJXAIOU",[[1,475,"执行用时 : 3 ms, 在Height Checker的Java提交中击败了81.05% 的用户\n\n内存消耗 : 34.4 MB, 在Height Checker的Java提交中击败了100.00% 的用户"]],[475,475],[579,579]]],[1560076257486,["GJX@GJXAIOU",[[-1,475,"执行用时 : 3 ms, 在Height Checker的Java提交中击败了81.05% 的用户\n\n内存消耗 : 34.4 MB, 在Height Checker的Java提交中击败了100.00% 的用户"]],[579,579],[475,475]]],[1560076259993,["GJX@GJXAIOU",[[1,475,"class Solution {\n    public int heightChecker(int[] heights) {\n        int []Baoliu = Arrays.copyOf(heights, heights.length);\n\n        Arrays.sort(heights);\n        int num = 0;\n\n        for (int i = 0; i < heights.length; i++) {\n            if (Baoliu[i] != heights[i]) {\n                num++;\n            }\n        }\n        return num;\n    }\n}"]],[475,475],[822,822]]],[1560076267273,["GJX@GJXAIOU",[[1,351,"\n"]],[349,349],[350,350]]],[1560076267399,["GJX@GJXAIOU",[[1,352,"\n"]],[350,350],[351,351]]],[1560076488081,["GJX@GJXAIOU",[[1,23,"wanc"]],[23,23],[27,27]]],[1560076488868,["GJX@GJXAIOU",[[-1,23,"wanc"]],[27,27],[23,23]]],[1560076490587,["GJX@GJXAIOU",[[1,23,"完成"]],[23,23],[25,25]]]],null,"GJX@GJXAIOU"],["be71e839-4911-4afb-b836-be399d9649b3",1561423030426,"---\ntags:  \n  - 简单\n  - 完成\n  - 数组\n  - 汉明距离\n\nflag: green\n  \ndata: '2019-6-9'\n---\n\n\n# 1051.高度检查器\n\n\n## 一、题目：\n\n学校在拍年度纪念照时，一般要求学生按照 非递减 的高度顺序排列。\n\n请你返回至少有多少个学生没有站在正确位置数量。该人数指的是：能让所有学生以 非递减 高度排列的**必要移动人数**。\n\n \n\n**示例：**\n\n输入：[1,1,4,2,1,3]\n输出：3\n**解释：**\n高度为 4、3 和最后一个 1 的学生，没有站在正确的位置。\n \n\n- 提示：\n  - 1 <= heights.length <= 100\n  - 1 <= heights[i] <= 100\n\n\n\n## 二、解答\n\n\n\n\n**自我解答：**\n执行用时 : 3 ms, 在Height Checker的Java提交中击败了81.05% 的用户\n\n内存消耗 : 34.4 MB, 在Height Checker的Java提交中击败了100.00% 的用户\n\n```java\nclass Solution {\n    public int heightChecker(int[] heights) {\n        int []Baoliu = Arrays.copyOf(heights, heights.length);\n\n        Arrays.sort(heights);\n        int num = 0;\n\n        for (int i = 0; i < heights.length; i++) {\n            if (Baoliu[i] != heights[i]) {\n                num++;\n            }\n        }\n        return num;\n    }\n}\n```\n",[[1561422972858,["GJX@GJXAIOU",[[-1,56," "]],[56,56],[55,55]]],[1561422975488,["GJX@GJXAIOU",[[1,55,"style："]],[55,55],[61,61]]],[1561422975824,["GJX@GJXAIOU",[[1,62," "]],[61,61],[62,62]]],[1561422976453,["GJX@GJXAIOU",[[-1,60,"： "]],[62,62],[60,60]]],[1561422977225,["GJX@GJXAIOU",[[1,60,"："]],[60,60],[61,61]]],[1561422977936,["GJX@GJXAIOU",[[-1,60,"："]],[61,61],[60,60]]],[1561422978576,["GJX@GJXAIOU",[[1,60,":"]],[60,60],[61,61]]],[1561422978959,["GJX@GJXAIOU",[[1,62," "]],[61,61],[62,62]]],[1561422980023,["GJX@GJXAIOU",[[1,62,"summer"]],[62,62],[68,68]]]],null,"GJX@GJXAIOU"]]}