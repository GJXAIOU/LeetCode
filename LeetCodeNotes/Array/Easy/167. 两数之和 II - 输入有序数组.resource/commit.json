{"compress":true,"commitItems":[["af832cdc-dae7-4b8b-96fa-dfb312588c0e",1566911512181,"package array.easy;   /** 167. 两数之和 II - 输入有序数组\n  * @author GJXAIOU\n * @create 2019-08-27-20:42\n * * 题目描述\n  *给定一个已按照升序排列 的有序数组，找到两个数使得它们相加之和等于目标数。\n  * 函数应该返回这两个下标值 index1 和 index2，其中 index1 必须小于 index2。\n  *\n * 说明:\n * 返回的下标值（index1 和 index2）不是从零开始的。\n  * 你可以假设每个输入只对应唯一的答案，而且你不可以重复使用相同的元素。\n  */   public class Leetcode167_Two_Sum_II_Input_array_is_sorted {\n    public int[] twoSum(int[] numbers, int target) {\n        int left = 0;\n int right = numbers.length - 1;\n int[] ansArray = new int[2];\n  // 当 left < right 判断值的和是否为 target  while(left < right){\n            int sum = numbers [left] + numbers [right];\n if (sum == target){\n                ansArray[0] = left + 1;\n  ansArray[1] = right + 1;\n return ansArray;\n  }else if (sum > target) {\n                right--;\n  }else {\n                left++;\n  }\n        }\n    return ansArray;\n  }\n}\n/**\n * 执行用时 :2 ms, 在所有 Java 提交中击败了82.32%的用户\n  * 内存消耗 :38.9 MB, 在所有 Java 提交中击败了20.07%的用户\n  */",[[1566911470279,["GJX@GJXAIOU",[[-1,0,"package array.easy;   /** 167. 两数之和 II - 输入有序数组\n  * @author GJXAIOU\n * @create 2019-08-27-20:42\n * * 题目描述\n  *给定一个已按照升序排列 的有序数组，找到两个数使得它们相加之和等于目标数。\n  * 函数应该返回这两个下标值 index1 和 index2，其中 index1 必须小于 index2。\n  *\n * 说明:\n * 返回的下标值（index1 和 index2）不是从零开始的。\n  * 你可以假设每个输入只对应唯一的答案，而且你不可以重复使用相同的元素。\n  */   public class Leetcode167_Two_Sum_II_Input_array_is_sorted {\n    public int[] twoSum(int[] numbers, int target) {\n        int left = 0;\n int right = numbers.length - 1;\n int[] ansArray = new int[2];\n  // 当 left < right 判断值的和是否为 target  while(left < right){\n            int sum = numbers [left] + numbers [right];\n if (sum == target){\n                ansArray[0] = left + 1;\n  ansArray[1] = right + 1;\n return ansArray;\n  }else if (sum > target) {\n                right--;\n  }else {\n                left++;\n  }\n        }\n    return ansArray;\n  }\n}\n/**\n * 执行用时 :2 ms, 在所有 Java 提交中击败了82.32%的用户\n  * 内存消耗 :38.9 MB, 在所有 Java 提交中击败了20.07%的用户\n  */"]],[0,933],[0,0]]],[1566911472881,["GJX@GJXAIOU",[[1,0,"167. 两数之和 II - 输入有序数组"]],[0,0],[21,21]]],[1566911475036,["GJX@GJXAIOU",[[-1,0,"167. 两数之和 II - 输入有序数组"]],[0,21],[0,0]]],[1566911483441,["GJX@GJXAIOU",[[1,0,"package array.easy;\n\n/** 167. 两数之和 II - 输入有序数组\n * @author GJXAIOU\n * @create 2019-08-27-20:42\n *\n * 题目描述\n *给定一个已按照升序排列 的有序数组，找到两个数使得它们相加之和等于目标数。\n * 函数应该返回这两个下标值 index1 和 index2，其中 index1 必须小于 index2。\n *\n * 说明:\n * 返回的下标值（index1 和 index2）不是从零开始的。\n * 你可以假设每个输入只对应唯一的答案，而且你不可以重复使用相同的元素。\n */\n\npublic class Leetcode167_Two_Sum_II_Input_array_is_sorted {\n    public int[] twoSum(int[] numbers, int target) {\n        int left = 0;\n        int right = numbers.length - 1;\n        int[] ansArray = new int[2];\n        // 当 left < right 判断值的和是否为 target\n        while(left < right){\n            int sum = numbers [left] + numbers [right];\n            if (sum == target){\n                ansArray[0] = left + 1;\n                ansArray[1] = right + 1;\n                return ansArray;\n            }else if (sum > target) {\n                right--;\n            }else {\n                left++;\n            }\n        }\n    return ansArray;\n    }\n}\n/**\n * 执行用时 :2 ms, 在所有 Java 提交中击败了82.32%的用户\n * 内存消耗 :38.9 MB, 在所有 Java 提交中击败了20.07%的用户\n */\n\n"]],[0,0],[1024,1024]]],[1566911498645,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1566911499901,["GJX@GJXAIOU",[[1,0,"---\ntags: \n- 简单\n- 参考\n- 数组\n- 排序\nflag: green\nstyle: summer\ndate: '2019-8-5'\n---"]],[0,0],[77,77]]],[1566911503069,["GJX@GJXAIOU",[[-1,18,"参考"]],[20,20],[18,18]]],[1566911505928,["GJX@GJXAIOU",[[1,18,"完成"],[-1,194," "],[1,195," "],[-1,262," "],[1,263," "],[-1,267," "],[1,268," "]],[18,18],[20,20]]],[1566911509133,["GJX@GJXAIOU",[[-1,28,"排序"]],[30,30],[28,28]]],[1566911515520,["GJX@GJXAIOU",[[1,28,"双指针"]],[28,28],[31,31]]],[1566911521365,["GJX@GJXAIOU",[[-1,72,"5"]],[73,73],[72,72]]],[1566911522381,["GJX@GJXAIOU",[[1,72,"27"]],[72,72],[74,74]]],[1566911524967,["GJX@GJXAIOU",[[1,80,"\n"]],[80,80],[81,81]]],[1566911525085,["GJX@GJXAIOU",[[1,81,"\n"]],[81,81],[82,82]]],[1566911525230,["GJX@GJXAIOU",[[1,82,"\n"]],[82,82],[83,83]]],[1566911535487,["GJX@GJXAIOU",[[1,83,"\n"]],[81,81],[82,82]]],[1566911535989,["GJX@GJXAIOU",[[1,82,"给定一个已按照升序排列 的有序数组，找到两个数使得它们相加之和等于目标数。\n\n函数应该返回这两个下标值 index1 和 index2，其中 index1 必须小于 index2。\n\n说明:\n\n返回的下标值（index1 和 index2）不是从零开始的。\n你可以假设每个输入只对应唯一的答案，而且你不可以重复使用相同的元素。\n示例:\n\n输入: numbers = [2, 7, 11, 15], target = 9\n输出: [1,2]\n解释: 2 与 7 之和等于目标数 9 。因此 index1 = 1, index2 = 2 。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[82,82],[471,471]]],[1566911552784,["GJX@GJXAIOU",[[1,81,"# 167. 两数之和 II - 输入有序数组"]],[81,81],[104,104]]],[1566911553654,["GJX@GJXAIOU",[[1,105,"\n"]],[104,104],[105,105]]],[1566911556677,["GJX@GJXAIOU",[[1,105,"### "]],[105,105],[109,109]]],[1566911558118,["GJX@GJXAIOU",[[-1,107,"# "]],[109,109],[107,107]]],[1566911558833,["GJX@GJXAIOU",[[1,107," "],[-1,119," "],[1,120," "],[-1,185," "],[1,186," "],[-1,190," "],[1,191," "]],[107,107],[108,108]]],[1566911561336,["GJX@GJXAIOU",[[1,108,"二、题目"]],[108,108],[112,112]]],[1566911564853,["GJX@GJXAIOU",[[1,504,"\n"]],[503,503],[504,504]]],[1566911565471,["GJX@GJXAIOU",[[1,504,"2"]],[504,504],[505,505]]],[1566911566518,["GJX@GJXAIOU",[[-1,504,"2"]],[505,505],[504,504]]],[1566911570815,["GJX@GJXAIOU",[[1,504,"## 二、解决"]],[504,504],[511,511]]],[1566911576409,["GJX@GJXAIOU",[[-1,509,"解决"]],[511,511],[509,509]]],[1566911577689,["GJX@GJXAIOU",[[1,509,"解答"]],[509,509],[511,511]]],[1566911580423,["GJX@GJXAIOU",[[1,533,"\n"]],[532,532],[533,533]]],[1566911582999,["GJX@GJXAIOU",[[1,512,"\n"]],[512,512],[513,513]]],[1566911586989,["GJX@GJXAIOU",[[-1,535,"/** 167. 两数之和 II - 输入有序数组\n * @author GJXAIOU\n * @create 2019-08-27-20:42\n *\n * 题目描述\n *给定一个已按照升序排列 的有序数组，找到两个数使得它们相加之和等于目标数。\n * 函数应该返回这两个下标值 index1 和 index2，其中 index1 必须小于 index2。\n *\n * 说明:\n * 返回的下标值（index1 和 index2）不是从零开始的。\n * 你可以假设每个输入只对应唯一的答案，而且你不可以重复使用相同的元素。\n */"]],[535,800],[535,535]]],[1566911587391,["GJX@GJXAIOU",[[-1,536,"\n"]],[535,535],[534,534]]],[1566911588181,["GJX@GJXAIOU",[[-1,535,"\n"]],[535,535],[534,534]]],[1566911588381,["GJX@GJXAIOU",[[-1,534,"\n"]],[534,534],[533,533]]],[1566911594206,["GJX@GJXAIOU",[[1,512,"···"]],[512,512],[515,515]]],[1566911594983,["GJX@GJXAIOU",[[-1,512,"···"]],[515,515],[512,512]]],[1566911596224,["GJX@GJXAIOU",[[1,512,"```"]],[512,512],[515,515]]],[1566911596248,["GJX@GJXAIOU",[[1,515,"language\n```\n"]],[515,515],[515,523]]],[1566911596760,["GJX@GJXAIOU",[[-1,515,"language"],[1,523,"j"]],[515,523],[516,516]]],[1566911597239,["GJX@GJXAIOU",[[1,516,"ava"]],[516,516],[519,519]]],[1566911597726,["GJX@GJXAIOU",[[1,520,"\n"]],[519,519],[520,520]]],[1566911602279,["GJX@GJXAIOU",[[-1,526,"package array.easy;\n\npublic class Leetcode167_Two_Sum_II_Input_array_is_sorted {\n    public int[] twoSum(int[] numbers, int target) {\n        int left = 0;\n        int right = numbers.length - 1;\n        int[] ansArray = new int[2];\n        // 当 left < right 判断值的和是否为 target\n        while(left < right){\n            int sum = numbers [left] + numbers [right];\n            if (sum == target){\n                ansArray[0] = left + 1;\n                ansArray[1] = right + 1;\n                return ansArray;\n            }else if (sum > target) {\n                right--;\n            }else {\n                left++;\n            }\n        }\n    return ansArray;\n    }\n}"]],[526,1191],[526,526]]],[1566911604854,["GJX@GJXAIOU",[[1,520,"package array.easy;\n\npublic class Leetcode167_Two_Sum_II_Input_array_is_sorted {\n    public int[] twoSum(int[] numbers, int target) {\n        int left = 0;\n        int right = numbers.length - 1;\n        int[] ansArray = new int[2];\n        // 当 left < right 判断值的和是否为 target\n        while(left < right){\n            int sum = numbers [left] + numbers [right];\n            if (sum == target){\n                ansArray[0] = left + 1;\n                ansArray[1] = right + 1;\n                return ansArray;\n            }else if (sum > target) {\n                right--;\n            }else {\n                left++;\n            }\n        }\n    return ansArray;\n    }\n}"]],[520,520],[1185,1185]]],[1566911608558,["GJX@GJXAIOU",[[-1,1192,"/**"]],[1192,1195],[1192,1192]]],[1566911608926,["GJX@GJXAIOU",[[-1,1192,"\n"]],[1192,1192],[1191,1191]]],[1566911610189,["GJX@GJXAIOU",[[-1,1276,"*/"]],[1278,1278],[1276,1276]]],[1566911613583,["GJX@GJXAIOU",[[1,1191,"- nei"]],[1191,1191],[1196,1196]]],[1566911620823,["GJX@GJXAIOU",[[-1,1191,"- nei"]],[1196,1196],[1191,1191]]],[1566911621182,["GJX@GJXAIOU",[[-1,1191,"\n"]],[1191,1191],[1190,1190]]],[1566911627054,["GJX@GJXAIOU",[[-1,151,"\n"]],[151,151],[150,150]]],[1566911627903,["GJX@GJXAIOU",[[-1,208,"\n"]],[208,208],[207,207]]],[1566911629495,["GJX@GJXAIOU",[[-1,274,"\n"]],[275,275],[274,274]]],[1566911631223,["GJX@GJXAIOU",[[1,274,"\n"]],[274,274],[275,275]]],[1566911632151,["GJX@GJXAIOU",[[1,275,"\n"]],[275,275],[276,276]]],[1566911632902,["GJX@GJXAIOU",[[-1,280,"\n"]],[280,280],[279,279]]],[1566911636135,["GJX@GJXAIOU",[[-1,381,"来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[381,500],[381,381]]],[1566911638064,["GJX@GJXAIOU",[[-1,382,"\n"]],[381,381],[380,380]]],[1566911650657,["GJX@GJXAIOU",[[1,276,"**"],[1,279,"**"]],[276,279],[276,283]]],[1566911653095,["GJX@GJXAIOU",[[1,204,"**"],[1,207,"**"]],[204,207],[204,211]]],[1566911676279,["GJX@GJXAIOU",[[1,1162,"### ces"]],[1162,1162],[1169,1169]]],[1566911677263,["GJX@GJXAIOU",[[-1,1166,"ces"]],[1169,1169],[1166,1166]]],[1566911680056,["GJX@GJXAIOU",[[1,1166,"测试程序"]],[1166,1166],[1170,1170]]],[1566911680486,["GJX@GJXAIOU",[[1,1171,"\n"]],[1170,1170],[1171,1171]]],[1566911691285,["GJX@GJXAIOU",[[1,1172,"\n"]],[1171,1171],[1172,1172]]],[1566911691863,["GJX@GJXAIOU",[[-1,1172,"\n"],[1,1173,"·"]],[1172,1172],[1173,1173]]],[1566911692040,["GJX@GJXAIOU",[[1,1173,"·"]],[1173,1173],[1174,1174]]],[1566911692806,["GJX@GJXAIOU",[[-1,1173,"·"]],[1174,1174],[1173,1173]]],[1566911692949,["GJX@GJXAIOU",[[-1,1172,"·"],[1,1173,"\n"]],[1173,1173],[1172,1172]]],[1566911693758,["GJX@GJXAIOU",[[-1,1172,"\n"],[1,1173,"`"]],[1172,1172],[1173,1173]]],[1566911694143,["GJX@GJXAIOU",[[1,1173,"``"]],[1173,1173],[1175,1175]]],[1566911694167,["GJX@GJXAIOU",[[1,1175,"language\n```\n"]],[1175,1175],[1175,1183]]],[1566911695207,["GJX@GJXAIOU",[[-1,1175,"language"],[1,1183,"j"]],[1175,1183],[1176,1176]]],[1566911695399,["GJX@GJXAIOU",[[1,1176,"va"]],[1176,1176],[1178,1178]]],[1566911696414,["GJX@GJXAIOU",[[-1,1176,"va"]],[1178,1178],[1176,1176]]],[1566911696957,["GJX@GJXAIOU",[[1,1176,"ava"]],[1176,1176],[1179,1179]]],[1566911697327,["GJX@GJXAIOU",[[1,1180,"\n"]],[1179,1179],[1180,1180]]],[1566911728071,["GJX@GJXAIOU",[[1,1180,"package array.easy;\n\nimport java.util.Scanner;\n\n/**\n * @author GJXAIOU\n * @create 2019-08-27-20:53\n */\npublic class Leetcode167_Two_Sum_II_Input_array_is_sorted_Test {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String inputString = scanner.nextLine();\n        int target = scanner.nextInt();\n        String[] inputArray = inputString.split(\" \");\n        int[] numsArray = new int [inputArray.length];\n        for (int i = 0; i < inputArray.length; i++) {\n            numsArray[i] = Integer.parseInt(inputArray [i]);\n        }\n        int[] ansArray = new int [2];\n\n\n        Leetcode167_Two_Sum_II_Input_array_is_sorted leetcode167 =\n                new Leetcode167_Two_Sum_II_Input_array_is_sorted();\n        ansArray = leetcode167.twoSum(numsArray, target);\n\n        for (int i : ansArray) {\n            System.out.println(i);\n        }\n    }\n}\n"]],[1180,1180],[2086,2086]]]],null,"GJX@GJXAIOU"]]}