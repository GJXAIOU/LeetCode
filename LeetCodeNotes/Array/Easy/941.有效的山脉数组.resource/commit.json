{"compress":true,"commitItems":[["c7d2738e-0222-4eef-a3c5-b04ad7e95315",1561531762874,"",[[1561531760083,["GJX@GJXAIOU",[[1,0,"# 941.有效的山脉数组\n\n\n\n"]],[0,0],[16,16]]],[1561531765201,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1561531765335,["GJX@GJXAIOU",[[1,0,"\n"]],[1,1],[2,2]]],[1561531765466,["GJX@GJXAIOU",[[1,2,"\n"]],[2,2],[3,3]]],[1561531834832,["GJX@GJXAIOU",[[1,0,"---\ntags: \n- 简单\n- 参考\n- 数组\n\nflag: green\nstyle: summer\ndate: '2019-6-26'\n---"]],[0,0],[74,74]]],[1561531849284,["GJX@GJXAIOU",[[1,94,"\n"]],[92,92],[93,93]]],[1561531854735,["GJX@GJXAIOU",[[1,93,"## 一、题目"]],[93,93],[100,100]]],[1561531855064,["GJX@GJXAIOU",[[1,102,"\n"]],[100,100],[101,101]]],[1561531855310,["GJX@GJXAIOU",[[1,103,"\n"]],[101,101],[102,102]]],[1561531855448,["GJX@GJXAIOU",[[1,104,"\n"]],[102,102],[103,103]]],[1561531855561,["GJX@GJXAIOU",[[1,105,"\n"]],[103,103],[104,104]]],[1561531860997,["GJX@GJXAIOU",[[1,104,"## 二、解答"]],[104,104],[111,111]]],[1561531861289,["GJX@GJXAIOU",[[1,113,"\n"]],[111,111],[112,112]]],[1561531861423,["GJX@GJXAIOU",[[1,114,"\n"]],[112,112],[113,113]]],[1561531863598,["GJX@GJXAIOU",[[1,104,"\n"]],[101,101],[102,102]]],[1561531864372,["GJX@GJXAIOU",[[1,102,"给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。\n\n让我们回顾一下，如果 A 满足下述条件，那么它是一个山脉数组：\n\nA.length >= 3\n在 0 < i < A.length - 1 条件下，存在 i 使得：\nA[0] < A[1] < ... A[i-1] < A[i]\nA[i] > A[i+1] > ... > A[B.length - 1]\n \n\n示例 1：\n\n输入：[2,1]\n输出：false\n示例 2：\n\n输入：[3,5,5]\n输出：false\n示例 3：\n\n输入：[0,3,2,1]\n输出：true\n \n\n提示：\n\n0 <= A.length <= 10000\n0 <= A[i] <= 10000 \n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/valid-mountain-array\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[102,102],[541,541]]],[1561531883660,["GJX@GJXAIOU",[[-1,110," "],[1,111," "],[-1,127," "],[1,128," "],[1,178,"·"],[-1,179,""],[-1,194," "],[1,195," "],[-1,200," "],[1,201," "],[-1,215," "],[1,216," "],[-1,222," i "],[1,225," i "],[-1,299," "],[1,300," "],[-1,382," "],[1,383," "],[-1,431," "],[1,432," "]],[178,178],[179,179]]],[1561531884716,["GJX@GJXAIOU",[[-1,178,"·"]],[179,179],[178,178]]],[1561531885618,["GJX@GJXAIOU",[[1,178,"```"]],[178,178],[181,181]]],[1561531885643,["GJX@GJXAIOU",[[1,181,"language\n```\n"]],[181,181],[181,189]]],[1561531888298,["GJX@GJXAIOU",[[-1,190,"```"]],[190,193],[190,190]]],[1561531890090,["GJX@GJXAIOU",[[1,312,"```"]],[312,312],[315,315]]],[1561531897822,["GJX@GJXAIOU",[[-1,180,"`language"]],[181,189],[180,180]]],[1561531899572,["GJX@GJXAIOU",[[1,180,"·"]],[180,180],[181,181]]],[1561531900731,["GJX@GJXAIOU",[[-1,180,"·"]],[181,181],[180,180]]],[1561531901276,["GJX@GJXAIOU",[[1,180,"`"]],[180,180],[181,181]]],[1561531901300,["GJX@GJXAIOU",[[1,181,"language\n```\n"]],[181,181],[181,189]]],[1561531906433,["GJX@GJXAIOU",[[-1,178,"```language"]],[178,189],[178,178]]],[1561531907473,["GJX@GJXAIOU",[[-1,185,"\n"]],[185,185],[184,184]]],[1561531907666,["GJX@GJXAIOU",[[-1,184,"\n"]],[184,184],[183,183]]],[1561531907834,["GJX@GJXAIOU",[[-1,183,"\n"]],[183,183],[182,182]]],[1561531911323,["GJX@GJXAIOU",[[-1,302,"\n"]],[303,303],[302,302]]],[1561531912748,["GJX@GJXAIOU",[[1,302,"\n"]],[302,302],[303,303]]],[1561531920795,["GJX@GJXAIOU",[[1,182,"l"]],[182,182],[183,183]]],[1561531921593,["GJX@GJXAIOU",[[-1,182,"l"]],[183,183],[182,182]]],[1561534982162,["GJX@GJXAIOU",[[-1,396,"\n"]],[396,396],[395,395]]],[1561534985505,["GJX@GJXAIOU",[[1,361,"\n"]],[361,361],[362,362]]],[1561534987219,["GJX@GJXAIOU",[[-1,368,"\n"]],[368,368],[367,367]]],[1561534988798,["GJX@GJXAIOU",[[-1,340,"\n"]],[340,340],[339,339]]],[1561534990186,["GJX@GJXAIOU",[[1,334,"\n"]],[334,334],[335,335]]],[1561534992487,["GJX@GJXAIOU",[[-1,315,"\n"]],[315,315],[314,314]]],[1561534997890,["GJX@GJXAIOU",[[1,309,"- "]],[309,309],[311,311]]],[1561535004898,["GJX@GJXAIOU",[[1,336,"- "]],[336,336],[338,338]]],[1561535012086,["GJX@GJXAIOU",[[1,365,"- "]],[365,365],[367,367]]],[1561535123388,["GJX@GJXAIOU",[[-1,182,"\n"]],[183,183],[182,182]]],[1561535124823,["GJX@GJXAIOU",[[1,182,"\n"]],[182,182],[183,183]]],[1561536035357,["GJX@GJXAIOU",[[1,90,"栈"]],[90,90],[91,91]]],[1561536036589,["GJX@GJXAIOU",[[-1,90,"栈"]],[91,91],[90,90]]],[1561536038867,["GJX@GJXAIOU",[[1,90," "]],[90,90],[91,91]]],[1561536039484,["GJX@GJXAIOU",[[-1,90," "]],[91,91],[90,90]]],[1561536051868,["GJX@GJXAIOU",[[1,91,"张梦涛"]],[91,91],[94,94]]],[1561536054058,["GJX@GJXAIOU",[[-1,91,"张梦涛"]],[94,94],[91,91]]],[1561536061283,["GJX@GJXAIOU",[[1,91,"、"]],[91,91],[92,92]]],[1561536061293,["GJX@GJXAIOU",[[1,94,"\n"]],[92,92],[93,93]]],[1561536061412,["GJX@GJXAIOU",[[1,95,"\n"]],[93,93],[94,94]]],[1561536061546,["GJX@GJXAIOU",[[1,96,"\n"]],[94,94],[95,95]]],[1561536062497,["GJX@GJXAIOU",[[-1,96,"\n"]],[95,95],[94,94]]],[1561536062658,["GJX@GJXAIOU",[[-1,95,"\n"]],[94,94],[93,93]]],[1561536062795,["GJX@GJXAIOU",[[-1,94,"\n"]],[93,93],[92,92]]],[1561536063702,["GJX@GJXAIOU",[[-1,91,"、"]],[92,92],[91,91]]]],null,"GJX@GJXAIOU"],["2433ab56-4d7a-456f-9f34-6aab8dfe8440",1562335495391,"---\ntags: \n- 简单\n- 参考\n- 数组\n\nflag: green\nstyle: summer\ndate: '2019-6-26'\n---\n\n\n# 941.有效的山脉数组\n\n\n## 一、题目\n\n给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。\n\n让我们回顾一下，如果 A 满足下述条件，那么它是一个山脉数组：\n\n```\nA.length >= 3\n在 0 < i < A.length - 1 条件下，存在 i 使得：\nA[0] < A[1] < ... A[i-1] < A[i]\nA[i] > A[i+1] > ... > A[B.length - 1]\n``` \n\n- 示例 1：\n输入：[2,1]\n输出：false\n\n- 示例 2：\n输入：[3,5,5]\n输出：false\n\n- 示例 3：\n输入：[0,3,2,1]\n输出：true\n \n\n提示：\n0 <= A.length <= 10000\n0 <= A[i] <= 10000 \n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/valid-mountain-array\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n## 二、解答\n\n\n\n",[[1562335475054,["GJX@GJXAIOU",[[1,564,"```java"]],[564,564],[571,571]]],[1562335475193,["GJX@GJXAIOU",[[1,573,"\n"]],[571,571],[572,572]]],[1562335475772,["GJX@GJXAIOU",[[1,574,"\n"]],[572,572],[573,573]]],[1562335475929,["GJX@GJXAIOU",[[1,575,"\n"]],[573,573],[574,574]]],[1562335476587,["GJX@GJXAIOU",[[1,574,"```"]],[574,574],[577,577]]],[1562335478427,["GJX@GJXAIOU",[[1,572,"public boolean validMountainArray(int[] A) {\n        if (A.length < 3) {\n            return false;\n        }\n//  防止 987654 这总\n        if (A[0] >= A[1]) {\n            return false;\n        }\n        boolean hasMountain = false;\n        for (int i = 1; i < A.length; i++) {\n//只要出现 前后相等就一定是错的 后面不用考虑 大于还是大于等于了 比较简单\n            if (A[i] == A[i - 1]) {\n                return false;\n            }\n            if (hasMountain && A[i] > A[i - 1]) {\n                return false;\n            }\n            if (A[i] < A[i - 1]) {\n                hasMountain = true;\n            }\n        }\n        return hasMountain ;\n    }\n\n作者：kang-da-pao-de-xiao-yu\n链接：https://leetcode-cn.com/problems/two-sum/solution/bao-li-suan-fa-by-kang-da-pao-de-xiao-yu/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[572,572],[1360,1360]]],[1562335480612,["GJX@GJXAIOU",[[1,564,"\n"]],[563,563],[564,564]]],[1562335482317,["GJX@GJXAIOU",[[-1,564,"\n"]],[565,565],[564,564]]],[1562335487946,["GJX@GJXAIOU",[[-1,1189,"作者：kang-da-pao-de-xiao-yu\n链接：https://leetcode-cn.com/problems/two-sum/solution/bao-li-suan-fa-by-kang-da-pao-de-xiao-yu/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n"]],[1188,1360],[1188,1188]]],[1562335489957,["GJX@GJXAIOU",[[1,1195,"\n"]],[1193,1193],[1194,1194]]],[1562335490387,["GJX@GJXAIOU",[[1,1195,"作者：kang-da-pao-de-xiao-yu\n链接：https://leetcode-cn.com/problems/two-sum/solution/bao-li-suan-fa-by-kang-da-pao-de-xiao-yu/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n"]],[1194,1194],[1366,1366]]],[1562335498601,["GJX@GJXAIOU",[[1,303,"\n"]],[302,302],[303,303]]],[1562335500943,["GJX@GJXAIOU",[[1,310,"\n"]],[309,309],[310,310]]],[1562335510962,["GJX@GJXAIOU",[[1,560,"## "]],[557,559],[567,567]]],[1562335514898,["GJX@GJXAIOU",[[-1,560,"##"]],[562,562],[560,560]]]],null,"GJX@GJXAIOU"],["943595b7-7196-46f0-804b-2b62904eceda",1562335592292,"---\ntags: \n- 简单\n- 参考\n- 数组\n\nflag: green\nstyle: summer\ndate: '2019-6-26'\n---\n\n\n# 941.有效的山脉数组\n\n\n## 一、题目\n\n给定一个整数数组 A，如果它是有效的山脉数组就返回 true，否则返回 false。\n\n让我们回顾一下，如果 A 满足下述条件，那么它是一个山脉数组：\n\n```\nA.length >= 3\n在 0 < i < A.length - 1 条件下，存在 i 使得：\nA[0] < A[1] < ... A[i-1] < A[i]\nA[i] > A[i+1] > ... > A[B.length - 1]\n\n``` \n\n\n- 示例 1：\n输入：[2,1]\n输出：false\n\n- 示例 2：\n输入：[3,5,5]\n输出：false\n\n- 示例 3：\n输入：[0,3,2,1]\n输出：true\n \n\n提示：\n0 <= A.length <= 10000\n0 <= A[i] <= 10000 \n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/valid-mountain-array\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n##  二、解答\n\n```java\npublic boolean validMountainArray(int[] A) {\n        if (A.length < 3) {\n            return false;\n        }\n//  防止 987654 这总\n        if (A[0] >= A[1]) {\n            return false;\n        }\n        boolean hasMountain = false;\n        for (int i = 1; i < A.length; i++) {\n//只要出现 前后相等就一定是错的 后面不用考虑 大于还是大于等于了 比较简单\n            if (A[i] == A[i - 1]) {\n                return false;\n            }\n            if (hasMountain && A[i] > A[i - 1]) {\n                return false;\n            }\n            if (A[i] < A[i - 1]) {\n                hasMountain = true;\n            }\n        }\n        return hasMountain ;\n    }\n\n\n```\n\n作者：kang-da-pao-de-xiao-yu\n链接：https://leetcode-cn.com/problems/two-sum/solution/bao-li-suan-fa-by-kang-da-pao-de-xiao-yu/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\n",[[1562335547364,["GJX@GJXAIOU",[[1,182,"java"]],[182,182],[186,186]]],[1562335550779,["GJX@GJXAIOU",[[-1,308,"``` "]],[308,312],[308,308]]],[1562335552507,["GJX@GJXAIOU",[[1,308,"```"]],[308,308],[311,311]]],[1562335563443,["GJX@GJXAIOU",[[1,569,"解题思路：首先小于等于3 返回false 。然后一个个遍历，判断，确保出现次A[i]<A[i-1]后代表已经出现了最高点，后面只要出现A[i]>A[i-1] 直接返回false。\n\n作者：kang-da-pao-de-xiao-yu\n链接：https://leetcode-cn.com/problems/two-sum/solution/bao-li-suan-fa-by-kang-da-pao-de-xiao-yu/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[569,569],[831,831]]],[1562335570826,["GJX@GJXAIOU",[[-1,660,"作者：kang-da-pao-de-xiao-yu\n链接：https://leetcode-cn.com/problems/two-sum/solution/bao-li-suan-fa-by-kang-da-pao-de-xiao-yu/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[660,831],[660,660]]],[1562335572316,["GJX@GJXAIOU",[[-1,660,"\n"]],[660,660],[659,659]]],[1562335575370,["GJX@GJXAIOU",[[1,569,"**"],[1,573,"**"]],[569,573],[569,577]]],[1562335624144,["GJX@GJXAIOU",[[-1,795,"这总"]],[797,797],[795,795]]],[1562335625645,["GJX@GJXAIOU",[[1,795,"zhe"]],[795,795],[798,798]]],[1562335626729,["GJX@GJXAIOU",[[-1,795,"zhe"]],[798,798],[795,795]]],[1562335628355,["GJX@GJXAIOU",[[1,795,"这种"]],[795,795],[797,797]]],[1562335639505,["GJX@GJXAIOU",[[1,781,"        "]],[781,781],[789,789]]],[1562335641009,["GJX@GJXAIOU",[[-1,791,"  "]],[793,793],[791,791]]],[1562335642514,["GJX@GJXAIOU",[[1,789,"\n        "]],[780,780],[789,789]]],[1562335657303,["GJX@GJXAIOU",[[-1,802," 987654 "],[1,810,"一直"]],[802,802],[804,804]]],[1562335662221,["GJX@GJXAIOU",[[1,804,"都是递减数量"]],[804,804],[810,810]]],[1562335663002,["GJX@GJXAIOU",[[-1,808,"数量"]],[810,810],[808,808]]],[1562335664500,["GJX@GJXAIOU",[[1,808,"数列"]],[808,808],[810,810]]],[1562335672708,["GJX@GJXAIOU",[[1,959,"        "]],[959,959],[967,967]]],[1562335786489,["GJX@GJXAIOU",[[-1,991," "]],[992,992],[991,991]]],[1562335790056,["GJX@GJXAIOU",[[-1,984," "]],[985,985],[984,984]]],[1562335790524,["GJX@GJXAIOU",[[1,984,"，"]],[984,984],[985,985]]],[1562336229972,["GJX@GJXAIOU",[[1,1098,"\n            "]],[1085,1085],[1098,1098]]],[1562336250617,["GJX@GJXAIOU",[[1,1098,"//如果正确的话，会先执行下面一个判断，hasM"]],[1098,1098],[1122,1122]]],[1562336253586,["GJX@GJXAIOU",[[1,1122,"ounyt"]],[1122,1122],[1127,1127]]],[1562336254936,["GJX@GJXAIOU",[[-1,1125,"yt"]],[1127,1127],[1125,1125]]],[1562336259989,["GJX@GJXAIOU",[[1,1125,"tain为true"]],[1125,1125],[1134,1134]]],[1562336260786,["GJX@GJXAIOU",[[1,1147,"\n            "]],[1134,1134],[1147,1147]]],[1562336261630,["GJX@GJXAIOU",[[1,1147,"、、"]],[1147,1147],[1149,1149]]],[1562336262249,["GJX@GJXAIOU",[[-1,1147,"、、"]],[1149,1149],[1147,1147]]],[1562336266830,["GJX@GJXAIOU",[[1,1147,"//过为"]],[1147,1147],[1151,1151]]],[1562336267683,["GJX@GJXAIOU",[[-1,1148,"/过为"]],[1151,1151],[1148,1148]]],[1562336287770,["GJX@GJXAIOU",[[1,1148,"/如果为true之后，Ap"]],[1148,1148],[1161,1161]]],[1562336288552,["GJX@GJXAIOU",[[-1,1160,"p"]],[1161,1161],[1160,1160]]],[1562336296963,["GJX@GJXAIOU",[[1,1160,"[i] > A[i = "]],[1160,1160],[1172,1172]]],[1562336297629,["GJX@GJXAIOU",[[-1,1170,"= "]],[1172,1172],[1170,1170]]],[1562336300403,["GJX@GJXAIOU",[[1,1170,"-1'"]],[1170,1170],[1173,1173]]],[1562336300956,["GJX@GJXAIOU",[[-1,1172,"'"]],[1173,1173],[1172,1172]]],[1562336303898,["GJX@GJXAIOU",[[1,1172,"] "]],[1172,1172],[1174,1174]]],[1562336304634,["GJX@GJXAIOU",[[-1,1173," "]],[1174,1174],[1173,1173]]],[1562336311216,["GJX@GJXAIOU",[[1,1173,"为证"]],[1173,1173],[1175,1175]]],[1562336312481,["GJX@GJXAIOU",[[-1,1174,"证"]],[1175,1175],[1174,1174]]],[1562336319468,["GJX@GJXAIOU",[[1,1174,"真，则结果为false"]],[1174,1174],[1185,1185]]],[1562337184658,["GJX@GJXAIOU",[[1,1417,"\n"]],[1415,1415],[1416,1416]]],[1562337185729,["GJX@GJXAIOU",[[1,1416,"fuza"]],[1416,1416],[1420,1420]]],[1562337186616,["GJX@GJXAIOU",[[-1,1416,"fuza"]],[1420,1420],[1416,1416]]],[1562337189340,["GJX@GJXAIOU",[[1,1416,"复杂度分析"]],[1416,1416],[1421,1421]]],[1562337189674,["GJX@GJXAIOU",[[1,1423,"\n"]],[1421,1421],[1422,1422]]],[1562337190586,["GJX@GJXAIOU",[[1,1422,"执行用时 :5 ms, 在所有 Java 提交中击败了33.33%的用户\n\n内存消耗 :49.1 MB, 在所有 Java 提交中击败了35.78%的用户"]],[1422,1422],[1499,1499]]],[1562337192425,["GJX@GJXAIOU",[[-1,1459,"\n"]],[1459,1459],[1458,1458]]],[1562337200289,["GJX@GJXAIOU",[[1,1198,"\n            \n            "]],[1198,1198],[1224,1224]]],[1562337205192,["GJX@GJXAIOU",[[-1,1318,"if (A[i] < A[i - 1]) {\n                hasMountain = true;\n            }"]],[1318,1390],[1318,1318]]],[1562337206928,["GJX@GJXAIOU",[[1,1198,"if (A[i] < A[i - 1]) {\n                hasMountain = true;\n            }"]],[1198,1198],[1270,1270]]],[1562337209353,["GJX@GJXAIOU",[[1,1198,"\n            "]],[1198,1198],[1211,1211]]],[1562337214168,["GJX@GJXAIOU",[[-1,1098,"//如果正确的话，会先执行下面一个判断，hasMountain为true\n            //如果为true之后，A[i] > A[i -1]为真，则结果为fals"]],[1098,1184],[1098,1098]]],[1562337218203,["GJX@GJXAIOU",[[1,1098,"//如果正确的话，会先执行下面一个判断，hasMountain为true\n            //如果为true之后，A[i] > A[i -1]为真，则结果为fals"]],[1098,1098],[1098,1184]]],[1562337221586,["GJX@GJXAIOU",[[-1,1095,"   //如果正确的话，会先执行下面一个判断，hasMountain为true\n            //如果为true之后，A[i] > A[i -1]为真，则结果为false"]],[1096,1185],[1095,1095]]],[1562337223160,["GJX@GJXAIOU",[[-1,1095,"\n"]],[1096,1096],[1095,1095]]],[1562337226537,["GJX@GJXAIOU",[[1,1098,"/"],[-1,1385," "],[1,1386," "],[-1,1390," "],[1,1391," "],[-1,1425," "],[1,1426," "],[-1,1430," "],[1,1431," "]],[1098,1098],[1099,1099]]],[1562337226665,["GJX@GJXAIOU",[[1,1099,"/"]],[1099,1099],[1100,1100]]],[1562337228368,["GJX@GJXAIOU",[[1,1098,"\n            "]],[1085,1085],[1098,1098]]],[1562337232481,["GJX@GJXAIOU",[[1,1113,"dao"]],[1113,1113],[1116,1116]]],[1562337233504,["GJX@GJXAIOU",[[-1,1113,"dao"]],[1116,1116],[1113,1113]]],[1562337239851,["GJX@GJXAIOU",[[1,1113,"到顶点就成立了"]],[1113,1113],[1120,1120]]],[1562337261349,["GJX@GJXAIOU",[[1,1227,"//前面判断成立了，到顶点了，如果侯明杰"]],[1227,1227],[1247,1247]]],[1562337262506,["GJX@GJXAIOU",[[-1,1244,"侯明杰"]],[1247,1247],[1244,1244]]],[1562337270878,["GJX@GJXAIOU",[[1,1244,"后面也成立"]],[1244,1244],[1249,1249]]],[1562337283852,["GJX@GJXAIOU",[[1,1249,"，就不是一直递减，则返回false"]],[1249,1249],[1266,1266]]]],null,"GJX@GJXAIOU"]]}