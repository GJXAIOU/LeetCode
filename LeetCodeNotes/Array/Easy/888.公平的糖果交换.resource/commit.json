{"compress":true,"commitItems":[["e799e7da-498c-4ca1-8ecc-247c94f09c21",1561893379635,"",[[1561893332990,["GJX@GJXAIOU",[[1,0,"# 888.公平的糖果交换\n\n\n\n"]],[0,0],[16,16]]],[1561893341354,["GJX@GJXAIOU",[[1,16,"## 一、问题"]],[16,16],[23,23]]],[1561893342283,["GJX@GJXAIOU",[[1,24,"\n"]],[23,23],[24,24]]],[1561893342469,["GJX@GJXAIOU",[[1,25,"\n"]],[24,24],[25,25]]],[1561893347258,["GJX@GJXAIOU",[[1,25,"## 二、解答"]],[25,25],[32,32]]],[1561893348978,["GJX@GJXAIOU",[[1,25,"\n"]],[24,24],[25,25]]],[1561893350402,["GJX@GJXAIOU",[[1,26,"\n"]],[24,24],[25,25]]],[1561893351467,["GJX@GJXAIOU",[[1,25,"爱丽丝和鲍勃有不同大小的糖果棒：A[i] 是爱丽丝拥有的第 i 块糖的大小，B[j] 是鲍勃拥有的第 j 块糖的大小。\n\n因为他们是朋友，所以他们想交换一个糖果棒，这样交换后，他们都有相同的糖果总量。（一个人拥有的糖果总量是他们拥有的糖果棒大小的总和。）\n\n返回一个整数数组 ans，其中 ans[0] 是爱丽丝必须交换的糖果棒的大小，ans[1] 是 Bob 必须交换的糖果棒的大小。\n\n如果有多个答案，你可以返回其中任何一个。保证答案存在。\n\n \n\n示例 1：\n\n输入：A = [1,1], B = [2,2]\n输出：[1,2]\n示例 2：\n\n输入：A = [1,2], B = [2,3]\n输出：[1,2]\n示例 3：\n\n输入：A = [2], B = [1,3]\n输出：[2,3]\n示例 4：\n\n输入：A = [1,2,5], B = [2,4]\n输出：[5,4]\n \n\n提示：\n\n1 <= A.length <= 10000\n1 <= B.length <= 10000\n1 <= A[i] <= 100000\n1 <= B[i] <= 100000\n保证爱丽丝与鲍勃的糖果总量不同。\n答案肯定存在。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/fair-candy-swap\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[25,25],[634,634]]],[1561895300641,["GJX@GJXAIOU",[[1,644,"\n"]],[643,643],[644,644]]],[1561895300794,["GJX@GJXAIOU",[[1,645,"\n"]],[644,644],[645,645]]],[1561895300954,["GJX@GJXAIOU",[[1,646,"\n"]],[645,645],[646,646]]],[1561895301342,["GJX@GJXAIOU",[[1,647,"\n"]],[646,646],[647,647]]],[1561895301813,["GJX@GJXAIOU",[[-1,56," "],[1,57," "],[-1,77," "],[1,78," "],[-1,199," "],[1,200," "],[-1,249," "],[1,250," "],[-1,412," "],[1,413," "],[-1,647,"\n"],[1,648,"-"]],[647,647],[648,648]]],[1561895305673,["GJX@GJXAIOU",[[1,648," 自己的解法\n- "]],[648,648],[657,657]]],[1561895306378,["GJX@GJXAIOU",[[-1,656," "]],[657,657],[656,656]]],[1561895306573,["GJX@GJXAIOU",[[-1,655,"-"],[1,656,"\n"]],[656,656],[655,655]]],[1561895307850,["GJX@GJXAIOU",[[-1,655,"\n"],[1,656,"`"]],[655,655],[656,656]]],[1561895308260,["GJX@GJXAIOU",[[1,656,"``"]],[656,656],[658,658]]],[1561895308284,["GJX@GJXAIOU",[[1,658,"language\n```\n"]],[658,658],[658,666]]],[1561895309186,["GJX@GJXAIOU",[[-1,658,"language"],[1,666,"j"]],[658,666],[659,659]]],[1561895309620,["GJX@GJXAIOU",[[1,659,"ava"]],[659,659],[662,662]]],[1561895309738,["GJX@GJXAIOU",[[1,663,"\n"]],[662,662],[663,663]]],[1561895310947,["GJX@GJXAIOU",[[1,663,"//888.公平的糖果交换问题\nclass Solution {\n    public int[] fairCandySwap(int[] A, int[] B) {\n        //首先分别求出 A 和 B 数组的和\n\n        int sumA = 0;\n        int sumB = 0;\n        int [] ans = new int[2];\n        for (int i = 0; i < A.length; i++) {\n        \tsumA += A[i];\n        }\n\n        for (int j = 0; j < B.length; j++) {\n        \tsumB += B[j];\n        }\n\n        for (int i = 0; i < A.length; i++) {\n        \tfor (int j = 0; j < B.length; j++) {\n        \t\tif (sumA - A[i] + B[j] == sumB + A[i] - B[j]) {\n        \t\t\tans[0] = A[i];\n        \t\t\tans[1] = B[j];\n        \t\t}\n        \t}\n        }\n        return ans;\n    }\n}"]],[663,663],[1272,1272]]],[1561895314250,["GJX@GJXAIOU",[[1,1277,"\n"]],[1276,1276],[1277,1277]]],[1561895314450,["GJX@GJXAIOU",[[1,1278,"\n"]],[1277,1277],[1278,1278]]],[1561895323563,["GJX@GJXAIOU",[[1,1277,"执行用时 :1078 ms, 在所有 Java 提交中击败了5.15%的用户\n\n内存消耗 :67.6 MB, 在所有 Java 提交中击败了5.21%的用户"]],[1277,1277],[1355,1355]]],[1561895325486,["GJX@GJXAIOU",[[1,1277,"\n"]],[1277,1277],[1278,1278]]],[1561895326739,["GJX@GJXAIOU",[[1,1277,"f"],[-1,1296," "],[1,1297," "],[-1,1301," "],[1,1302," "],[-1,1336," "],[1,1337," "],[-1,1341," "],[1,1342," "]],[1277,1277],[1278,1278]]],[1561895327199,["GJX@GJXAIOU",[[1,1278,"uza"]],[1278,1278],[1281,1281]]],[1561895328278,["GJX@GJXAIOU",[[-1,1277,"fuza"]],[1281,1281],[1277,1277]]],[1561895344676,["GJX@GJXAIOU",[[1,1277,"复杂度分析：垃圾到吓到自己了~~~~"]],[1277,1277],[1293,1293]]],[1561895346066,["GJX@GJXAIOU",[[-1,1294,"~"]],[1293,1293],[1292,1292]]],[1561895349261,["GJX@GJXAIOU",[[-1,1334,"\n"]],[1334,1334],[1333,1333]]],[1561895366811,["GJX@GJXAIOU",[[1,645,"- 官方解答："]],[645,645],[652,652]]],[1561895367508,["GJX@GJXAIOU",[[-1,651,"："]],[652,652],[651,651]]],[1561895367947,["GJX@GJXAIOU",[[1,652,"- \n"]],[651,651],[654,654]]],[1561895368922,["GJX@GJXAIOU",[[-1,652,"- "]],[654,654],[652,652]]],[1561895391561,["GJX@GJXAIOU",[[1,652,"方法：方程求解\n思路\n\n如果爱丽丝交换糖果 x，她将会期待交换具有特定量的糖果 y 回来。\n\n算法\n\n设爱丽丝和鲍勃分别总计有 S_A, S_BS \nA\n​\t\n ,S \nB\n​\t\n  的糖果。\n\n如果爱丽丝给了糖果 xx，并且收到了糖果 yy，那么鲍勃收到糖果 xx 并给出糖果 yy。那么，我们一定有\n\nS_A - x + y = S_B - y + x\nS \nA\n​\t\n −x+y=S \nB\n​\t\n −y+x\n\n对于公平的糖果交换。这意味着\n\ny = x + \\frac{S_B - S_A}{2}\ny=x+ \n2\nS \nB\n​\t\n −S \nA\n​\t\n \n​\t\n \n\n我们的策略很简单。对于爱丽丝拥有的每个糖果 xx，如果鲍勃有糖果 y = x + \\frac{S_B - S_A}{2}y=x+ \n2\nS \nB\n​\t\n −S \nA\n​\t\n \n​\t\n ，我们就返回 [x，y][x，y]。我们在常量时间内使用集 Set 结构来检查Bob是否拥有所需的糖果 yy。\n\nJavaPython\nclass Solution {\n    public int[] fairCandySwap(int[] A, int[] B) {\n        int sa = 0, sb = 0;  // sum of A, B respectively\n        for (int x: A) sa += x;\n        for (int x: B) sb += x;\n        int delta = (sb - sa) / 2;\n        // If Alice gives x, she expects to receive x + delta\n\n        Set<Integer> setB = new HashSet();\n        for (int x: B) setB.add(x);\n\n        for (int x: A)\n            if (setB.contains(x + delta))\n                return new int[]{x, x + delta};\n\n        throw null;\n    }\n}\n复杂度分析\n\n时间复杂度：O(A\\text{.length} + B\\text{.length})O(A.length+B.length)。\n\n空间复杂度：O(B\\text{.length})O(B.length)，setB 用去的空间。（通过使用 if 语句，我们可以将其改进到 \\min(A\\text{.length}, B\\text{.length})min(A.length,B.length)。）\n\n作者：LeetCode\n链接：https://leetcode-cn.com/problems/two-sum/solution/gong-ping-de-tang-guo-jiao-huan-by-leetcode/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[652,652],[1972,1972]]],[1561895410332,["GJX@GJXAIOU",[[1,716,"￥"]],[716,716],[717,717]]],[1561895412544,["GJX@GJXAIOU",[[-1,716,"￥"]],[717,717],[716,716]]],[1561895413474,["GJX@GJXAIOU",[[1,716,"$"]],[716,716],[717,717]]],[1561895414690,["GJX@GJXAIOU",[[1,727,"$"]],[727,727],[728,728]]],[1561895419361,["GJX@GJXAIOU",[[-1,725,"S "]],[727,727],[725,725]]],[1561895423596,["GJX@GJXAIOU",[[-1,727,"A\n​\t\n ,S \nB\n​\t\n  "]],[728,744],[727,727]]],[1561895423996,["GJX@GJXAIOU",[[-1,726,"\n"]],[727,727],[726,726]]],[1561895427673,["GJX@GJXAIOU",[[1,652,"\n"]],[652,652],[653,653]]],[1561895430603,["GJX@GJXAIOU",[[1,661,"**"],[1,663,"**"]],[661,663],[661,667]]],[1561895432737,["GJX@GJXAIOU",[[1,704,"**"],[1,706,"**"]],[704,706],[704,710]]],[1561895435216,["GJX@GJXAIOU",[[-1,668,"\n"]],[668,668],[667,667]]],[1561895437154,["GJX@GJXAIOU",[[-1,710,"\n"]],[710,710],[709,709]]],[1561895447161,["GJX@GJXAIOU",[[-1,738,"\n"]],[738,738],[737,737]]],[1561895449377,["GJX@GJXAIOU",[[-1,749,"x"]],[750,750],[749,749]]],[1561895452377,["GJX@GJXAIOU",[[-1,759,"y"]],[759,759],[758,758]]],[1561895454800,["GJX@GJXAIOU",[[-1,770,"x"]],[770,770],[769,769]]],[1561895457104,["GJX@GJXAIOU",[[-1,778,"y"]],[778,778],[777,777]]],[1561895463107,["GJX@GJXAIOU",[[1,789,"$"]],[789,789],[790,790]]],[1561895464401,["GJX@GJXAIOU",[[1,815,"$"]],[815,815],[816,816]]],[1561895468089,["GJX@GJXAIOU",[[-1,788,"\n"]],[789,789],[788,788]]],[1561895468495,["GJX@GJXAIOU",[[-1,787,"\n"]],[788,788],[787,787]]],[1561895472785,["GJX@GJXAIOU",[[-1,815,"S \nA\n​\t\n −x+y=S \nB\n​\t\n −y+x"]],[815,842],[815,815]]],[1561895489614,["GJX@GJXAIOU",[[1,833,"$"]],[833,833],[834,834]]],[1561895490760,["GJX@GJXAIOU",[[1,861,"$"]],[861,861],[862,862]]],[1561895493923,["GJX@GJXAIOU",[[-1,863,"y=x+ \n2\nS \nB\n​\t\n −S \nA\n​\t"]],[863,888],[863,863]]],[1561895495265,["GJX@GJXAIOU",[[-1,832,"\n"]],[832,832],[831,831]]],[1561895496852,["GJX@GJXAIOU",[[-1,831,"\n"]],[832,832],[831,831]]],[1561895499050,["GJX@GJXAIOU",[[-1,869,"\n"]],[869,869],[868,868]]],[1561895499261,["GJX@GJXAIOU",[[-1,867," "]],[868,868],[867,867]]],[1561895499465,["GJX@GJXAIOU",[[-1,867,"\n"]],[867,867],[866,866]]],[1561895500058,["GJX@GJXAIOU",[[-1,864,"​\t"]],[866,866],[864,864]]],[1561895500291,["GJX@GJXAIOU",[[-1,864,"\n"]],[864,864],[863,863]]],[1561895500604,["GJX@GJXAIOU",[[-1,862," "]],[863,863],[862,862]]],[1561895500985,["GJX@GJXAIOU",[[-1,862,"\n"]],[862,862],[861,861]]],[1561895501361,["GJX@GJXAIOU",[[-1,861,"\n"]],[861,861],[860,860]]],[1561895517313,["GJX@GJXAIOU",[[-1,884,"x"]],[884,884],[883,883]]],[1561895523636,["GJX@GJXAIOU",[[1,893,"$"]],[893,893],[894,894]]],[1561895529698,["GJX@GJXAIOU",[[1,921,"$"]],[921,921],[922,922]]],[1561895533986,["GJX@GJXAIOU",[[-1,922,"y=x+ \n2\nS \nB\n​\t\n −S \nA\n​\t\n \n​\t\n "]],[922,954],[922,922]]],[1561895539593,["GJX@GJXAIOU",[[-1,934,"[x，y]"]],[934,939],[934,934]]],[1561895544130,["GJX@GJXAIOU",[[-1,970,"y"]],[970,970],[969,969]]],[1561895548074,["GJX@GJXAIOU",[[-1,977,"Python"]],[977,983],[977,977]]],[1561895550499,["GJX@GJXAIOU",[[1,973,"```"]],[973,973],[976,976]]],[1561895554250,["GJX@GJXAIOU",[[1,1490,"\n"]],[1489,1489],[1490,1490]]],[1561895554819,["GJX@GJXAIOU",[[1,1490,"```"]],[1490,1490],[1493,1493]]],[1561895561108,["GJX@GJXAIOU",[[-1,1543,"O(A.length+B.length)"]],[1543,1563],[1543,1543]]],[1561895563027,["GJX@GJXAIOU",[[1,1543,"$"]],[1543,1543],[1544,1544]]],[1561895564979,["GJX@GJXAIOU",[[1,1507,"$"]],[1507,1507],[1508,1508]]],[1561895574067,["GJX@GJXAIOU",[[-1,1572,"O(B.length)"],[1,1583,"$"]],[1572,1583],[1573,1573]]],[1561895576199,["GJX@GJXAIOU",[[1,1554,"$"]],[1554,1554],[1555,1555]]],[1561895590106,["GJX@GJXAIOU",[[1,1608,"$"]],[1608,1608],[1609,1609]]],[1561895594626,["GJX@GJXAIOU",[[1,1647,"$"]],[1647,1647],[1648,1648]]],[1561895600576,["GJX@GJXAIOU",[[-1,1648,"min(A.length,B.length)。）"]],[1648,1672],[1648,1648]]],[1561895608763,["GJX@GJXAIOU",[[-1,1547,"\n"]],[1547,1547],[1546,1546]]],[1561895611591,["GJX@GJXAIOU",[[1,1494,"- "]],[1494,1494],[1496,1496]]],[1561895613218,["GJX@GJXAIOU",[[-1,1502,"\n"]],[1502,1502],[1501,1501]]],[1561895769371,["GJX@GJXAIOU",[[1,1812,"\n"]],[1811,1811],[1812,1812]]],[1561895769514,["GJX@GJXAIOU",[[1,1813,"\n"]],[1812,1812],[1813,1813]]],[1561895771810,["GJX@GJXAIOU",[[1,1812,"- ling"]],[1812,1812],[1818,1818]]],[1561895773221,["GJX@GJXAIOU",[[-1,1814,"ling"]],[1818,1818],[1814,1814]]],[1561895778404,["GJX@GJXAIOU",[[1,1814,"另一种解法"]],[1814,1814],[1819,1819]]],[1561895779048,["GJX@GJXAIOU",[[1,1820,"- \n"]],[1819,1819],[1822,1822]]],[1561895781170,["GJX@GJXAIOU",[[-1,1820,"- "]],[1822,1822],[1820,1820]]],[1561895782041,["GJX@GJXAIOU",[[1,1820,"      "]],[1820,1820],[1826,1826]]],[1561895783705,["GJX@GJXAIOU",[[-1,1821,"     "]],[1826,1826],[1821,1821]]],[1561895786596,["GJX@GJXAIOU",[[1,1821,"·"]],[1821,1821],[1822,1822]]],[1561895787329,["GJX@GJXAIOU",[[-1,1821,"·"]],[1822,1822],[1821,1821]]],[1561895788332,["GJX@GJXAIOU",[[1,1821,"```"]],[1821,1821],[1824,1824]]],[1561895791349,["GJX@GJXAIOU",[[-1,1820," "]],[1821,1821],[1820,1820]]],[1561895794278,["GJX@GJXAIOU",[[1,1823,"java"]],[1823,1823],[1827,1827]]],[1561895794541,["GJX@GJXAIOU",[[1,1829,"\n"]],[1827,1827],[1828,1828]]],[1561895794673,["GJX@GJXAIOU",[[1,1830,"\n"]],[1828,1828],[1829,1829]]],[1561895796262,["GJX@GJXAIOU",[[1,1829,"```"]],[1829,1829],[1832,1832]]],[1561895801690,["GJX@GJXAIOU",[[1,1828,"class Solution {\n   public int[] fairCandySwap(int[] A, int[] B) {\n    int Asum = 0;\n    for(int i : A) {\n        Asum += i;\n    }\n    int Bsum = 0;\n    for(int i : B) {\n        Bsum += i;\n    }\n    Arrays.sort(A);\n    Arrays.sort(B);\n    int temp = (Asum - Bsum) / 2;\n    int[] ans = new int[2];\n    int i = 0, j = 0;\n    while(i < A.length && j < B.length) {\n        if(A[i] - B[j] == temp) {\n            ans[0] = A[i];\n            ans[1] = B[j];\n            break;\n        } else if(A[i] - B[j] > temp) {\n            j++;\n        } else {\n            i++;\n        }\n    }\n    \n    \n    return ans;\n}\n}"]],[1828,1828],[2432,2432]]],[1561895804793,["GJX@GJXAIOU",[[1,2438,"\n"]],[2436,2436],[2437,2437]]],[1561895804921,["GJX@GJXAIOU",[[1,2439,"\n"]],[2437,2437],[2438,2438]]],[1561895805561,["GJX@GJXAIOU",[[1,2440,"\n"]],[2438,2438],[2439,2439]]],[1561895805705,["GJX@GJXAIOU",[[1,2441,"\n"]],[2439,2439],[2440,2440]]],[1561895812162,["GJX@GJXAIOU",[[1,2438,"执行用时 :23 ms, 在所有 Java 提交中击败了92.06%的用户\n\n内存消耗 :40 MB, 在所有 Java 提交中击败了94.35%的用户"]],[2438,2438],[2514,2514]]],[1561895815362,["GJX@GJXAIOU",[[1,2437,"f"],[-1,2454," "],[1,2455," "],[-1,2459," "],[1,2460," "],[-1,2493," "],[1,2494," "],[-1,2498," "],[1,2499," "]],[2437,2437],[2438,2438]]],[1561895815698,["GJX@GJXAIOU",[[1,2438,"uz"]],[2438,2438],[2440,2440]]],[1561895816473,["GJX@GJXAIOU",[[-1,2437,"fuz"]],[2440,2440],[2437,2437]]],[1561895820331,["GJX@GJXAIOU",[[1,2437,"复杂度分析："]],[2437,2437],[2443,2443]]],[1561895822777,["GJX@GJXAIOU",[[-1,2482,"\n"]],[2482,2482],[2481,2481]]],[1561895827066,["GJX@GJXAIOU",[[1,2437,"\n"]],[2437,2437],[2438,2438]]],[1561895827764,["GJX@GJXAIOU",[[1,2438,"- "]],[2438,2438],[2440,2440]]],[1561895865129,["GJX@GJXAIOU",[[1,1649,"执行用时 :33 ms, 在所有 Java 提交中击败了79.18%的用户\n\n内存消耗 :57.7 MB, 在所有 Java 提交中击败了23.04%的用户"]],[1649,1649],[1727,1727]]],[1561895867152,["GJX@GJXAIOU",[[-1,1687,"\n"]],[1687,1687],[1686,1686]]],[1561895873890,["GJX@GJXAIOU",[[1,1502,"- "],[1,1548,"- "],[1,1649,"- "],[1,1687,"- "]],[1502,1726],[1504,1734]]],[1561895879199,["GJX@GJXAIOU",[[1,1502,"  "],[1,1550,"  "],[1,1653,"  "],[1,1693,"  "]],[1504,1734],[1506,1742]]],[1561895882480,["GJX@GJXAIOU",[[1,1743,"\n"]],[1743,1743],[1744,1744]]],[1561895950921,["GJX@GJXAIOU",[[1,2121,"\n    "]],[2116,2116],[2121,2121]]],[1561895953832,["GJX@GJXAIOU",[[1,2166,"\n    "]],[2161,2161],[2166,2166]]],[1561896258780,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1561896258901,["GJX@GJXAIOU",[[1,0,"\n"]],[1,1],[2,2]]],[1561896260572,["GJX@GJXAIOU",[[1,0,"---\ntags: \n- 简单\n- 完成\n- 数组\nflag: green\nstyle: summer\ndate: '2019-6-29'\n---"]],[0,0],[73,73]]],[1561896263425,["GJX@GJXAIOU",[[-1,66,"29"]],[68,68],[66,66]]],[1561896263716,["GJX@GJXAIOU",[[1,66,"3"],[-1,1750," "],[1,1751," "],[-1,1755," "],[1,1756," "],[-1,1794," "],[1,1795," "],[-1,1799," "],[1,1800," "]],[66,66],[67,67]]],[1561896264019,["GJX@GJXAIOU",[[1,67,"0"]],[67,67],[68,68]]]],null,"GJX@GJXAIOU"]]}