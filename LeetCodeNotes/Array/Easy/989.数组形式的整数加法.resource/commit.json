{"compress":true,"commitItems":[["fda2d4f0-1c30-4e12-823c-78d2d176c1e8",1561902935218,"",[[1561902892111,["GJX@GJXAIOU",[[1,0,"# 989.数组形式的整数加法\n\n\n\n"]],[0,0],[18,18]]],[1561902901451,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1561902901575,["GJX@GJXAIOU",[[1,0,"\n"]],[1,1],[2,2]]],[1561902903003,["GJX@GJXAIOU",[[1,0,"---\ntags: \n- 简单\n- 完成\n- 数组\nflag: green\nstyle: summer\ndate: '2019-6-30'\n---"]],[0,0],[73,73]]],[1561902911762,["GJX@GJXAIOU",[[1,92,"## 一、题目"]],[92,92],[99,99]]],[1561902912114,["GJX@GJXAIOU",[[1,101,"\n"]],[99,99],[100,100]]],[1561902912251,["GJX@GJXAIOU",[[1,102,"\n"]],[100,100],[101,101]]],[1561902912355,["GJX@GJXAIOU",[[1,103,"\n"]],[101,101],[102,102]]],[1561902912475,["GJX@GJXAIOU",[[1,104,"\n"]],[102,102],[103,103]]],[1561902912595,["GJX@GJXAIOU",[[1,105,"\n"]],[103,103],[104,104]]],[1561902917368,["GJX@GJXAIOU",[[1,104,"## 二、解答"]],[104,104],[111,111]]],[1561902927621,["GJX@GJXAIOU",[[1,101,"对于非负整数 X 而言，X 的数组形式是每位数字按从左到右的顺序形成的数组。例如，如果 X = 1231，那么其数组形式为 [1,2,3,1]。\n\n给定非负整数 X 的数组形式 A，返回整数 X+K 的数组形式。\n\n \n\n示例 1：\n\n输入：A = [1,2,0,0], K = 34\n输出：[1,2,3,4]\n解释：1200 + 34 = 1234\n解释 2：\n\n输入：A = [2,7,4], K = 181\n输出：[4,5,5]\n解释：274 + 181 = 455\n示例 3：\n\n输入：A = [2,1,5], K = 806\n输出：[1,0,2,1]\n解释：215 + 806 = 1021\n示例 4：\n\n输入：A = [9,9,9,9,9,9,9,9,9,9], K = 1\n输出：[1,0,0,0,0,0,0,0,0,0,0]\n解释：9999999999 + 1 = 10000000000\n \n\n提示：\n\n1 <= A.length <= 10000\n0 <= A[i] <= 9\n0 <= K <= 10000\n如果 A.length > 1，那么 A[0] != 0\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/add-to-array-form-of-integer\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[101,101],[711,711]]],[1561902964594,["GJX@GJXAIOU",[[-1,218,"\n"]],[218,218],[217,217]]],[1561902978781,["GJX@GJXAIOU",[[-1,510,"\n"]],[510,510],[509,509]]],[1561902992066,["GJX@GJXAIOU",[[-1,276,"解释"]],[278,278],[276,276]]],[1561902994152,["GJX@GJXAIOU",[[-1,107," X "],[1,110," X "],[-1,114," "],[1,115," "],[-1,144," "],[1,145," "],[-1,162," "],[1,163," "],[-1,189," "],[1,190," "],[-1,196," X+K "],[1,201," X+K "],[-1,209," "],[1,210," "],[-1,276,""],[1,276,"示例"],[-1,501," "],[1,502," "],[-1,564," "],[1,565," "],[-1,580," "],[1,581," "]],[276,276],[278,278]]],[1561902996091,["GJX@GJXAIOU",[[1,276,"\n"]],[276,276],[277,277]]],[1561902997755,["GJX@GJXAIOU",[[-1,283,"\n"]],[283,283],[283,283]]],[1561903000444,["GJX@GJXAIOU",[[1,277,"- "]],[277,277],[279,279]]],[1561903004043,["GJX@GJXAIOU",[[1,212,"- "]],[212,212],[214,214]]],[1561903006891,["GJX@GJXAIOU",[[-1,347,"\n"]],[347,347],[347,347]]],[1561903007148,["GJX@GJXAIOU",[[-1,346,"\n"]],[347,347],[346,346]]],[1561903008643,["GJX@GJXAIOU",[[1,346,"\n"]],[346,346],[347,347]]],[1561903009956,["GJX@GJXAIOU",[[1,341,"\n"]],[341,341],[342,342]]],[1561903010907,["GJX@GJXAIOU",[[1,342,"- "]],[342,342],[344,344]]],[1561903013403,["GJX@GJXAIOU",[[-1,413,"\n"]],[413,413],[413,413]]],[1561903014643,["GJX@GJXAIOU",[[1,407,"\n"]],[407,407],[408,408]]],[1561903016654,["GJX@GJXAIOU",[[1,408,"- "]],[408,408],[410,410]]],[1561903084906,["GJX@GJXAIOU",[[-1,209," "]],[210,210],[209,209]]],[1561903085266,["GJX@GJXAIOU",[[-1,210,"\n"]],[209,209],[208,208]]],[1561903085745,["GJX@GJXAIOU",[[-1,209,"\n"]],[208,208],[207,207]]],[1561904822480,["GJX@GJXAIOU",[[1,726,"\n"]],[725,725],[726,726]]],[1561904822605,["GJX@GJXAIOU",[[1,727,"\n"]],[726,726],[727,727]]],[1561904823090,["GJX@GJXAIOU",[[-1,727,"\n"],[1,728,"-"]],[727,727],[728,728]]],[1561904825333,["GJX@GJXAIOU",[[1,728," 管阀"]],[728,728],[731,731]]],[1561904825843,["GJX@GJXAIOU",[[-1,730,"阀"]],[731,731],[730,730]]],[1561904827611,["GJX@GJXAIOU",[[1,730,"饭"]],[730,730],[731,731]]],[1561904828145,["GJX@GJXAIOU",[[-1,730,"饭"]],[731,731],[730,730]]],[1561904831243,["GJX@GJXAIOU",[[1,730,"方解法\n- "]],[730,730],[736,736]]],[1561904832082,["GJX@GJXAIOU",[[-1,735," "]],[736,736],[735,735]]],[1561904832233,["GJX@GJXAIOU",[[-1,734,"-"],[1,735,"\n"]],[735,735],[734,734]]],[1561904833137,["GJX@GJXAIOU",[[-1,734,"\n"],[1,735,"`"]],[734,734],[735,735]]],[1561904833523,["GJX@GJXAIOU",[[1,735,"``"]],[735,735],[737,737]]],[1561904833547,["GJX@GJXAIOU",[[1,737,"language\n```\n"]],[737,737],[737,745]]],[1561904834356,["GJX@GJXAIOU",[[-1,737,"language"],[1,745,"j"]],[737,745],[738,738]]],[1561904834722,["GJX@GJXAIOU",[[1,738,"ava"]],[738,738],[741,741]]],[1561904834820,["GJX@GJXAIOU",[[1,742,"\n"]],[741,741],[742,742]]],[1561904842689,["GJX@GJXAIOU",[[1,742,"方法：逐位相加\n思路\n\n让我们逐位将数字加在一起。举一个例子，如果要计算 123123 与 912912 的和。我们顺次计算 3+23+2、2+12+1、1+91+9。任何时候，当加法的结果大于等于 1010，我们要将进位的 11 加入下一位的计算中去，所以最终结果等于 10351035。\n\n算法\n\n我们可以对以上的想法做一个小变化，让它实现起来更容易 —— 我们将整个加数加入数组表示的数的最低位。\n\n继续之前的例子 123+912123+912，我们把它表示成 [1, 2, 3+912][1,2,3+912]。然后，我们计算 3+912 = 9153+912=915。55 留在当前这一位，将 910/10=91910/10=91 以进位的形式加入下一位。\n\n然后，我们再重复这个过程，计算 [1, 2+91, 5][1,2+91,5]。我们得到 9393，33 留在当前位，将 90/10=990/10=9 以进位的形式加入下一位。继而又得到 [1+9, 3, 5][1+9,3,5]，重复这个过程之后，最终得到结果 [1, 0, 3, 5][1,0,3,5]。\n\nJavaPython\nclass Solution {\n    public List<Integer> addToArrayForm(int[] A, int K) {\n        int N = A.length;\n        int cur = K;\n        List<Integer> ans = new ArrayList();\n\n        int i = N;\n        while (--i >= 0 || cur > 0) {\n            if (i >= 0)\n                cur += A[i];\n            ans.add(cur % 10);\n            cur /= 10;\n        }\n\n        Collections.reverse(ans);\n        return ans;\n    }\n}\n复杂度分析\n\n时间复杂度： O(\\max(N, \\log K))O(max(N,logK))，其中 NN 是数组 A 的长度。\n\n空间复杂度： O(\\max(N, \\log K))O(max(N,logK))。\n\n作者：LeetCode\n链接：https://leetcode-cn.com/problems/two-sum/solution/shu-zu-xing-shi-de-zheng-shu-jia-fa-by-leetcode/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[742,742],[1917,1917]]],[1561904856208,["GJX@GJXAIOU",[[-1,729,"管"]],[730,730],[729,729]]],[1561904856764,["GJX@GJXAIOU",[[1,729,"g "]],[729,729],[730,730]]],[1561904857059,["GJX@GJXAIOU",[[1,730,"uan"]],[730,730],[733,733]]],[1561904858308,["GJX@GJXAIOU",[[-1,729,"guan"]],[733,733],[729,729]]],[1561904860316,["GJX@GJXAIOU",[[1,729,"管"]],[729,729],[730,730]]],[1561904860849,["GJX@GJXAIOU",[[-1,729,"管"]],[730,730],[729,729]]],[1561904862896,["GJX@GJXAIOU",[[1,729,"馆"]],[729,729],[730,730]]],[1561904863377,["GJX@GJXAIOU",[[-1,729,"馆"]],[730,730],[729,729]]],[1561904865350,["GJX@GJXAIOU",[[1,729,"官"]],[729,729],[730,730]]],[1561904866737,["GJX@GJXAIOU",[[-1,730," "]],[731,731],[730,730]]],[1561904871313,["GJX@GJXAIOU",[[-1,734,"```java"]],[734,741],[734,734]]],[1561904873953,["GJX@GJXAIOU",[[-1,1223,"J"],[1,1224,"```j"],[-1,1227,"Python"]],[1223,1233],[1230,1230]]],[1561904876900,["GJX@GJXAIOU",[[1,1636,"\n"]],[1635,1635],[1636,1636]]],[1561904877621,["GJX@GJXAIOU",[[1,1636,"···"]],[1636,1636],[1639,1639]]],[1561904878946,["GJX@GJXAIOU",[[-1,1636,"···"]],[1639,1639],[1636,1636]]],[1561904879884,["GJX@GJXAIOU",[[1,1636,"```"]],[1636,1636],[1639,1639]]],[1561904882209,["GJX@GJXAIOU",[[-1,1912,"```"]],[1912,1915],[1912,1912]]],[1561904883250,["GJX@GJXAIOU",[[-1,1704,"\n"]],[1704,1704],[1703,1703]]],[1561904883978,["GJX@GJXAIOU",[[-1,1646,"\n"]],[1646,1646],[1645,1645]]],[1561904886966,["GJX@GJXAIOU",[[1,1640,"- "]],[1640,1640],[1642,1642]]]],null,"GJX@GJXAIOU"],["bbb5464f-736c-427e-b0d8-e74986f2eb3c",1562288288527,"---\ntags: \n- 简单\n- 完成\n- 数组\nflag: green\nstyle: summer\ndate: '2019-6-30'\n---\n\n# 989.数组形式的整数加法\n\n## 一、题目\n\n对于非负整数 X 而言，X 的数组形式是每位数字按从左到右的顺序形成的数组。例如，如果 X = 1231，那么其数组形式为 [1,2,3,1]。\n\n给定非负整数 X 的数组形式 A，返回整数 X+K 的数组形式。\n\n- 示例 1：\n输入：A = [1,2,0,0], K = 34\n输出：[1,2,3,4]\n解释：1200 + 34 = 1234\n\n- 示例 2：\n输入：A = [2,7,4], K = 181\n输出：[4,5,5]\n解释：274 + 181 = 455\n\n- 示例 3：\n输入：A = [2,1,5], K = 806\n输出：[1,0,2,1]\n解释：215 + 806 = 1021\n\n- 示例 4：\n输入：A = [9,9,9,9,9,9,9,9,9,9], K = 1\n输出：[1,0,0,0,0,0,0,0,0,0,0]\n解释：9999999999 + 1 = 10000000000\n \n\n提示：\n1 <= A.length <= 10000\n0 <= A[i] <= 9\n0 <= K <= 10000\n如果 A.length > 1，那么 A[0] != 0\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/add-to-array-form-of-integer\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n\n\n## 二、解答\n\n\n- 官方解法\n\n方法：逐位相加\n思路\n\n让我们逐位将数字加在一起。举一个例子，如果要计算 123123 与 912912 的和。我们顺次计算 3+23+2、2+12+1、1+91+9。任何时候，当加法的结果大于等于 1010，我们要将进位的 11 加入下一位的计算中去，所以最终结果等于 10351035。\n\n算法\n\n我们可以对以上的想法做一个小变化，让它实现起来更容易 —— 我们将整个加数加入数组表示的数的最低位。\n\n继续之前的例子 123+912123+912，我们把它表示成 [1, 2, 3+912][1,2,3+912]。然后，我们计算 3+912 = 9153+912=915。55 留在当前这一位，将 910/10=91910/10=91 以进位的形式加入下一位。\n\n然后，我们再重复这个过程，计算 [1, 2+91, 5][1,2+91,5]。我们得到 9393，33 留在当前位，将 90/10=990/10=9 以进位的形式加入下一位。继而又得到 [1+9, 3, 5][1+9,3,5]，重复这个过程之后，最终得到结果 [1, 0, 3, 5][1,0,3,5]。\n\n```java\nclass Solution {\n    public List<Integer> addToArrayForm(int[] A, int K) {\n        int N = A.length;\n        int cur = K;\n        List<Integer> ans = new ArrayList();\n\n        int i = N;\n        while (--i >= 0 || cur > 0) {\n            if (i >= 0)\n                cur += A[i];\n            ans.add(cur % 10);\n            cur /= 10;\n        }\n\n        Collections.reverse(ans);\n        return ans;\n    }\n}\n```\n- 复杂度分析\n时间复杂度： O(\\max(N, \\log K))O(max(N,logK))，其中 NN 是数组 A 的长度。\n空间复杂度： O(\\max(N, \\log K))O(max(N,logK))。\n\n作者：LeetCode\n链接：https://leetcode-cn.com/problems/two-sum/solution/shu-zu-xing-shi-de-zheng-shu-jia-fa-by-leetcode/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\n",[[1562288240855,["GJX@GJXAIOU",[[-1,1673,"O(max(N,logK))"]],[1673,1687],[1673,1673]]],[1562288242873,["GJX@GJXAIOU",[[1,1673,"$"]],[1673,1673],[1674,1674]]],[1562288246416,["GJX@GJXAIOU",[[1,1655,"$"]],[1655,1655],[1656,1656]]],[1562288249066,["GJX@GJXAIOU",[[1,1700,"$"]],[1700,1700],[1701,1701]]],[1562288252919,["GJX@GJXAIOU",[[-1,1719,"O(max(N,logK))"]],[1719,1733],[1719,1719]]],[1562288253400,["GJX@GJXAIOU",[[1,1719,"$"]],[1719,1719],[1720,1720]]],[1562288258903,["GJX@GJXAIOU",[[-1,1680,"N"]],[1680,1680],[1679,1679]]],[1562288312372,["GJX@GJXAIOU",[[-1,18,"完成"]],[20,20],[18,18]]],[1562288313840,["GJX@GJXAIOU",[[1,18,"cankao"]],[18,18],[24,24]]],[1562288315647,["GJX@GJXAIOU",[[-1,18,"cankao"]],[24,24],[18,18]]],[1562288317678,["GJX@GJXAIOU",[[1,18,"参考"]],[18,18],[20,20]]],[1562288341960,["GJX@GJXAIOU",[[1,735,"**"],[1,742,"**"]],[735,742],[735,746]]],[1562288344103,["GJX@GJXAIOU",[[1,747,"\n"]],[747,747],[748,748]]],[1562288345823,["GJX@GJXAIOU",[[1,748,"****"]],[748,748],[750,750]]],[1562288348465,["GJX@GJXAIOU",[[1,750,"思路"]],[750,750],[752,752]]],[1562288350441,["GJX@GJXAIOU",[[-1,754,"思路"]],[756,756],[754,754]]],[1562288353743,["GJX@GJXAIOU",[[1,891,"**"],[1,893,"**"]],[891,893],[891,897]]],[1562288356823,["GJX@GJXAIOU",[[-1,755,"\n"]],[755,755],[754,754]]],[1562288358822,["GJX@GJXAIOU",[[-1,897,"\n"]],[897,897],[896,896]]],[1562288389183,["GJX@GJXAIOU",[[-1,809,"3+2"]],[809,812],[809,809]]],[1562288390930,["GJX@GJXAIOU",[[-1,813,"2+1"]],[813,816],[813,813]]],[1562288392791,["GJX@GJXAIOU",[[-1,817,"1+9"]],[817,820],[817,817]]],[1562288395943,["GJX@GJXAIOU",[[-1,783,"123"]],[783,786],[783,783]]],[1562288397737,["GJX@GJXAIOU",[[-1,789,"912"]],[789,792],[789,789]]],[1562288399504,["GJX@GJXAIOU",[[-1,830,"10"]],[830,832],[830,830]]],[1562288401831,["GJX@GJXAIOU",[[-1,866,"1035"]],[866,870],[866,866]]],[1562288402878,["GJX@GJXAIOU",[[-1,840,"1"]],[841,841],[840,840]]],[1562288475388,["GJX@GJXAIOU",[[-1,942,"123+912"]],[942,949],[942,942]]],[1562288482216,["GJX@GJXAIOU",[[-1,964,"[1,2,3+912]"]],[964,975],[964,964]]],[1562288490394,["GJX@GJXAIOU",[[-1,995,"5"]],[995,995],[994,994]]],[1562288506415,["GJX@GJXAIOU",[[-1,1015,"910/10=91"]],[1015,1024],[1015,1015]]],[1562288620280,["GJX@GJXAIOU",[[-1,984,"3+912=915"]],[984,993],[984,984]]],[1562288631585,["GJX@GJXAIOU",[[-1,1049,"[1,2+91,5]"]],[1059,1059],[1049,1049]]],[1562288634583,["GJX@GJXAIOU",[[-1,1056,"39"]],[1057,1057],[1055,1055]]],[1562288637041,["GJX@GJXAIOU",[[-1,1059,"3"]],[1059,1059],[1058,1058]]],[1562288642242,["GJX@GJXAIOU",[[-1,1075,"90/10=9 "]],[1075,1083],[1075,1075]]],[1562288649276,["GJX@GJXAIOU",[[-1,1104,"[1+9,3,5]"]],[1104,1113],[1104,1104]]],[1562288654596,["GJX@GJXAIOU",[[-1,1133,"[1,0,3,5]"]],[1133,1142],[1133,1133]]],[1562288861225,["GJX@GJXAIOU",[[1,1310,"、、"]],[1310,1310],[1312,1312]]],[1562288861743,["GJX@GJXAIOU",[[-1,1310,"、、"]],[1312,1312],[1310,1310]]],[1562288877753,["GJX@GJXAIOU",[[1,1310," //Integer为Intde "]],[1310,1310],[1327,1327]]],[1562288879213,["GJX@GJXAIOU",[[-1,1321,"Intde "]],[1327,1327],[1321,1321]]],[1562288880495,["GJX@GJXAIOU",[[1,1321,"int "]],[1321,1321],[1325,1325]]],[1562288880960,["GJX@GJXAIOU",[[-1,1324," "]],[1325,1325],[1324,1324]]],[1562288881632,["GJX@GJXAIOU",[[1,1324,"d"]],[1324,1324],[1325,1325]]],[1562288882166,["GJX@GJXAIOU",[[-1,1324,"d"]],[1325,1325],[1324,1324]]],[1562288885881,["GJX@GJXAIOU",[[1,1324,"的包装类"]],[1324,1324],[1328,1328]]]],null,"GJX@GJXAIOU"]]}