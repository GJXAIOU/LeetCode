{"compress":true,"commitItems":[["a2382e90-d744-4043-aaf6-346497869233",1567337955533,"#### [3\\. 无重复字符的最长子串](https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/)",[[1567337919820,["GJX@GJXAIOU",[[1,0,"\n"]],[0,0],[1,1]]],[1567337920892,["GJX@GJXAIOU",[[1,0,"---\ntags: \n- 简单\n- 完成\n- 字符串\n- 双指针\nflag: green\nstyle: summer\ndate: '2019-8-28'\n---"]],[0,0],[80,80]]],[1567337933762,["GJX@GJXAIOU",[[-1,82,"###"]],[85,85],[82,82]]],[1567337936764,["GJX@GJXAIOU",[[-1,85,"\\"]],[86,86],[85,85]]],[1567337937955,["GJX@GJXAIOU",[[-1,83,"["]],[84,84],[83,83]]],[1567337941171,["GJX@GJXAIOU",[[-1,96,"](https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/)"]],[96,179],[96,96]]],[1567338100163,["GJX@GJXAIOU",[[1,96,"\n\n"]],[96,96],[97,97]]],[1567338101186,["GJX@GJXAIOU",[[1,98,"\n"]],[97,97],[98,98]]],[1567338103028,["GJX@GJXAIOU",[[1,98,"## yi "]],[98,98],[104,104]]],[1567338104138,["GJX@GJXAIOU",[[-1,101,"yi "]],[104,104],[101,101]]],[1567338106053,["GJX@GJXAIOU",[[1,101,"一、题目"]],[101,101],[105,105]]],[1567338106277,["GJX@GJXAIOU",[[1,106,"\n"]],[105,105],[106,106]]],[1567338106358,["GJX@GJXAIOU",[[1,107,"\n"]],[106,106],[107,107]]],[1567338106852,["GJX@GJXAIOU",[[1,108,"\n"]],[107,107],[108,108]]],[1567338106954,["GJX@GJXAIOU",[[1,109,"\n"]],[108,108],[109,109]]],[1567338107748,["GJX@GJXAIOU",[[1,109,"## "]],[109,109],[112,112]]],[1567338108998,["GJX@GJXAIOU",[[-1,110,"# "]],[112,112],[110,110]]],[1567338109605,["GJX@GJXAIOU",[[1,110,"# #"]],[110,110],[113,113]]],[1567338110421,["GJX@GJXAIOU",[[-1,112,"#"]],[113,113],[112,112]]],[1567338115093,["GJX@GJXAIOU",[[1,112,"二、结题"]],[112,112],[116,116]]],[1567338115482,["GJX@GJXAIOU",[[1,117,"\n"]],[116,116],[117,117]]],[1567338115841,["GJX@GJXAIOU",[[-1,117,"\n"]],[117,117],[116,116]]],[1567338116100,["GJX@GJXAIOU",[[-1,114,"结题"]],[116,116],[114,114]]],[1567338118500,["GJX@GJXAIOU",[[1,114,"解答"]],[114,114],[116,116]]],[1567338118782,["GJX@GJXAIOU",[[1,117,"\n"]],[116,116],[117,117]]],[1567338128837,["GJX@GJXAIOU",[[-1,117,"\n"],[1,118,"`"]],[117,117],[118,118]]],[1567338129180,["GJX@GJXAIOU",[[1,118,"``"]],[118,118],[120,120]]],[1567338129202,["GJX@GJXAIOU",[[1,120,"language\n```\n"]],[120,120],[120,128]]],[1567338129939,["GJX@GJXAIOU",[[-1,120,"language"],[1,128,"j"]],[120,128],[121,121]]],[1567338130298,["GJX@GJXAIOU",[[1,121,"ava"]],[121,121],[124,124]]],[1567338130357,["GJX@GJXAIOU",[[1,125,"\n"]],[124,124],[125,125]]],[1567338132966,["GJX@GJXAIOU",[[1,125,"class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        int[] freq = new int[256];\n        // 初始滑动窗口大小为：s[left....right]\n        int left = 0;\n        int right = -1;\n        int res = 0;\n\n        while (left < s.length() ){\n            if((right + 1) < s.length() && (freq[s.charAt(right + 1)] == 0)){\n                right++;\n                freq [s.charAt(right)]++;\n            }else {\n                freq [s.charAt(left)]--;\n                left++;\n            }\n            res = res > (right - left + 1) ? res : (right - left + 1);\n        }\n        return res;\n    }\n}"]],[125,125],[723,723]]],[1567338143211,["GJX@GJXAIOU",[[1,728,"\n"]],[727,727],[728,728]]],[1567338143326,["GJX@GJXAIOU",[[1,729,"\n"]],[728,728],[729,729]]],[1567338143707,["GJX@GJXAIOU",[[1,729,"执行用时 :15 ms, 在所有 Java 提交中击败了82.17%的用户\n\n内存消耗 :39 MB, 在所有 Java 提交中击败了84.23%的用户"]],[729,729],[805,805]]],[1567338145780,["GJX@GJXAIOU",[[-1,767,"\n"]],[767,767],[766,766]]],[1567338163212,["GJX@GJXAIOU",[[1,106,"给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。\n\n示例 1:\n\n输入: \"abcabcbb\"\n输出: 3 \n解释: 因为无重复字符的最长子串是 \"abc\"，所以其长度为 3。\n示例 2:\n\n输入: \"bbbbb\"\n输出: 1\n解释: 因为无重复字符的最长子串是 \"b\"，所以其长度为 1。\n示例 3:\n\n输入: \"pwwkew\"\n输出: 3\n解释: 因为无重复字符的最长子串是 \"wke\"，所以其长度为 3。\n     请注意，你的答案必须是 子串 的长度，\"pwke\" 是一个子序列，不是子串。\n\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/longest-substring-without-repeating-characters\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[106,106],[498,498]]],[1567338171284,["GJX@GJXAIOU",[[1,120,"**"],[1,133,"**"]],[120,133],[120,137]]],[1567338173558,["GJX@GJXAIOU",[[-1,150,"\n"]],[150,150],[149,149]]],[1567338182294,["GJX@GJXAIOU",[[1,206,"\n"]],[206,206],[207,207]]],[1567338184638,["GJX@GJXAIOU",[[-1,213,"\n"]],[213,213],[212,212]]],[1567338187547,["GJX@GJXAIOU",[[1,263,"\n"]],[263,263],[264,264]]],[1567338190514,["GJX@GJXAIOU",[[-1,270,"\n"]],[270,270],[269,269]]],[1567339583882,["GJX@GJXAIOU",[[-1,368,"来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/longest-substring-without-repeating-characters\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。"]],[368,501],[368,368]]],[1567339587185,["GJX@GJXAIOU",[[-1,370,"\n"]],[369,369],[368,368]]],[1567339587308,["GJX@GJXAIOU",[[-1,369,"\n"]],[368,368],[367,367]]],[1567339619964,["GJX@GJXAIOU",[[1,377,"\n"]],[376,376],[377,377]]],[1567339633652,["GJX@GJXAIOU",[[1,378,"\n"]],[377,377],[378,378]]],[1567339637091,["GJX@GJXAIOU",[[1,378,"### "]],[378,378],[382,382]]],[1567339640139,["GJX@GJXAIOU",[[-1,130," "],[1,131," "],[-1,137," "],[1,138," "],[-1,146," "],[1,147," "],[-1,306," "],[1,307," "],[-1,323," "],[1,324," "],[-1,353," "],[1,354," "],[1,382,"t"],[-1,1011," "],[1,1012," "],[-1,1016," "],[1,1017," "],[-1,1049," "],[1,1050," "],[-1,1054," "],[1,1055," "]],[382,382],[383,383]]],[1567339640326,["GJX@GJXAIOU",[[1,383,"i"]],[383,383],[384,384]]],[1567339640920,["GJX@GJXAIOU",[[-1,382,"ti"]],[384,384],[382,382]]],[1567339641858,["GJX@GJXAIOU",[[1,382,"（）"]],[382,382],[384,384]]],[1567339643438,["GJX@GJXAIOU",[[1,383,"一"]],[383,383],[384,384]]],[1567339646100,["GJX@GJXAIOU",[[1,385,"题目解析"]],[385,385],[389,389]]],[1567339646452,["GJX@GJXAIOU",[[1,390,"\n"]],[389,389],[390,390]]],[1567339648189,["GJX@GJXAIOU",[[1,390,"建立一个256位大小的整型数组 freg ，用来建立字符和其出现位置之间的映射。\n\n维护一个滑动窗口，窗口内的都是没有重复的字符，去尽可能的扩大窗口的大小，窗口不停的向右滑动。\n\n*   （1）如果当前遍历到的字符从未出现过，那么直接扩大右边界；\n*   （2）如果当前遍历到的字符出现过，则缩小窗口（左边索引向右移动），然后继续观察当前遍历到的字符；\n*   （3）重复（1）（2），直到左边索引无法再移动；\n*   （4）维护一个结果res，每次用出现过的窗口大小来更新结果 res，最后返回 res 获取结果。"]],[390,390],[648,648]]],[1567339661293,["GJX@GJXAIOU",[[-1,409,"g"]],[410,410],[409,409]]],[1567339662790,["GJX@GJXAIOU",[[1,409,"q"]],[409,409],[410,410]]],[1567339690412,["GJX@GJXAIOU",[[1,649,"* \n"]],[648,648],[651,651]]],[1567339691588,["GJX@GJXAIOU",[[1,649,"### "]],[651,651],[655,655]]],[1567339692966,["GJX@GJXAIOU",[[-1,654," "]],[655,655],[654,654]]],[1567339693466,["GJX@GJXAIOU",[[1,654,"(0"]],[654,654],[656,656]]],[1567339695066,["GJX@GJXAIOU",[[-1,653,"*(0"]],[656,656],[653,653]]],[1567339696139,["GJX@GJXAIOU",[[1,653,"（）"]],[653,653],[655,655]]],[1567339697988,["GJX@GJXAIOU",[[1,654,"二"]],[654,654],[655,655]]],[1567339702871,["GJX@GJXAIOU",[[1,656,"程序代码"]],[656,656],[660,660]]],[1567339706162,["GJX@GJXAIOU",[[1,649,"* \n"]],[648,648],[651,651]]],[1567339707091,["GJX@GJXAIOU",[[-1,649,"* "]],[651,651],[649,649]]],[1567339728889,["GJX@GJXAIOU",[[1,650,"\n"]],[649,649],[650,650]]],[1567339729019,["GJX@GJXAIOU",[[1,651,"\n"]],[650,650],[651,651]]],[1567339729154,["GJX@GJXAIOU",[[1,652,"\n"]],[651,651],[652,652]]],[1567339736898,["GJX@GJXAIOU",[[1,650,"![LeetCode3]($resource/LeetCode3.gif)"]],[650,650],[688,688]]],[1567339766570,["GJX@GJXAIOU",[[1,33,"\n"]],[32,32],[33,33]]],[1567339769485,["GJX@GJXAIOU",[[1,33,"- 哈希表"]],[33,33],[38,38]]],[1567339769829,["GJX@GJXAIOU",[[1,39,"\n"]],[38,38],[39,39]]],[1567339779524,["GJX@GJXAIOU",[[1,39,"- 滑动窗口"]],[39,39],[45,45]]],[1567340787384,["GJX@GJXAIOU",[[1,723,"public "],[1,729,"LeetCode3_Longest_"],[1,730,"ubstring_With"],[-1,731,"l"],[1,734,"_Repeat"],[-1,735,"o"],[1,737,"g_Characters"],[-1,829,"      "],[1,864,"，初始化为空窗口"],[1,867,"//"],[1,868,"到"],[1,869,"left"],[1,870,"=="],[1,871,"s.length(); right = s.length() - 1 窗口截至；\n"],[-1,888,"       "],[-1,911,"       "],[-1,931,"\n\n"],[1,937,"//"],[1,938,"在每次循环里逐渐改变窗口,"],[1,939,"维护freq, 并记录当前窗口中是否找到了一个新的最优值\n"],[-1,1074,"              "],[-1,1092," "],[-1,1114,"          "],[1,1150,"// right已经到头 || "],[1,1154,"[s[r+1]]"],[1,1155,"== 1  freq"],[-1,1177,"              "],[-1,1199,"          "],[-1,1286,"      "],[1,1292,""],[-1,1314,"  "]],[723,1321],[1433,1433]]],[1567340794694,["GJX@GJXAIOU",[[-1,723,"public "],[-1,736,"LeetCode3_Longest_"],[-1,755,"ubstring_With"],[1,769,"l"],[-1,771,"_Repeat"],[1,779,"o"],[-1,780,"g_Characters"],[1,884,"      "],[-1,913,"，初始化为空窗口"],[-1,924,"//"],[-1,927,"到"],[-1,929,"left"],[-1,934,"=="],[-1,937,"s.length(); right = s.length() - 1 窗口截至；\n"],[1,995,"       "],[1,1011,"       "],[1,1024,"\n\n"],[-1,1028,"//"],[-1,1031,"在每次循环里逐渐改变窗口,"],[-1,1045,"维护freq, 并记录当前窗口中是否找到了一个新的最优值\n"],[1,1209,"              "],[1,1213," "],[1,1234,"          "],[-1,1260,"// right已经到头 || "],[-1,1280,"[s[r+1]]"],[-1,1289,"== 1  freq"],[1,1321,"              "],[1,1329,"          "],[1,1406,"      "],[-1,1406,""],[1,1428,"  "]],[1433,1433],[723,1321]]],[1567340796724,["GJX@GJXAIOU",[[1,723,"public "],[1,729,"LeetCode3_Longest_"],[1,730,"ubstring_With"],[-1,731,"l"],[1,734,"_Repeat"],[-1,735,"o"],[1,737,"g_Characters"],[-1,864,""],[1,864,"，初始化为空窗口\n        // 到 left == s.length(); right = s.length() - 1 窗口截至；"],[1,933,"        // 在每次循环里逐渐改变窗口, 维护freq, 并记录当前窗口中是否找到了一个新的最优值\n"],[-1,1092," "],[1,1150,"// right已经到头 || "],[1,1154,"[s[r+1]]"],[1,1155,"== 1\n                freq"]],[723,1321],[1548,1548]]],[1567340799818,["GJX@GJXAIOU",[[1,1630,"\n"]],[1629,1629],[1630,1630]]],[1567340799930,["GJX@GJXAIOU",[[1,1631,"\n"]],[1630,1630],[1631,1631]]],[1567340800313,["GJX@GJXAIOU",[[1,1632,"\n"]],[1631,1631],[1632,1632]]],[1567340801243,["GJX@GJXAIOU",[[-1,1632,"\n"],[1,1633,"-"]],[1632,1632],[1633,1633]]],[1567340805881,["GJX@GJXAIOU",[[1,1633," 上述代码的优化：\n- "]],[1633,1633],[1645,1645]]],[1567340806818,["GJX@GJXAIOU",[[-1,1644," "]],[1645,1645],[1644,1644]]],[1567340806937,["GJX@GJXAIOU",[[-1,1643,"-"],[1,1644,"\n"]],[1644,1644],[1643,1643]]],[1567340842716,["GJX@GJXAIOU",[[1,1643,"定义一个 map 数据结构存储 (k, v)，其中 key 值为字符，value 值为字符位置 +1，加 1 表示从字符位置后一个才开始不重复\n我们定义不重复子串的开始位置为 start，结束位置为 end\n随着 end 不断遍历向后，会遇到与 [start, end] 区间内字符相同的情况，此时将字符作为 key 值，获取其 value 值，并更新 start，此时 [start, end] 区间内不存在重复字符\n无论是否更新 start，都会更新其 map 数据结构和结果 ans。\n时间复杂度：O(n)O(n)\n\n作者：guanpengchn\n链接：https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/hua-jie-suan-fa-3-wu-zhong-fu-zi-fu-de-zui-chang-z/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[1643,1643],[2114,2114]]],[1567340859002,["GJX@GJXAIOU",[[1,1642,"如果有重复，left直接"]],[1642,1642],[1654,1654]]],[1567340859028,["GJX@GJXAIOU",[[1,1652," "]],[1654,1654],[1655,1655]]],[1567340867092,["GJX@GJXAIOU",[[1,1655,"跳到重复位置  + 1kaishi"]],[1655,1655],[1672,1672]]],[1567340868145,["GJX@GJXAIOU",[[-1,1666,"kaishi"]],[1672,1672],[1666,1666]]],[1567340870253,["GJX@GJXAIOU",[[1,1666,"开始"]],[1666,1666],[1668,1668]]],[1567340870280,["GJX@GJXAIOU",[[1,1666," "]],[1668,1668],[1669,1669]]],[1567340874826,["GJX@GJXAIOU",[[1,1669,"，不用慢慢+1；"]],[1669,1669],[1677,1677]]],[1567340880200,["GJX@GJXAIOU",[[1,1678,"- "],[1,1750,"- "],[1,1782,"- "],[1,1888,"- "],[1,1924,"- "]],[1678,1939],[1680,1949]]],[1567340886184,["GJX@GJXAIOU",[[1,1678,"  "],[1,1752,"  "],[1,1786,"  "],[1,1894,"  "],[1,1932,"  "]],[1678,1948],[1678,1958]]],[1567340888699,["GJX@GJXAIOU",[[-1,1954,"O(n)"]],[1958,1958],[1954,1954]]],[1567340891832,["GJX@GJXAIOU",[[-1,1956,"作者：guanpengchn\n链接：https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/hua-jie-suan-fa-3-wu-zhong-fu-zi-fu-de-zui-chang-z/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[1956,2165],[1956,1956]]],[1567340959124,["GJX@GJXAIOU",[[1,1753,"；"]],[1753,1753],[1754,1754]]],[1567340961394,["GJX@GJXAIOU",[[1,1790,"；"]],[1790,1790],[1791,1791]]],[1567340986154,["GJX@GJXAIOU",[[1,1839,"**"],[1,1864,"**"]],[1839,1864],[1839,1868]]],[1567341002899,["GJX@GJXAIOU",[[1,1961,"```"]],[1961,1961],[1964,1964]]],[1567341002925,["GJX@GJXAIOU",[[1,1964,"language\n```\n"]],[1964,1964],[1964,1972]]],[1567341003604,["GJX@GJXAIOU",[[-1,1964,"language"],[1,1972,"j"]],[1964,1972],[1965,1965]]],[1567341003924,["GJX@GJXAIOU",[[1,1965,"ava"]],[1965,1965],[1968,1968]]],[1567341004113,["GJX@GJXAIOU",[[1,1969,"\n"]],[1968,1968],[1969,1969]]],[1567341028122,["GJX@GJXAIOU",[[1,1969,"class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        int n = s.length(), ans = 0;\n        Map<Character, Integer> map = new HashMap<>();\n        for (int end = 0, start = 0; end < n; end++) {\n            char alpha = s.charAt(end);\n            if (map.containsKey(alpha)) {\n                start = Math.max(map.get(alpha), start);\n            }\n            ans = Math.max(ans, end - start + 1);\n            map.put(s.charAt(end), end + 1);\n        }\n        return ans;\n    }\n}\n\n作者：guanpengchn\n链接：https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/hua-jie-suan-fa-3-wu-zhong-fu-zi-fu-de-zui-chang-z/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[1969,1969],[2681,2681]]],[1567341032064,["GJX@GJXAIOU",[[-1,2472,"作者：guanpengchn\n链接：https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/hua-jie-suan-fa-3-wu-zhong-fu-zi-fu-de-zui-chang-z/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[2472,2681],[2472,2472]]],[1567341032337,["GJX@GJXAIOU",[[-1,2472,"\n"]],[2472,2472],[2471,2471]]],[1567341034651,["GJX@GJXAIOU",[[1,2478,"\n"]],[2475,2475],[2476,2476]]],[1567341034764,["GJX@GJXAIOU",[[1,2479,"\n"]],[2476,2476],[2477,2477]]],[1567341147529,["GJX@GJXAIOU",[[1,2477,"![LeetCode3动画]($resource/LeetCode3%E5%8A%A8%E7%94%BB.gif)"]],[2477,2477],[2535,2535]]],[1567344406351,["GJX@GJXAIOU",[[-1,2050,"n"]],[2051,2051],[2050,2050]]],[1567344407826,["GJX@GJXAIOU",[[1,2050,"length"]],[2050,2050],[2056,2056]]],[1567344412466,["GJX@GJXAIOU",[[-1,2178,"n"]],[2179,2179],[2178,2178]]],[1567344415383,["GJX@GJXAIOU",[[1,2178,"length"]],[2178,2178],[2184,2184]]],[1567344629766,["GJX@GJXAIOU",[[-1,2301,"Math.max("],[1,2310,"map.get(alpha) > start ? "],[-1,2324,","],[1,2325," :"],[-1,2331,")"],[-1,2366,"Math.max(ans,"],[1,2379,"ans > end - start + 1 ? ans :"],[-1,2395,")"]],[1969,2480],[2511,2511]]],[1567344660000,["GJX@GJXAIOU",[[1,2517,"执行用时 :\n25 ms\n, 在所有 Java 提交中击败了\n68.08%\n的用户\n内存消耗 :\n39.8 MB\n, 在所有 Java 提交中击败了\n77.10%\n的用户"]],[2517,2517],[2602,2602]]],[1567344663075,["GJX@GJXAIOU",[[-1,2517,"执行用时 :\n25 ms\n, 在所有 Java 提交中击败了\n68.08%\n的用户\n内存消耗 :\n39.8 MB\n, 在所有 Java 提交中击败了\n77.10%\n的用户"]],[2602,2602],[2517,2517]]],[1567344664907,["GJX@GJXAIOU",[[1,2517,"执行用时 :25 ms, 在所有 Java 提交中击败了68.08%的用户\n\n内存消耗 :39.8 MB, 在所有 Java 提交中击败了77.10%的用户"]],[2517,2517],[2595,2595]]],[1567344769169,["GJX@GJXAIOU",[[-1,84,"8-28"]],[88,88],[84,84]]],[1567344770047,["GJX@GJXAIOU",[[1,84,"9"],[-1,2529," "],[1,2530," "],[-1,2534," "],[1,2535," "],[-1,2570," "],[1,2571," "],[-1,2575," "],[1,2576," "]],[84,84],[85,85]]],[1567344770232,["GJX@GJXAIOU",[[1,85," "]],[85,85],[86,86]]],[1567344771313,["GJX@GJXAIOU",[[-1,85," "]],[86,86],[85,85]]],[1567344771671,["GJX@GJXAIOU",[[1,85,"-"]],[85,85],[86,86]]],[1567344772097,["GJX@GJXAIOU",[[1,87,"1"]],[87,87],[88,88]]]],null,"GJX@GJXAIOU"]]}